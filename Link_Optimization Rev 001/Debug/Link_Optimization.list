
Link_Optimization.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000069d4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000634  08006b78  08006b78  00016b78  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080071ac  080071ac  000201f4  2**0
                  CONTENTS
  4 .ARM          00000000  080071ac  080071ac  000201f4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080071ac  080071ac  000201f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080071ac  080071ac  000171ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080071b0  080071b0  000171b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f4  20000000  080071b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000195c  200001f4  080073a8  000201f4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001b50  080073a8  00021b50  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201f4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020224  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000303a  00000000  00000000  00020267  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001063  00000000  00000000  000232a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000310  00000000  00000000  00024308  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000216  00000000  00000000  00024618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00010c4d  00000000  00000000  0002482e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00005b83  00000000  00000000  0003547b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00056c47  00000000  00000000  0003affe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001edc  00000000  00000000  00091c48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000092  00000000  00000000  00093b24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f4 	.word	0x200001f4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006b5c 	.word	0x08006b5c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001f8 	.word	0x200001f8
 80001dc:	08006b5c 	.word	0x08006b5c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <PID_Controller_X>:

// Current Position (measured process variable)
/*********xPos***************/


int PID_Controller_X(int signed vectorX) {
 8000d04:	b480      	push	{r7}
 8000d06:	b083      	sub	sp, #12
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	6078      	str	r0, [r7, #4]
    // Calculate error
    error_x = vectorX;
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	ee07 3a90 	vmov	s15, r3
 8000d12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000d16:	4b2f      	ldr	r3, [pc, #188]	; (8000dd4 <PID_Controller_X+0xd0>)
 8000d18:	edc3 7a00 	vstr	s15, [r3]
    // Calculate integral

    integral_x += error_x * DT;
 8000d1c:	4b2d      	ldr	r3, [pc, #180]	; (8000dd4 <PID_Controller_X+0xd0>)
 8000d1e:	ed93 7a00 	vldr	s14, [r3]
 8000d22:	4b2d      	ldr	r3, [pc, #180]	; (8000dd8 <PID_Controller_X+0xd4>)
 8000d24:	edd3 7a00 	vldr	s15, [r3]
 8000d28:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000d2c:	4b2b      	ldr	r3, [pc, #172]	; (8000ddc <PID_Controller_X+0xd8>)
 8000d2e:	edd3 7a00 	vldr	s15, [r3]
 8000d32:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000d36:	4b29      	ldr	r3, [pc, #164]	; (8000ddc <PID_Controller_X+0xd8>)
 8000d38:	edc3 7a00 	vstr	s15, [r3]
    // Calculate derivative
    derivative_x = (error_x - prev_error_x) / DT;
 8000d3c:	4b25      	ldr	r3, [pc, #148]	; (8000dd4 <PID_Controller_X+0xd0>)
 8000d3e:	ed93 7a00 	vldr	s14, [r3]
 8000d42:	4b27      	ldr	r3, [pc, #156]	; (8000de0 <PID_Controller_X+0xdc>)
 8000d44:	edd3 7a00 	vldr	s15, [r3]
 8000d48:	ee77 6a67 	vsub.f32	s13, s14, s15
 8000d4c:	4b22      	ldr	r3, [pc, #136]	; (8000dd8 <PID_Controller_X+0xd4>)
 8000d4e:	ed93 7a00 	vldr	s14, [r3]
 8000d52:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000d56:	4b23      	ldr	r3, [pc, #140]	; (8000de4 <PID_Controller_X+0xe0>)
 8000d58:	edc3 7a00 	vstr	s15, [r3]

    // Calculate PID output
    output_x = KP * error_x + KI * integral_x + KD * derivative_x;
 8000d5c:	4b22      	ldr	r3, [pc, #136]	; (8000de8 <PID_Controller_X+0xe4>)
 8000d5e:	ed93 7a00 	vldr	s14, [r3]
 8000d62:	4b1c      	ldr	r3, [pc, #112]	; (8000dd4 <PID_Controller_X+0xd0>)
 8000d64:	edd3 7a00 	vldr	s15, [r3]
 8000d68:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000d6c:	4b1f      	ldr	r3, [pc, #124]	; (8000dec <PID_Controller_X+0xe8>)
 8000d6e:	edd3 6a00 	vldr	s13, [r3]
 8000d72:	4b1a      	ldr	r3, [pc, #104]	; (8000ddc <PID_Controller_X+0xd8>)
 8000d74:	edd3 7a00 	vldr	s15, [r3]
 8000d78:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000d80:	4b1b      	ldr	r3, [pc, #108]	; (8000df0 <PID_Controller_X+0xec>)
 8000d82:	edd3 6a00 	vldr	s13, [r3]
 8000d86:	4b17      	ldr	r3, [pc, #92]	; (8000de4 <PID_Controller_X+0xe0>)
 8000d88:	edd3 7a00 	vldr	s15, [r3]
 8000d8c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d90:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000d94:	4b17      	ldr	r3, [pc, #92]	; (8000df4 <PID_Controller_X+0xf0>)
 8000d96:	edc3 7a00 	vstr	s15, [r3]


    // Update previous error
    prev_error_x = error_x;
 8000d9a:	4b0e      	ldr	r3, [pc, #56]	; (8000dd4 <PID_Controller_X+0xd0>)
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	4a10      	ldr	r2, [pc, #64]	; (8000de0 <PID_Controller_X+0xdc>)
 8000da0:	6013      	str	r3, [r2, #0]

    xCmd += output_x;
 8000da2:	4b15      	ldr	r3, [pc, #84]	; (8000df8 <PID_Controller_X+0xf4>)
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	ee07 3a90 	vmov	s15, r3
 8000daa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000dae:	4b11      	ldr	r3, [pc, #68]	; (8000df4 <PID_Controller_X+0xf0>)
 8000db0:	edd3 7a00 	vldr	s15, [r3]
 8000db4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000db8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000dbc:	ee17 2a90 	vmov	r2, s15
 8000dc0:	4b0d      	ldr	r3, [pc, #52]	; (8000df8 <PID_Controller_X+0xf4>)
 8000dc2:	601a      	str	r2, [r3, #0]

}
 8000dc4:	bf00      	nop
 8000dc6:	4618      	mov	r0, r3
 8000dc8:	370c      	adds	r7, #12
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	20000218 	.word	0x20000218
 8000dd8:	20000004 	.word	0x20000004
 8000ddc:	20000220 	.word	0x20000220
 8000de0:	2000021c 	.word	0x2000021c
 8000de4:	20000224 	.word	0x20000224
 8000de8:	20000000 	.word	0x20000000
 8000dec:	20000210 	.word	0x20000210
 8000df0:	20000214 	.word	0x20000214
 8000df4:	20000228 	.word	0x20000228
 8000df8:	20000270 	.word	0x20000270

08000dfc <PID_Controller_Y>:

int PID_Controller_Y(int signed vectorY)
{
 8000dfc:	b480      	push	{r7}
 8000dfe:	b083      	sub	sp, #12
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	6078      	str	r0, [r7, #4]
	  error_y = vectorY;
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	ee07 3a90 	vmov	s15, r3
 8000e0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000e0e:	4b2f      	ldr	r3, [pc, #188]	; (8000ecc <PID_Controller_Y+0xd0>)
 8000e10:	edc3 7a00 	vstr	s15, [r3]


	  integral_y += error_y * DT;
 8000e14:	4b2d      	ldr	r3, [pc, #180]	; (8000ecc <PID_Controller_Y+0xd0>)
 8000e16:	ed93 7a00 	vldr	s14, [r3]
 8000e1a:	4b2d      	ldr	r3, [pc, #180]	; (8000ed0 <PID_Controller_Y+0xd4>)
 8000e1c:	edd3 7a00 	vldr	s15, [r3]
 8000e20:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e24:	4b2b      	ldr	r3, [pc, #172]	; (8000ed4 <PID_Controller_Y+0xd8>)
 8000e26:	edd3 7a00 	vldr	s15, [r3]
 8000e2a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e2e:	4b29      	ldr	r3, [pc, #164]	; (8000ed4 <PID_Controller_Y+0xd8>)
 8000e30:	edc3 7a00 	vstr	s15, [r3]

	  derivative_y = (error_y - prev_error_y) / DT;
 8000e34:	4b25      	ldr	r3, [pc, #148]	; (8000ecc <PID_Controller_Y+0xd0>)
 8000e36:	ed93 7a00 	vldr	s14, [r3]
 8000e3a:	4b27      	ldr	r3, [pc, #156]	; (8000ed8 <PID_Controller_Y+0xdc>)
 8000e3c:	edd3 7a00 	vldr	s15, [r3]
 8000e40:	ee77 6a67 	vsub.f32	s13, s14, s15
 8000e44:	4b22      	ldr	r3, [pc, #136]	; (8000ed0 <PID_Controller_Y+0xd4>)
 8000e46:	ed93 7a00 	vldr	s14, [r3]
 8000e4a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000e4e:	4b23      	ldr	r3, [pc, #140]	; (8000edc <PID_Controller_Y+0xe0>)
 8000e50:	edc3 7a00 	vstr	s15, [r3]

	  output_y = KP * error_y + KI * integral_y + KD * derivative_y;
 8000e54:	4b22      	ldr	r3, [pc, #136]	; (8000ee0 <PID_Controller_Y+0xe4>)
 8000e56:	ed93 7a00 	vldr	s14, [r3]
 8000e5a:	4b1c      	ldr	r3, [pc, #112]	; (8000ecc <PID_Controller_Y+0xd0>)
 8000e5c:	edd3 7a00 	vldr	s15, [r3]
 8000e60:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e64:	4b1f      	ldr	r3, [pc, #124]	; (8000ee4 <PID_Controller_Y+0xe8>)
 8000e66:	edd3 6a00 	vldr	s13, [r3]
 8000e6a:	4b1a      	ldr	r3, [pc, #104]	; (8000ed4 <PID_Controller_Y+0xd8>)
 8000e6c:	edd3 7a00 	vldr	s15, [r3]
 8000e70:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e74:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000e78:	4b1b      	ldr	r3, [pc, #108]	; (8000ee8 <PID_Controller_Y+0xec>)
 8000e7a:	edd3 6a00 	vldr	s13, [r3]
 8000e7e:	4b17      	ldr	r3, [pc, #92]	; (8000edc <PID_Controller_Y+0xe0>)
 8000e80:	edd3 7a00 	vldr	s15, [r3]
 8000e84:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e88:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e8c:	4b17      	ldr	r3, [pc, #92]	; (8000eec <PID_Controller_Y+0xf0>)
 8000e8e:	edc3 7a00 	vstr	s15, [r3]

	  prev_error_y = error_y;
 8000e92:	4b0e      	ldr	r3, [pc, #56]	; (8000ecc <PID_Controller_Y+0xd0>)
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	4a10      	ldr	r2, [pc, #64]	; (8000ed8 <PID_Controller_Y+0xdc>)
 8000e98:	6013      	str	r3, [r2, #0]

	  yCmd += output_y;
 8000e9a:	4b15      	ldr	r3, [pc, #84]	; (8000ef0 <PID_Controller_Y+0xf4>)
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	ee07 3a90 	vmov	s15, r3
 8000ea2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000ea6:	4b11      	ldr	r3, [pc, #68]	; (8000eec <PID_Controller_Y+0xf0>)
 8000ea8:	edd3 7a00 	vldr	s15, [r3]
 8000eac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000eb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000eb4:	ee17 2a90 	vmov	r2, s15
 8000eb8:	4b0d      	ldr	r3, [pc, #52]	; (8000ef0 <PID_Controller_Y+0xf4>)
 8000eba:	601a      	str	r2, [r3, #0]

}
 8000ebc:	bf00      	nop
 8000ebe:	4618      	mov	r0, r3
 8000ec0:	370c      	adds	r7, #12
 8000ec2:	46bd      	mov	sp, r7
 8000ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop
 8000ecc:	2000022c 	.word	0x2000022c
 8000ed0:	20000004 	.word	0x20000004
 8000ed4:	20000234 	.word	0x20000234
 8000ed8:	20000230 	.word	0x20000230
 8000edc:	20000238 	.word	0x20000238
 8000ee0:	20000000 	.word	0x20000000
 8000ee4:	20000210 	.word	0x20000210
 8000ee8:	20000214 	.word	0x20000214
 8000eec:	2000023c 	.word	0x2000023c
 8000ef0:	20000274 	.word	0x20000274

08000ef4 <Motor_Position>:
uint16_t count;
bool move_done;
//volatile uint32_t msTicks;

void Motor_Position(void)
{
 8000ef4:	b480      	push	{r7}
 8000ef6:	af00      	add	r7, sp, #0



	TIM2->CCR1 = xPos;
 8000ef8:	4b07      	ldr	r3, [pc, #28]	; (8000f18 <Motor_Position+0x24>)
 8000efa:	681a      	ldr	r2, [r3, #0]
 8000efc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000f00:	635a      	str	r2, [r3, #52]	; 0x34
	TIM2->CCR2 = yPos;
 8000f02:	4b06      	ldr	r3, [pc, #24]	; (8000f1c <Motor_Position+0x28>)
 8000f04:	681a      	ldr	r2, [r3, #0]
 8000f06:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000f0a:	639a      	str	r2, [r3, #56]	; 0x38
//	printf("xpos: %f\n\r", xPos);
//	printf("ypos: %f\n\r", yPos);



}
 8000f0c:	bf00      	nop
 8000f0e:	46bd      	mov	sp, r7
 8000f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f14:	4770      	bx	lr
 8000f16:	bf00      	nop
 8000f18:	2000001c 	.word	0x2000001c
 8000f1c:	20000020 	.word	0x20000020

08000f20 <control_X>:


void control_X(void)
{
 8000f20:	b480      	push	{r7}
 8000f22:	af00      	add	r7, sp, #0
	step_size_x = (xCmd - xPos)/deltX;
 8000f24:	4b0f      	ldr	r3, [pc, #60]	; (8000f64 <control_X+0x44>)
 8000f26:	681a      	ldr	r2, [r3, #0]
 8000f28:	4b0f      	ldr	r3, [pc, #60]	; (8000f68 <control_X+0x48>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	1ad3      	subs	r3, r2, r3
 8000f2e:	ee07 3a90 	vmov	s15, r3
 8000f32:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f36:	4b0d      	ldr	r3, [pc, #52]	; (8000f6c <control_X+0x4c>)
 8000f38:	ed93 7a00 	vldr	s14, [r3]
 8000f3c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f44:	ee17 2a90 	vmov	r2, s15
 8000f48:	4b09      	ldr	r3, [pc, #36]	; (8000f70 <control_X+0x50>)
 8000f4a:	601a      	str	r2, [r3, #0]
	xPos += step_size_x;
 8000f4c:	4b06      	ldr	r3, [pc, #24]	; (8000f68 <control_X+0x48>)
 8000f4e:	681a      	ldr	r2, [r3, #0]
 8000f50:	4b07      	ldr	r3, [pc, #28]	; (8000f70 <control_X+0x50>)
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	4413      	add	r3, r2
 8000f56:	4a04      	ldr	r2, [pc, #16]	; (8000f68 <control_X+0x48>)
 8000f58:	6013      	str	r3, [r2, #0]

}
 8000f5a:	bf00      	nop
 8000f5c:	46bd      	mov	sp, r7
 8000f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f62:	4770      	bx	lr
 8000f64:	20000270 	.word	0x20000270
 8000f68:	2000001c 	.word	0x2000001c
 8000f6c:	20000008 	.word	0x20000008
 8000f70:	20000240 	.word	0x20000240

08000f74 <control_Y>:


void control_Y(void)
{
 8000f74:	b480      	push	{r7}
 8000f76:	af00      	add	r7, sp, #0
	step_size_y = (yCmd - yPos)/deltY;
 8000f78:	4b0f      	ldr	r3, [pc, #60]	; (8000fb8 <control_Y+0x44>)
 8000f7a:	681a      	ldr	r2, [r3, #0]
 8000f7c:	4b0f      	ldr	r3, [pc, #60]	; (8000fbc <control_Y+0x48>)
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	1ad3      	subs	r3, r2, r3
 8000f82:	ee07 3a90 	vmov	s15, r3
 8000f86:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f8a:	4b0d      	ldr	r3, [pc, #52]	; (8000fc0 <control_Y+0x4c>)
 8000f8c:	ed93 7a00 	vldr	s14, [r3]
 8000f90:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f98:	ee17 2a90 	vmov	r2, s15
 8000f9c:	4b09      	ldr	r3, [pc, #36]	; (8000fc4 <control_Y+0x50>)
 8000f9e:	601a      	str	r2, [r3, #0]
	yPos += step_size_y;
 8000fa0:	4b06      	ldr	r3, [pc, #24]	; (8000fbc <control_Y+0x48>)
 8000fa2:	681a      	ldr	r2, [r3, #0]
 8000fa4:	4b07      	ldr	r3, [pc, #28]	; (8000fc4 <control_Y+0x50>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	4413      	add	r3, r2
 8000faa:	4a04      	ldr	r2, [pc, #16]	; (8000fbc <control_Y+0x48>)
 8000fac:	6013      	str	r3, [r2, #0]
}
 8000fae:	bf00      	nop
 8000fb0:	46bd      	mov	sp, r7
 8000fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb6:	4770      	bx	lr
 8000fb8:	20000274 	.word	0x20000274
 8000fbc:	20000020 	.word	0x20000020
 8000fc0:	2000000c 	.word	0x2000000c
 8000fc4:	20000244 	.word	0x20000244

08000fc8 <motor_control>:

void motor_control(void)
{
 8000fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000fca:	b08d      	sub	sp, #52	; 0x34
 8000fcc:	af08      	add	r7, sp, #32
	step_size_x = (xCmd - xPos)/deltX + 1;
 8000fce:	4b3c      	ldr	r3, [pc, #240]	; (80010c0 <motor_control+0xf8>)
 8000fd0:	681a      	ldr	r2, [r3, #0]
 8000fd2:	4b3c      	ldr	r3, [pc, #240]	; (80010c4 <motor_control+0xfc>)
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	1ad3      	subs	r3, r2, r3
 8000fd8:	ee07 3a90 	vmov	s15, r3
 8000fdc:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000fe0:	4b39      	ldr	r3, [pc, #228]	; (80010c8 <motor_control+0x100>)
 8000fe2:	ed93 7a00 	vldr	s14, [r3]
 8000fe6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000fea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8000fee:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000ff2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000ff6:	ee17 2a90 	vmov	r2, s15
 8000ffa:	4b34      	ldr	r3, [pc, #208]	; (80010cc <motor_control+0x104>)
 8000ffc:	601a      	str	r2, [r3, #0]
	xPos += step_size_x;
 8000ffe:	4b31      	ldr	r3, [pc, #196]	; (80010c4 <motor_control+0xfc>)
 8001000:	681a      	ldr	r2, [r3, #0]
 8001002:	4b32      	ldr	r3, [pc, #200]	; (80010cc <motor_control+0x104>)
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	4413      	add	r3, r2
 8001008:	4a2e      	ldr	r2, [pc, #184]	; (80010c4 <motor_control+0xfc>)
 800100a:	6013      	str	r3, [r2, #0]

	step_size_y = (yCmd - yPos)/deltY + 1;
 800100c:	4b30      	ldr	r3, [pc, #192]	; (80010d0 <motor_control+0x108>)
 800100e:	681a      	ldr	r2, [r3, #0]
 8001010:	4b30      	ldr	r3, [pc, #192]	; (80010d4 <motor_control+0x10c>)
 8001012:	681b      	ldr	r3, [r3, #0]
 8001014:	1ad3      	subs	r3, r2, r3
 8001016:	ee07 3a90 	vmov	s15, r3
 800101a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800101e:	4b2e      	ldr	r3, [pc, #184]	; (80010d8 <motor_control+0x110>)
 8001020:	ed93 7a00 	vldr	s14, [r3]
 8001024:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800102c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001030:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001034:	ee17 2a90 	vmov	r2, s15
 8001038:	4b28      	ldr	r3, [pc, #160]	; (80010dc <motor_control+0x114>)
 800103a:	601a      	str	r2, [r3, #0]
	yPos += step_size_y;
 800103c:	4b25      	ldr	r3, [pc, #148]	; (80010d4 <motor_control+0x10c>)
 800103e:	681a      	ldr	r2, [r3, #0]
 8001040:	4b26      	ldr	r3, [pc, #152]	; (80010dc <motor_control+0x114>)
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	4413      	add	r3, r2
 8001046:	4a23      	ldr	r2, [pc, #140]	; (80010d4 <motor_control+0x10c>)
 8001048:	6013      	str	r3, [r2, #0]

	if(step_size_x == 0 && step_size_y == 0 )
 800104a:	4b20      	ldr	r3, [pc, #128]	; (80010cc <motor_control+0x104>)
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	2b00      	cmp	r3, #0
 8001050:	d107      	bne.n	8001062 <motor_control+0x9a>
 8001052:	4b22      	ldr	r3, [pc, #136]	; (80010dc <motor_control+0x114>)
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	2b00      	cmp	r3, #0
 8001058:	d103      	bne.n	8001062 <motor_control+0x9a>
	{
		move_done = true;
 800105a:	4b21      	ldr	r3, [pc, #132]	; (80010e0 <motor_control+0x118>)
 800105c:	2201      	movs	r2, #1
 800105e:	701a      	strb	r2, [r3, #0]
 8001060:	e002      	b.n	8001068 <motor_control+0xa0>
	}
	else
	{
		move_done = false;
 8001062:	4b1f      	ldr	r3, [pc, #124]	; (80010e0 <motor_control+0x118>)
 8001064:	2200      	movs	r2, #0
 8001066:	701a      	strb	r2, [r3, #0]
	}
	printf("xC:%i xP:%i Dx: %f yC:%i yP:%i Dy:%f MoveDone:%i\n\r", xCmd, xPos, deltX, yCmd, yPos, deltY, move_done);
 8001068:	4b15      	ldr	r3, [pc, #84]	; (80010c0 <motor_control+0xf8>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	60fb      	str	r3, [r7, #12]
 800106e:	4b15      	ldr	r3, [pc, #84]	; (80010c4 <motor_control+0xfc>)
 8001070:	681a      	ldr	r2, [r3, #0]
 8001072:	60ba      	str	r2, [r7, #8]
 8001074:	4b14      	ldr	r3, [pc, #80]	; (80010c8 <motor_control+0x100>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	4618      	mov	r0, r3
 800107a:	f7ff fa6d 	bl	8000558 <__aeabi_f2d>
 800107e:	4604      	mov	r4, r0
 8001080:	460d      	mov	r5, r1
 8001082:	4b13      	ldr	r3, [pc, #76]	; (80010d0 <motor_control+0x108>)
 8001084:	681e      	ldr	r6, [r3, #0]
 8001086:	4b13      	ldr	r3, [pc, #76]	; (80010d4 <motor_control+0x10c>)
 8001088:	6818      	ldr	r0, [r3, #0]
 800108a:	6078      	str	r0, [r7, #4]
 800108c:	4b12      	ldr	r3, [pc, #72]	; (80010d8 <motor_control+0x110>)
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	4618      	mov	r0, r3
 8001092:	f7ff fa61 	bl	8000558 <__aeabi_f2d>
 8001096:	4602      	mov	r2, r0
 8001098:	460b      	mov	r3, r1
 800109a:	4911      	ldr	r1, [pc, #68]	; (80010e0 <motor_control+0x118>)
 800109c:	7809      	ldrb	r1, [r1, #0]
 800109e:	9106      	str	r1, [sp, #24]
 80010a0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80010a4:	6878      	ldr	r0, [r7, #4]
 80010a6:	9003      	str	r0, [sp, #12]
 80010a8:	9602      	str	r6, [sp, #8]
 80010aa:	e9cd 4500 	strd	r4, r5, [sp]
 80010ae:	68ba      	ldr	r2, [r7, #8]
 80010b0:	68f9      	ldr	r1, [r7, #12]
 80010b2:	480c      	ldr	r0, [pc, #48]	; (80010e4 <motor_control+0x11c>)
 80010b4:	f002 f8a2 	bl	80031fc <iprintf>
}
 80010b8:	bf00      	nop
 80010ba:	3714      	adds	r7, #20
 80010bc:	46bd      	mov	sp, r7
 80010be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010c0:	20000270 	.word	0x20000270
 80010c4:	2000001c 	.word	0x2000001c
 80010c8:	20000008 	.word	0x20000008
 80010cc:	20000240 	.word	0x20000240
 80010d0:	20000274 	.word	0x20000274
 80010d4:	20000020 	.word	0x20000020
 80010d8:	2000000c 	.word	0x2000000c
 80010dc:	20000244 	.word	0x20000244
 80010e0:	2000024a 	.word	0x2000024a
 80010e4:	08006b78 	.word	0x08006b78

080010e8 <Read_RSSI>:
    return min + rand() % (max - min + 1);
}
float frssiTemp = -1000;

signed char Read_RSSI() // Change return type to uint32_t
{
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b084      	sub	sp, #16
 80010ec:	af00      	add	r7, sp, #0

//	}
	frssiY = -1000;
 80010ee:	4b1c      	ldr	r3, [pc, #112]	; (8001160 <Read_RSSI+0x78>)
 80010f0:	4a1c      	ldr	r2, [pc, #112]	; (8001164 <Read_RSSI+0x7c>)
 80010f2:	601a      	str	r2, [r3, #0]

    for (int j = 0; j< 15; j++)
 80010f4:	2300      	movs	r3, #0
 80010f6:	60fb      	str	r3, [r7, #12]
 80010f8:	e021      	b.n	800113e <Read_RSSI+0x56>
    {
    	d = Uart1_Read();
 80010fa:	f001 f873 	bl	80021e4 <Uart1_Read>
 80010fe:	4603      	mov	r3, r0
 8001100:	b25a      	sxtb	r2, r3
 8001102:	4b19      	ldr	r3, [pc, #100]	; (8001168 <Read_RSSI+0x80>)
 8001104:	701a      	strb	r2, [r3, #0]
    	frssiTemp = d;
 8001106:	4b18      	ldr	r3, [pc, #96]	; (8001168 <Read_RSSI+0x80>)
 8001108:	f993 3000 	ldrsb.w	r3, [r3]
 800110c:	ee07 3a90 	vmov	s15, r3
 8001110:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001114:	4b15      	ldr	r3, [pc, #84]	; (800116c <Read_RSSI+0x84>)
 8001116:	edc3 7a00 	vstr	s15, [r3]
    	if (frssiTemp > frssiY)
 800111a:	4b14      	ldr	r3, [pc, #80]	; (800116c <Read_RSSI+0x84>)
 800111c:	ed93 7a00 	vldr	s14, [r3]
 8001120:	4b0f      	ldr	r3, [pc, #60]	; (8001160 <Read_RSSI+0x78>)
 8001122:	edd3 7a00 	vldr	s15, [r3]
 8001126:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800112a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800112e:	dd03      	ble.n	8001138 <Read_RSSI+0x50>
    	{
    		frssiY = frssiTemp;
 8001130:	4b0e      	ldr	r3, [pc, #56]	; (800116c <Read_RSSI+0x84>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	4a0a      	ldr	r2, [pc, #40]	; (8001160 <Read_RSSI+0x78>)
 8001136:	6013      	str	r3, [r2, #0]
    for (int j = 0; j< 15; j++)
 8001138:	68fb      	ldr	r3, [r7, #12]
 800113a:	3301      	adds	r3, #1
 800113c:	60fb      	str	r3, [r7, #12]
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	2b0e      	cmp	r3, #14
 8001142:	ddda      	ble.n	80010fa <Read_RSSI+0x12>
    	}

    }
//    printf("frssiY %f\n\r", frssiY);
//    printf("frssiTemp %f\n\r", frssiTemp);
return frssiY;
 8001144:	4b06      	ldr	r3, [pc, #24]	; (8001160 <Read_RSSI+0x78>)
 8001146:	edd3 7a00 	vldr	s15, [r3]
 800114a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800114e:	edc7 7a01 	vstr	s15, [r7, #4]
 8001152:	793b      	ldrb	r3, [r7, #4]
 8001154:	b25b      	sxtb	r3, r3
}
 8001156:	4618      	mov	r0, r3
 8001158:	3710      	adds	r7, #16
 800115a:	46bd      	mov	sp, r7
 800115c:	bd80      	pop	{r7, pc}
 800115e:	bf00      	nop
 8001160:	20000028 	.word	0x20000028
 8001164:	c47a0000 	.word	0xc47a0000
 8001168:	2000024b 	.word	0x2000024b
 800116c:	20000010 	.word	0x20000010

08001170 <calculateDeltaY>:
float deltaX = 1;
float deltaY = 1;
int signed vectorY;
int signed vectorX;

int signed calculateDeltaY(int signed initialRSSI_Y, int signed finalRSSI_Y, float deltaY) {
 8001170:	b480      	push	{r7}
 8001172:	b085      	sub	sp, #20
 8001174:	af00      	add	r7, sp, #0
 8001176:	60f8      	str	r0, [r7, #12]
 8001178:	60b9      	str	r1, [r7, #8]
 800117a:	ed87 0a01 	vstr	s0, [r7, #4]
    vectorY =  (initialRSSI_Y - finalRSSI_Y) * deltaY;
 800117e:	68fa      	ldr	r2, [r7, #12]
 8001180:	68bb      	ldr	r3, [r7, #8]
 8001182:	1ad3      	subs	r3, r2, r3
 8001184:	ee07 3a90 	vmov	s15, r3
 8001188:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800118c:	edd7 7a01 	vldr	s15, [r7, #4]
 8001190:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001194:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001198:	ee17 2a90 	vmov	r2, s15
 800119c:	4b04      	ldr	r3, [pc, #16]	; (80011b0 <calculateDeltaY+0x40>)
 800119e:	601a      	str	r2, [r3, #0]
    return vectorY;
 80011a0:	4b03      	ldr	r3, [pc, #12]	; (80011b0 <calculateDeltaY+0x40>)
 80011a2:	681b      	ldr	r3, [r3, #0]
}
 80011a4:	4618      	mov	r0, r3
 80011a6:	3714      	adds	r7, #20
 80011a8:	46bd      	mov	sp, r7
 80011aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ae:	4770      	bx	lr
 80011b0:	2000025c 	.word	0x2000025c

080011b4 <calculateDeltaX>:

// Function to calculate change in RSSI after x movement multiplied by delta x
int signed calculateDeltaX(int signed initialRSSI_X, int signed finalRSSI_X, float deltaX) {
 80011b4:	b480      	push	{r7}
 80011b6:	b085      	sub	sp, #20
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	60f8      	str	r0, [r7, #12]
 80011bc:	60b9      	str	r1, [r7, #8]
 80011be:	ed87 0a01 	vstr	s0, [r7, #4]
    vectorX =  (initialRSSI_X - finalRSSI_X) * deltaX;
 80011c2:	68fa      	ldr	r2, [r7, #12]
 80011c4:	68bb      	ldr	r3, [r7, #8]
 80011c6:	1ad3      	subs	r3, r2, r3
 80011c8:	ee07 3a90 	vmov	s15, r3
 80011cc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80011d0:	edd7 7a01 	vldr	s15, [r7, #4]
 80011d4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011dc:	ee17 2a90 	vmov	r2, s15
 80011e0:	4b04      	ldr	r3, [pc, #16]	; (80011f4 <calculateDeltaX+0x40>)
 80011e2:	601a      	str	r2, [r3, #0]
    return vectorX;
 80011e4:	4b03      	ldr	r3, [pc, #12]	; (80011f4 <calculateDeltaX+0x40>)
 80011e6:	681b      	ldr	r3, [r3, #0]
}
 80011e8:	4618      	mov	r0, r3
 80011ea:	3714      	adds	r7, #20
 80011ec:	46bd      	mov	sp, r7
 80011ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011f2:	4770      	bx	lr
 80011f4:	20000260 	.word	0x20000260

080011f8 <main>:
int start_yCmd = 0;

extern uint16_t count;

int main(void)
{
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b082      	sub	sp, #8
 80011fc:	af02      	add	r7, sp, #8
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));
 80011fe:	4b9d      	ldr	r3, [pc, #628]	; (8001474 <main+0x27c>)
 8001200:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001204:	4a9b      	ldr	r2, [pc, #620]	; (8001474 <main+0x27c>)
 8001206:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800120a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	count = 0;
 800120e:	4b9a      	ldr	r3, [pc, #616]	; (8001478 <main+0x280>)
 8001210:	2200      	movs	r2, #0
 8001212:	801a      	strh	r2, [r3, #0]
//	TIM2->CCR1 = 0;
//	TIM2->CCR2 = 0;
	tim2_pa0_pa1_pwm_init();
 8001214:	f000 fe38 	bl	8001e88 <tim2_pa0_pa1_pwm_init>
	tim2_pa0_pa1_pwm_set_dutycycle(1,50);
 8001218:	2132      	movs	r1, #50	; 0x32
 800121a:	2001      	movs	r0, #1
 800121c:	f000 fee8 	bl	8001ff0 <tim2_pa0_pa1_pwm_set_dutycycle>
	tim2_pa0_pa1_pwm_set_dutycycle(2,50);
 8001220:	2132      	movs	r1, #50	; 0x32
 8001222:	2002      	movs	r0, #2
 8001224:	f000 fee4 	bl	8001ff0 <tim2_pa0_pa1_pwm_set_dutycycle>
	uart2_rxtx_init();
 8001228:	f000 ff46 	bl	80020b8 <uart2_rxtx_init>
	SysTick_Init();
 800122c:	f000 fdd0 	bl	8001dd0 <SysTick_Init>
	kbhit();
 8001230:	f000 ff0e 	bl	8002050 <kbhit>
	Uart1_Init();
 8001234:	f000 ffea 	bl	800220c <Uart1_Init>
	SysTick_Handler();
 8001238:	f000 fdf6 	bl	8001e28 <SysTick_Handler>
//	perform_scanningX();
//	perform_scanningY();
	RCC->AHB1ENR |= GPIOAEN;
 800123c:	4b8f      	ldr	r3, [pc, #572]	; (800147c <main+0x284>)
 800123e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001240:	4a8e      	ldr	r2, [pc, #568]	; (800147c <main+0x284>)
 8001242:	f043 0301 	orr.w	r3, r3, #1
 8001246:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER |= (1U<<10);
 8001248:	4b8d      	ldr	r3, [pc, #564]	; (8001480 <main+0x288>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	4a8c      	ldr	r2, [pc, #560]	; (8001480 <main+0x288>)
 800124e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001252:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<11);
 8001254:	4b8a      	ldr	r3, [pc, #552]	; (8001480 <main+0x288>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	4a89      	ldr	r2, [pc, #548]	; (8001480 <main+0x288>)
 800125a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800125e:	6013      	str	r3, [r2, #0]


	printf("Welcome to Link Optimization\n\r");
 8001260:	4888      	ldr	r0, [pc, #544]	; (8001484 <main+0x28c>)
 8001262:	f001 ffcb 	bl	80031fc <iprintf>
	while(1)
	{



		if(heartbeat == true)	//Utilization of hardware clock SysTick by interrupt
 8001266:	4b88      	ldr	r3, [pc, #544]	; (8001488 <main+0x290>)
 8001268:	781b      	ldrb	r3, [r3, #0]
 800126a:	b2db      	uxtb	r3, r3
 800126c:	2b00      	cmp	r3, #0
 800126e:	f000 80fe 	beq.w	800146e <main+0x276>
		{
			heartbeat = false;	//Sets conditional statement false which is set true in the interrupt handler
 8001272:	4b85      	ldr	r3, [pc, #532]	; (8001488 <main+0x290>)
 8001274:	2200      	movs	r2, #0
 8001276:	701a      	strb	r2, [r3, #0]
			count++;	//increments the counter
 8001278:	4b7f      	ldr	r3, [pc, #508]	; (8001478 <main+0x280>)
 800127a:	881b      	ldrh	r3, [r3, #0]
 800127c:	3301      	adds	r3, #1
 800127e:	b29a      	uxth	r2, r3
 8001280:	4b7d      	ldr	r3, [pc, #500]	; (8001478 <main+0x280>)
 8001282:	801a      	strh	r2, [r3, #0]
			if((count % 50) == 0)	//Conditional statement that flashes LED2 every 50 ms
 8001284:	4b7c      	ldr	r3, [pc, #496]	; (8001478 <main+0x280>)
 8001286:	881b      	ldrh	r3, [r3, #0]
 8001288:	4a80      	ldr	r2, [pc, #512]	; (800148c <main+0x294>)
 800128a:	fba2 1203 	umull	r1, r2, r2, r3
 800128e:	0912      	lsrs	r2, r2, #4
 8001290:	2132      	movs	r1, #50	; 0x32
 8001292:	fb01 f202 	mul.w	r2, r1, r2
 8001296:	1a9b      	subs	r3, r3, r2
 8001298:	b29b      	uxth	r3, r3
 800129a:	2b00      	cmp	r3, #0
 800129c:	d105      	bne.n	80012aa <main+0xb2>
			{
			GPIOA->ODR ^= LED;
 800129e:	4b78      	ldr	r3, [pc, #480]	; (8001480 <main+0x288>)
 80012a0:	695b      	ldr	r3, [r3, #20]
 80012a2:	4a77      	ldr	r2, [pc, #476]	; (8001480 <main+0x288>)
 80012a4:	f083 0320 	eor.w	r3, r3, #32
 80012a8:	6153      	str	r3, [r2, #20]
			}
			if(move_done == true)
 80012aa:	4b79      	ldr	r3, [pc, #484]	; (8001490 <main+0x298>)
 80012ac:	781b      	ldrb	r3, [r3, #0]
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	f000 80d9 	beq.w	8001466 <main+0x26e>
			{
				Read_RSSI(); 	//Reads RSSI_NEW value
 80012b4:	f7ff ff18 	bl	80010e8 <Read_RSSI>
				while(s == 1)
 80012b8:	bf00      	nop
				{

				}
				if(mode == p)
 80012ba:	4b76      	ldr	r3, [pc, #472]	; (8001494 <main+0x29c>)
 80012bc:	781b      	ldrb	r3, [r3, #0]
 80012be:	2b01      	cmp	r3, #1
 80012c0:	f040 80d1 	bne.w	8001466 <main+0x26e>
				{

//					PID_Controller_X(vectorX);
//					PID_Controller_Y(vectorY);

					if((count % 10) == 0)
 80012c4:	4b6c      	ldr	r3, [pc, #432]	; (8001478 <main+0x280>)
 80012c6:	881a      	ldrh	r2, [r3, #0]
 80012c8:	4b73      	ldr	r3, [pc, #460]	; (8001498 <main+0x2a0>)
 80012ca:	fba3 1302 	umull	r1, r3, r3, r2
 80012ce:	08d9      	lsrs	r1, r3, #3
 80012d0:	460b      	mov	r3, r1
 80012d2:	009b      	lsls	r3, r3, #2
 80012d4:	440b      	add	r3, r1
 80012d6:	005b      	lsls	r3, r3, #1
 80012d8:	1ad3      	subs	r3, r2, r3
 80012da:	b29b      	uxth	r3, r3
 80012dc:	2b00      	cmp	r3, #0
 80012de:	f040 80bf 	bne.w	8001460 <main+0x268>
					{
		//					mode = v;
						Read_RSSI();
 80012e2:	f7ff ff01 	bl	80010e8 <Read_RSSI>
						initialRSSI_X = frssiY;
 80012e6:	4b6d      	ldr	r3, [pc, #436]	; (800149c <main+0x2a4>)
 80012e8:	edd3 7a00 	vldr	s15, [r3]
 80012ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80012f0:	ee17 2a90 	vmov	r2, s15
 80012f4:	4b6a      	ldr	r3, [pc, #424]	; (80014a0 <main+0x2a8>)
 80012f6:	601a      	str	r2, [r3, #0]

						start_xCmd = xCmd;
 80012f8:	4b6a      	ldr	r3, [pc, #424]	; (80014a4 <main+0x2ac>)
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	4a6a      	ldr	r2, [pc, #424]	; (80014a8 <main+0x2b0>)
 80012fe:	6013      	str	r3, [r2, #0]
						xCmd = xCmd + deltaX;
 8001300:	4b68      	ldr	r3, [pc, #416]	; (80014a4 <main+0x2ac>)
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	ee07 3a90 	vmov	s15, r3
 8001308:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800130c:	4b67      	ldr	r3, [pc, #412]	; (80014ac <main+0x2b4>)
 800130e:	edd3 7a00 	vldr	s15, [r3]
 8001312:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001316:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800131a:	ee17 2a90 	vmov	r2, s15
 800131e:	4b61      	ldr	r3, [pc, #388]	; (80014a4 <main+0x2ac>)
 8001320:	601a      	str	r2, [r3, #0]
						motor_control();
 8001322:	f7ff fe51 	bl	8000fc8 <motor_control>
						Motor_Position();
 8001326:	f7ff fde5 	bl	8000ef4 <Motor_Position>

						delay(10);
 800132a:	200a      	movs	r0, #10
 800132c:	f000 fd96 	bl	8001e5c <delay>

						Read_RSSI();
 8001330:	f7ff feda 	bl	80010e8 <Read_RSSI>
						finalRSSI_X = frssiY;
 8001334:	4b59      	ldr	r3, [pc, #356]	; (800149c <main+0x2a4>)
 8001336:	edd3 7a00 	vldr	s15, [r3]
 800133a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800133e:	ee17 2a90 	vmov	r2, s15
 8001342:	4b5b      	ldr	r3, [pc, #364]	; (80014b0 <main+0x2b8>)
 8001344:	601a      	str	r2, [r3, #0]
						printf("final: %i\n\r", finalRSSI_X);
 8001346:	4b5a      	ldr	r3, [pc, #360]	; (80014b0 <main+0x2b8>)
 8001348:	681b      	ldr	r3, [r3, #0]
 800134a:	4619      	mov	r1, r3
 800134c:	4859      	ldr	r0, [pc, #356]	; (80014b4 <main+0x2bc>)
 800134e:	f001 ff55 	bl	80031fc <iprintf>
		//					averageRSSI_X();

						calculateDeltaX(initialRSSI_X, finalRSSI_X, deltaX);
 8001352:	4b53      	ldr	r3, [pc, #332]	; (80014a0 <main+0x2a8>)
 8001354:	681b      	ldr	r3, [r3, #0]
 8001356:	4a56      	ldr	r2, [pc, #344]	; (80014b0 <main+0x2b8>)
 8001358:	6812      	ldr	r2, [r2, #0]
 800135a:	4954      	ldr	r1, [pc, #336]	; (80014ac <main+0x2b4>)
 800135c:	edd1 7a00 	vldr	s15, [r1]
 8001360:	eeb0 0a67 	vmov.f32	s0, s15
 8001364:	4611      	mov	r1, r2
 8001366:	4618      	mov	r0, r3
 8001368:	f7ff ff24 	bl	80011b4 <calculateDeltaX>

						xCmd = start_xCmd + vectorX;
 800136c:	4b4e      	ldr	r3, [pc, #312]	; (80014a8 <main+0x2b0>)
 800136e:	681a      	ldr	r2, [r3, #0]
 8001370:	4b51      	ldr	r3, [pc, #324]	; (80014b8 <main+0x2c0>)
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	4413      	add	r3, r2
 8001376:	4a4b      	ldr	r2, [pc, #300]	; (80014a4 <main+0x2ac>)
 8001378:	6013      	str	r3, [r2, #0]

						PID_Controller_X(vectorX);
 800137a:	4b4f      	ldr	r3, [pc, #316]	; (80014b8 <main+0x2c0>)
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4618      	mov	r0, r3
 8001380:	f7ff fcc0 	bl	8000d04 <PID_Controller_X>
						motor_control();
 8001384:	f7ff fe20 	bl	8000fc8 <motor_control>
						Motor_Position();
 8001388:	f7ff fdb4 	bl	8000ef4 <Motor_Position>

						printf("inital: %i vectorX:%i start_xCmd:%i xCmd%i\n\r", initialRSSI_X, vectorX, start_xCmd, xCmd);
 800138c:	4b44      	ldr	r3, [pc, #272]	; (80014a0 <main+0x2a8>)
 800138e:	6819      	ldr	r1, [r3, #0]
 8001390:	4b49      	ldr	r3, [pc, #292]	; (80014b8 <main+0x2c0>)
 8001392:	681a      	ldr	r2, [r3, #0]
 8001394:	4b44      	ldr	r3, [pc, #272]	; (80014a8 <main+0x2b0>)
 8001396:	6818      	ldr	r0, [r3, #0]
 8001398:	4b42      	ldr	r3, [pc, #264]	; (80014a4 <main+0x2ac>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	9300      	str	r3, [sp, #0]
 800139e:	4603      	mov	r3, r0
 80013a0:	4846      	ldr	r0, [pc, #280]	; (80014bc <main+0x2c4>)
 80013a2:	f001 ff2b 	bl	80031fc <iprintf>
/*****************************yCmd********************************/


						Read_RSSI();
 80013a6:	f7ff fe9f 	bl	80010e8 <Read_RSSI>
						initialRSSI_Y = frssiY;
 80013aa:	4b3c      	ldr	r3, [pc, #240]	; (800149c <main+0x2a4>)
 80013ac:	edd3 7a00 	vldr	s15, [r3]
 80013b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013b4:	ee17 2a90 	vmov	r2, s15
 80013b8:	4b41      	ldr	r3, [pc, #260]	; (80014c0 <main+0x2c8>)
 80013ba:	601a      	str	r2, [r3, #0]
						start_yCmd = yCmd;
 80013bc:	4b41      	ldr	r3, [pc, #260]	; (80014c4 <main+0x2cc>)
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	4a41      	ldr	r2, [pc, #260]	; (80014c8 <main+0x2d0>)
 80013c2:	6013      	str	r3, [r2, #0]


						yCmd = yCmd + deltaY;
 80013c4:	4b3f      	ldr	r3, [pc, #252]	; (80014c4 <main+0x2cc>)
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	ee07 3a90 	vmov	s15, r3
 80013cc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013d0:	4b3e      	ldr	r3, [pc, #248]	; (80014cc <main+0x2d4>)
 80013d2:	edd3 7a00 	vldr	s15, [r3]
 80013d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013de:	ee17 2a90 	vmov	r2, s15
 80013e2:	4b38      	ldr	r3, [pc, #224]	; (80014c4 <main+0x2cc>)
 80013e4:	601a      	str	r2, [r3, #0]
						motor_control();
 80013e6:	f7ff fdef 	bl	8000fc8 <motor_control>
						Motor_Position();
 80013ea:	f7ff fd83 	bl	8000ef4 <Motor_Position>

						delay(10);
 80013ee:	200a      	movs	r0, #10
 80013f0:	f000 fd34 	bl	8001e5c <delay>

						Read_RSSI();
 80013f4:	f7ff fe78 	bl	80010e8 <Read_RSSI>
						finalRSSI_Y = frssiY;
 80013f8:	4b28      	ldr	r3, [pc, #160]	; (800149c <main+0x2a4>)
 80013fa:	edd3 7a00 	vldr	s15, [r3]
 80013fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001402:	ee17 2a90 	vmov	r2, s15
 8001406:	4b32      	ldr	r3, [pc, #200]	; (80014d0 <main+0x2d8>)
 8001408:	601a      	str	r2, [r3, #0]

						calculateDeltaY(initialRSSI_Y, finalRSSI_Y, deltaY);
 800140a:	4b2d      	ldr	r3, [pc, #180]	; (80014c0 <main+0x2c8>)
 800140c:	681b      	ldr	r3, [r3, #0]
 800140e:	4a30      	ldr	r2, [pc, #192]	; (80014d0 <main+0x2d8>)
 8001410:	6812      	ldr	r2, [r2, #0]
 8001412:	492e      	ldr	r1, [pc, #184]	; (80014cc <main+0x2d4>)
 8001414:	edd1 7a00 	vldr	s15, [r1]
 8001418:	eeb0 0a67 	vmov.f32	s0, s15
 800141c:	4611      	mov	r1, r2
 800141e:	4618      	mov	r0, r3
 8001420:	f7ff fea6 	bl	8001170 <calculateDeltaY>



						yCmd = start_yCmd + vectorY;
 8001424:	4b28      	ldr	r3, [pc, #160]	; (80014c8 <main+0x2d0>)
 8001426:	681a      	ldr	r2, [r3, #0]
 8001428:	4b2a      	ldr	r3, [pc, #168]	; (80014d4 <main+0x2dc>)
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	4413      	add	r3, r2
 800142e:	4a25      	ldr	r2, [pc, #148]	; (80014c4 <main+0x2cc>)
 8001430:	6013      	str	r3, [r2, #0]

						PID_Controller_Y(vectorY);
 8001432:	4b28      	ldr	r3, [pc, #160]	; (80014d4 <main+0x2dc>)
 8001434:	681b      	ldr	r3, [r3, #0]
 8001436:	4618      	mov	r0, r3
 8001438:	f7ff fce0 	bl	8000dfc <PID_Controller_Y>
						motor_control();
 800143c:	f7ff fdc4 	bl	8000fc8 <motor_control>
						Motor_Position();
 8001440:	f7ff fd58 	bl	8000ef4 <Motor_Position>

						printf("inital: %i vectorY:%i start_yCmd:%i yCmd%i\n\r", initialRSSI_Y, vectorY, start_yCmd, yCmd);
 8001444:	4b1e      	ldr	r3, [pc, #120]	; (80014c0 <main+0x2c8>)
 8001446:	6819      	ldr	r1, [r3, #0]
 8001448:	4b22      	ldr	r3, [pc, #136]	; (80014d4 <main+0x2dc>)
 800144a:	681a      	ldr	r2, [r3, #0]
 800144c:	4b1e      	ldr	r3, [pc, #120]	; (80014c8 <main+0x2d0>)
 800144e:	6818      	ldr	r0, [r3, #0]
 8001450:	4b1c      	ldr	r3, [pc, #112]	; (80014c4 <main+0x2cc>)
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	9300      	str	r3, [sp, #0]
 8001456:	4603      	mov	r3, r0
 8001458:	481f      	ldr	r0, [pc, #124]	; (80014d8 <main+0x2e0>)
 800145a:	f001 fecf 	bl	80031fc <iprintf>
 800145e:	e002      	b.n	8001466 <main+0x26e>


					}
					else
					{
						mode = p;
 8001460:	4b0c      	ldr	r3, [pc, #48]	; (8001494 <main+0x29c>)
 8001462:	2201      	movs	r2, #1
 8001464:	701a      	strb	r2, [r3, #0]



//			control_X(); 	// First process of PID algorithm in X axis
//			control_Y();
			motor_control();
 8001466:	f7ff fdaf 	bl	8000fc8 <motor_control>

			Motor_Position(); 	//Debug process which gets stuck in this loop and stops all function
 800146a:	f7ff fd43 	bl	8000ef4 <Motor_Position>
			//printf("count: %i\n\r", count);
		}

	process_console();	//Parsing which reads a keyboard input for manually setting different functions
 800146e:	f000 f835 	bl	80014dc <process_console>
	{
 8001472:	e6f8      	b.n	8001266 <main+0x6e>
 8001474:	e000ed00 	.word	0xe000ed00
 8001478:	20000248 	.word	0x20000248
 800147c:	40023800 	.word	0x40023800
 8001480:	40020000 	.word	0x40020000
 8001484:	08006bac 	.word	0x08006bac
 8001488:	20000264 	.word	0x20000264
 800148c:	51eb851f 	.word	0x51eb851f
 8001490:	2000024a 	.word	0x2000024a
 8001494:	20000265 	.word	0x20000265
 8001498:	cccccccd 	.word	0xcccccccd
 800149c:	20000028 	.word	0x20000028
 80014a0:	20000254 	.word	0x20000254
 80014a4:	20000270 	.word	0x20000270
 80014a8:	20000268 	.word	0x20000268
 80014ac:	20000014 	.word	0x20000014
 80014b0:	20000258 	.word	0x20000258
 80014b4:	08006bcc 	.word	0x08006bcc
 80014b8:	20000260 	.word	0x20000260
 80014bc:	08006bd8 	.word	0x08006bd8
 80014c0:	2000024c 	.word	0x2000024c
 80014c4:	20000274 	.word	0x20000274
 80014c8:	2000026c 	.word	0x2000026c
 80014cc:	20000018 	.word	0x20000018
 80014d0:	20000250 	.word	0x20000250
 80014d4:	2000025c 	.word	0x2000025c
 80014d8:	08006c08 	.word	0x08006c08

080014dc <process_console>:
int yCmd = 0;
uint32_t elapsed_time;
// Update timing measurements and servo positions

void process_console(void)
{
 80014dc:	b580      	push	{r7, lr}
 80014de:	b088      	sub	sp, #32
 80014e0:	af00      	add	r7, sp, #0
	char cmd;
	char ch;
	float value = 0;
 80014e2:	f04f 0300 	mov.w	r3, #0
 80014e6:	61bb      	str	r3, [r7, #24]
	bool dp = false;
 80014e8:	2300      	movs	r3, #0
 80014ea:	75fb      	strb	r3, [r7, #23]
	signed int sign = 1;
 80014ec:	2301      	movs	r3, #1
 80014ee:	613b      	str	r3, [r7, #16]
	int num_places = 1;
 80014f0:	2301      	movs	r3, #1
 80014f2:	60fb      	str	r3, [r7, #12]


	if(kbhit())
 80014f4:	f000 fdac 	bl	8002050 <kbhit>
 80014f8:	4603      	mov	r3, r0
 80014fa:	2b00      	cmp	r3, #0
 80014fc:	f000 820d 	beq.w	800191a <process_console+0x43e>
		{

			cmd = uart2_read();
 8001500:	f000 fd92 	bl	8002028 <uart2_read>
 8001504:	4603      	mov	r3, r0
 8001506:	72fb      	strb	r3, [r7, #11]
			ch = uart2_read();	// dummy read of '='
 8001508:	f000 fd8e 	bl	8002028 <uart2_read>
 800150c:	4603      	mov	r3, r0
 800150e:	77fb      	strb	r3, [r7, #31]
			value = 0.;
 8001510:	f04f 0300 	mov.w	r3, #0
 8001514:	61bb      	str	r3, [r7, #24]
			ch = uart2_read();
 8001516:	f000 fd87 	bl	8002028 <uart2_read>
 800151a:	4603      	mov	r3, r0
 800151c:	77fb      	strb	r3, [r7, #31]
			while (ch != 13) {
 800151e:	e032      	b.n	8001586 <process_console+0xaa>
				if(ch >= '0' && ch <= '9')
 8001520:	7ffb      	ldrb	r3, [r7, #31]
 8001522:	2b2f      	cmp	r3, #47	; 0x2f
 8001524:	d91f      	bls.n	8001566 <process_console+0x8a>
 8001526:	7ffb      	ldrb	r3, [r7, #31]
 8001528:	2b39      	cmp	r3, #57	; 0x39
 800152a:	d81c      	bhi.n	8001566 <process_console+0x8a>
				{
					value = 10 * value + ch - '0';
 800152c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001530:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8001534:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001538:	7ffb      	ldrb	r3, [r7, #31]
 800153a:	ee07 3a90 	vmov	s15, r3
 800153e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001542:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001546:	ed9f 7abc 	vldr	s14, [pc, #752]	; 8001838 <process_console+0x35c>
 800154a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800154e:	edc7 7a06 	vstr	s15, [r7, #24]
					if(dp)
 8001552:	7dfb      	ldrb	r3, [r7, #23]
 8001554:	2b00      	cmp	r3, #0
 8001556:	d012      	beq.n	800157e <process_console+0xa2>
					{
						num_places = 10 * num_places;
 8001558:	68fa      	ldr	r2, [r7, #12]
 800155a:	4613      	mov	r3, r2
 800155c:	009b      	lsls	r3, r3, #2
 800155e:	4413      	add	r3, r2
 8001560:	005b      	lsls	r3, r3, #1
 8001562:	60fb      	str	r3, [r7, #12]
					if(dp)
 8001564:	e00b      	b.n	800157e <process_console+0xa2>
					}
				}

				else if(ch == '.')
 8001566:	7ffb      	ldrb	r3, [r7, #31]
 8001568:	2b2e      	cmp	r3, #46	; 0x2e
 800156a:	d102      	bne.n	8001572 <process_console+0x96>
				{
					dp = true;
 800156c:	2301      	movs	r3, #1
 800156e:	75fb      	strb	r3, [r7, #23]
 8001570:	e005      	b.n	800157e <process_console+0xa2>
				}
				else if(ch == '-')
 8001572:	7ffb      	ldrb	r3, [r7, #31]
 8001574:	2b2d      	cmp	r3, #45	; 0x2d
 8001576:	d102      	bne.n	800157e <process_console+0xa2>
				{
					sign = -1;
 8001578:	f04f 33ff 	mov.w	r3, #4294967295
 800157c:	613b      	str	r3, [r7, #16]
				}

				ch = uart2_read();
 800157e:	f000 fd53 	bl	8002028 <uart2_read>
 8001582:	4603      	mov	r3, r0
 8001584:	77fb      	strb	r3, [r7, #31]
			while (ch != 13) {
 8001586:	7ffb      	ldrb	r3, [r7, #31]
 8001588:	2b0d      	cmp	r3, #13
 800158a:	d1c9      	bne.n	8001520 <process_console+0x44>
			}

			value = (sign * value)/(num_places);
 800158c:	693b      	ldr	r3, [r7, #16]
 800158e:	ee07 3a90 	vmov	s15, r3
 8001592:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001596:	edd7 7a06 	vldr	s15, [r7, #24]
 800159a:	ee67 6a27 	vmul.f32	s13, s14, s15
 800159e:	68fb      	ldr	r3, [r7, #12]
 80015a0:	ee07 3a90 	vmov	s15, r3
 80015a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80015a8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80015ac:	edc7 7a06 	vstr	s15, [r7, #24]


		    switch(cmd) {
 80015b0:	7afb      	ldrb	r3, [r7, #11]
 80015b2:	3b44      	subs	r3, #68	; 0x44
 80015b4:	2b35      	cmp	r3, #53	; 0x35
 80015b6:	f200 81b0 	bhi.w	800191a <process_console+0x43e>
 80015ba:	a201      	add	r2, pc, #4	; (adr r2, 80015c0 <process_console+0xe4>)
 80015bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80015c0:	080017c9 	.word	0x080017c9
 80015c4:	0800191b 	.word	0x0800191b
 80015c8:	0800191b 	.word	0x0800191b
 80015cc:	0800191b 	.word	0x0800191b
 80015d0:	0800191b 	.word	0x0800191b
 80015d4:	080017ad 	.word	0x080017ad
 80015d8:	0800191b 	.word	0x0800191b
 80015dc:	0800191b 	.word	0x0800191b
 80015e0:	0800191b 	.word	0x0800191b
 80015e4:	0800191b 	.word	0x0800191b
 80015e8:	0800191b 	.word	0x0800191b
 80015ec:	0800191b 	.word	0x0800191b
 80015f0:	08001791 	.word	0x08001791
 80015f4:	0800191b 	.word	0x0800191b
 80015f8:	0800191b 	.word	0x0800191b
 80015fc:	0800191b 	.word	0x0800191b
 8001600:	0800191b 	.word	0x0800191b
 8001604:	0800191b 	.word	0x0800191b
 8001608:	0800191b 	.word	0x0800191b
 800160c:	0800191b 	.word	0x0800191b
 8001610:	080017e5 	.word	0x080017e5
 8001614:	08001801 	.word	0x08001801
 8001618:	0800191b 	.word	0x0800191b
 800161c:	0800191b 	.word	0x0800191b
 8001620:	0800191b 	.word	0x0800191b
 8001624:	0800191b 	.word	0x0800191b
 8001628:	0800191b 	.word	0x0800191b
 800162c:	0800191b 	.word	0x0800191b
 8001630:	0800191b 	.word	0x0800191b
 8001634:	0800191b 	.word	0x0800191b
 8001638:	0800191b 	.word	0x0800191b
 800163c:	0800191b 	.word	0x0800191b
 8001640:	0800191b 	.word	0x0800191b
 8001644:	0800191b 	.word	0x0800191b
 8001648:	0800191b 	.word	0x0800191b
 800164c:	0800191b 	.word	0x0800191b
 8001650:	08001777 	.word	0x08001777
 8001654:	0800191b 	.word	0x0800191b
 8001658:	0800191b 	.word	0x0800191b
 800165c:	0800191b 	.word	0x0800191b
 8001660:	0800191b 	.word	0x0800191b
 8001664:	08001699 	.word	0x08001699
 8001668:	0800191b 	.word	0x0800191b
 800166c:	0800191b 	.word	0x0800191b
 8001670:	0800172d 	.word	0x0800172d
 8001674:	0800191b 	.word	0x0800191b
 8001678:	0800191b 	.word	0x0800191b
 800167c:	0800188d 	.word	0x0800188d
 8001680:	0800181d 	.word	0x0800181d
 8001684:	0800191b 	.word	0x0800191b
 8001688:	080016e3 	.word	0x080016e3
 800168c:	0800191b 	.word	0x0800191b
 8001690:	080018e9 	.word	0x080018e9
 8001694:	080018fb 	.word	0x080018fb
				case 'm':
					mode = value;
 8001698:	edd7 7a06 	vldr	s15, [r7, #24]
 800169c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80016a0:	edc7 7a01 	vstr	s15, [r7, #4]
 80016a4:	793b      	ldrb	r3, [r7, #4]
 80016a6:	b2da      	uxtb	r2, r3
 80016a8:	4b64      	ldr	r3, [pc, #400]	; (800183c <process_console+0x360>)
 80016aa:	701a      	strb	r2, [r3, #0]
					if(value == 1)
 80016ac:	edd7 7a06 	vldr	s15, [r7, #24]
 80016b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80016b4:	eef4 7a47 	vcmp.f32	s15, s14
 80016b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016bc:	d105      	bne.n	80016ca <process_console+0x1ee>
					{
						mode = m;
 80016be:	4b5f      	ldr	r3, [pc, #380]	; (800183c <process_console+0x360>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	701a      	strb	r2, [r3, #0]
						printf("Manual Mode ON\n\r");
 80016c4:	485e      	ldr	r0, [pc, #376]	; (8001840 <process_console+0x364>)
 80016c6:	f001 fd99 	bl	80031fc <iprintf>
					}
					if(value == 0)
 80016ca:	edd7 7a06 	vldr	s15, [r7, #24]
 80016ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80016d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016d6:	f040 8119 	bne.w	800190c <process_console+0x430>
					{
						mode != m;
						printf("Manual Mode OFF\n\r");
 80016da:	485a      	ldr	r0, [pc, #360]	; (8001844 <process_console+0x368>)
 80016dc:	f001 fd8e 	bl	80031fc <iprintf>
					}
					break;
 80016e0:	e114      	b.n	800190c <process_console+0x430>
				case 'v':
					mode = value;
 80016e2:	edd7 7a06 	vldr	s15, [r7, #24]
 80016e6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80016ea:	edc7 7a01 	vstr	s15, [r7, #4]
 80016ee:	793b      	ldrb	r3, [r7, #4]
 80016f0:	b2da      	uxtb	r2, r3
 80016f2:	4b52      	ldr	r3, [pc, #328]	; (800183c <process_console+0x360>)
 80016f4:	701a      	strb	r2, [r3, #0]
					if(value == 1)
 80016f6:	edd7 7a06 	vldr	s15, [r7, #24]
 80016fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80016fe:	eef4 7a47 	vcmp.f32	s15, s14
 8001702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001706:	d105      	bne.n	8001714 <process_console+0x238>
					{
						mode = v;
 8001708:	4b4c      	ldr	r3, [pc, #304]	; (800183c <process_console+0x360>)
 800170a:	2200      	movs	r2, #0
 800170c:	701a      	strb	r2, [r3, #0]
						printf("Vector Mode ON\n\r");
 800170e:	484e      	ldr	r0, [pc, #312]	; (8001848 <process_console+0x36c>)
 8001710:	f001 fd74 	bl	80031fc <iprintf>
					}
					if(value == 0)
 8001714:	edd7 7a06 	vldr	s15, [r7, #24]
 8001718:	eef5 7a40 	vcmp.f32	s15, #0.0
 800171c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001720:	f040 80f6 	bne.w	8001910 <process_console+0x434>
					{
						mode != v;
						printf("Vector Mode OFF\n\r");
 8001724:	4849      	ldr	r0, [pc, #292]	; (800184c <process_console+0x370>)
 8001726:	f001 fd69 	bl	80031fc <iprintf>
					}
					break;
 800172a:	e0f1      	b.n	8001910 <process_console+0x434>
				case 'p':
					mode = value;
 800172c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001730:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001734:	edc7 7a01 	vstr	s15, [r7, #4]
 8001738:	793b      	ldrb	r3, [r7, #4]
 800173a:	b2da      	uxtb	r2, r3
 800173c:	4b3f      	ldr	r3, [pc, #252]	; (800183c <process_console+0x360>)
 800173e:	701a      	strb	r2, [r3, #0]
					if(value == 1)
 8001740:	edd7 7a06 	vldr	s15, [r7, #24]
 8001744:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001748:	eef4 7a47 	vcmp.f32	s15, s14
 800174c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001750:	d105      	bne.n	800175e <process_console+0x282>
					{
						mode = p;
 8001752:	4b3a      	ldr	r3, [pc, #232]	; (800183c <process_console+0x360>)
 8001754:	2201      	movs	r2, #1
 8001756:	701a      	strb	r2, [r3, #0]
					printf("PID mode ON\n\r");
 8001758:	483d      	ldr	r0, [pc, #244]	; (8001850 <process_console+0x374>)
 800175a:	f001 fd4f 	bl	80031fc <iprintf>
					}
					if(value == 0)
 800175e:	edd7 7a06 	vldr	s15, [r7, #24]
 8001762:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800176a:	f040 80d3 	bne.w	8001914 <process_console+0x438>
					{
						mode != p;
					printf("PID mode OFF\n\r");
 800176e:	4839      	ldr	r0, [pc, #228]	; (8001854 <process_console+0x378>)
 8001770:	f001 fd44 	bl	80031fc <iprintf>
					}
					break;
 8001774:	e0ce      	b.n	8001914 <process_console+0x438>
				case 'h':
					heartbeat = value;
 8001776:	edd7 7a06 	vldr	s15, [r7, #24]
 800177a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800177e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001782:	bf14      	ite	ne
 8001784:	2301      	movne	r3, #1
 8001786:	2300      	moveq	r3, #0
 8001788:	b2da      	uxtb	r2, r3
 800178a:	4b33      	ldr	r3, [pc, #204]	; (8001858 <process_console+0x37c>)
 800178c:	701a      	strb	r2, [r3, #0]
					break;
 800178e:	e0c4      	b.n	800191a <process_console+0x43e>
				case 'P':
					KP = value;
 8001790:	4a32      	ldr	r2, [pc, #200]	; (800185c <process_console+0x380>)
 8001792:	69bb      	ldr	r3, [r7, #24]
 8001794:	6013      	str	r3, [r2, #0]
					printf("KP: %f\n\r", KP);
 8001796:	4b31      	ldr	r3, [pc, #196]	; (800185c <process_console+0x380>)
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	4618      	mov	r0, r3
 800179c:	f7fe fedc 	bl	8000558 <__aeabi_f2d>
 80017a0:	4602      	mov	r2, r0
 80017a2:	460b      	mov	r3, r1
 80017a4:	482e      	ldr	r0, [pc, #184]	; (8001860 <process_console+0x384>)
 80017a6:	f001 fd29 	bl	80031fc <iprintf>
					break;
 80017aa:	e0b6      	b.n	800191a <process_console+0x43e>
				case 'I':
					KI = value;
 80017ac:	4a2d      	ldr	r2, [pc, #180]	; (8001864 <process_console+0x388>)
 80017ae:	69bb      	ldr	r3, [r7, #24]
 80017b0:	6013      	str	r3, [r2, #0]
					printf("KI: %f\n\r", KI);
 80017b2:	4b2c      	ldr	r3, [pc, #176]	; (8001864 <process_console+0x388>)
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	4618      	mov	r0, r3
 80017b8:	f7fe fece 	bl	8000558 <__aeabi_f2d>
 80017bc:	4602      	mov	r2, r0
 80017be:	460b      	mov	r3, r1
 80017c0:	4829      	ldr	r0, [pc, #164]	; (8001868 <process_console+0x38c>)
 80017c2:	f001 fd1b 	bl	80031fc <iprintf>
					break;
 80017c6:	e0a8      	b.n	800191a <process_console+0x43e>
				case 'D':
					KD = value;
 80017c8:	4a28      	ldr	r2, [pc, #160]	; (800186c <process_console+0x390>)
 80017ca:	69bb      	ldr	r3, [r7, #24]
 80017cc:	6013      	str	r3, [r2, #0]
					printf("KD: %f\n\r", KD);
 80017ce:	4b27      	ldr	r3, [pc, #156]	; (800186c <process_console+0x390>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	4618      	mov	r0, r3
 80017d4:	f7fe fec0 	bl	8000558 <__aeabi_f2d>
 80017d8:	4602      	mov	r2, r0
 80017da:	460b      	mov	r3, r1
 80017dc:	4824      	ldr	r0, [pc, #144]	; (8001870 <process_console+0x394>)
 80017de:	f001 fd0d 	bl	80031fc <iprintf>
					break;
 80017e2:	e09a      	b.n	800191a <process_console+0x43e>
				case 'X':
					deltX = value;
 80017e4:	4a23      	ldr	r2, [pc, #140]	; (8001874 <process_console+0x398>)
 80017e6:	69bb      	ldr	r3, [r7, #24]
 80017e8:	6013      	str	r3, [r2, #0]
					printf("deltaX: %i\n\r", deltX);
 80017ea:	4b22      	ldr	r3, [pc, #136]	; (8001874 <process_console+0x398>)
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	4618      	mov	r0, r3
 80017f0:	f7fe feb2 	bl	8000558 <__aeabi_f2d>
 80017f4:	4602      	mov	r2, r0
 80017f6:	460b      	mov	r3, r1
 80017f8:	481f      	ldr	r0, [pc, #124]	; (8001878 <process_console+0x39c>)
 80017fa:	f001 fcff 	bl	80031fc <iprintf>
					break;
 80017fe:	e08c      	b.n	800191a <process_console+0x43e>
				case 'Y':
					deltY = value;
 8001800:	4a1e      	ldr	r2, [pc, #120]	; (800187c <process_console+0x3a0>)
 8001802:	69bb      	ldr	r3, [r7, #24]
 8001804:	6013      	str	r3, [r2, #0]
					printf("deltaY: %i\n\r", deltY);
 8001806:	4b1d      	ldr	r3, [pc, #116]	; (800187c <process_console+0x3a0>)
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	4618      	mov	r0, r3
 800180c:	f7fe fea4 	bl	8000558 <__aeabi_f2d>
 8001810:	4602      	mov	r2, r0
 8001812:	460b      	mov	r3, r1
 8001814:	481a      	ldr	r0, [pc, #104]	; (8001880 <process_console+0x3a4>)
 8001816:	f001 fcf1 	bl	80031fc <iprintf>
					break;
 800181a:	e07e      	b.n	800191a <process_console+0x43e>
				case 't':
					DT = value;
 800181c:	4a19      	ldr	r2, [pc, #100]	; (8001884 <process_console+0x3a8>)
 800181e:	69bb      	ldr	r3, [r7, #24]
 8001820:	6013      	str	r3, [r2, #0]
					printf("DT: %f\n\r", DT);
 8001822:	4b18      	ldr	r3, [pc, #96]	; (8001884 <process_console+0x3a8>)
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	4618      	mov	r0, r3
 8001828:	f7fe fe96 	bl	8000558 <__aeabi_f2d>
 800182c:	4602      	mov	r2, r0
 800182e:	460b      	mov	r3, r1
 8001830:	4815      	ldr	r0, [pc, #84]	; (8001888 <process_console+0x3ac>)
 8001832:	f001 fce3 	bl	80031fc <iprintf>
					break;
 8001836:	e070      	b.n	800191a <process_console+0x43e>
 8001838:	42400000 	.word	0x42400000
 800183c:	20000265 	.word	0x20000265
 8001840:	08006c38 	.word	0x08006c38
 8001844:	08006c4c 	.word	0x08006c4c
 8001848:	08006c60 	.word	0x08006c60
 800184c:	08006c74 	.word	0x08006c74
 8001850:	08006c88 	.word	0x08006c88
 8001854:	08006c98 	.word	0x08006c98
 8001858:	20000264 	.word	0x20000264
 800185c:	20000000 	.word	0x20000000
 8001860:	08006ca8 	.word	0x08006ca8
 8001864:	20000210 	.word	0x20000210
 8001868:	08006cb4 	.word	0x08006cb4
 800186c:	20000214 	.word	0x20000214
 8001870:	08006cc0 	.word	0x08006cc0
 8001874:	20000008 	.word	0x20000008
 8001878:	08006ccc 	.word	0x08006ccc
 800187c:	2000000c 	.word	0x2000000c
 8001880:	08006cdc 	.word	0x08006cdc
 8001884:	20000004 	.word	0x20000004
 8001888:	08006cec 	.word	0x08006cec
				case 's':
					mode = value;
 800188c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001890:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001894:	edc7 7a01 	vstr	s15, [r7, #4]
 8001898:	793b      	ldrb	r3, [r7, #4]
 800189a:	b2da      	uxtb	r2, r3
 800189c:	4b21      	ldr	r3, [pc, #132]	; (8001924 <process_console+0x448>)
 800189e:	701a      	strb	r2, [r3, #0]
					if(value == 1)
 80018a0:	edd7 7a06 	vldr	s15, [r7, #24]
 80018a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80018a8:	eef4 7a47 	vcmp.f32	s15, s14
 80018ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018b0:	d10c      	bne.n	80018cc <process_console+0x3f0>
					{
						mode = s;
 80018b2:	4b1c      	ldr	r3, [pc, #112]	; (8001924 <process_console+0x448>)
 80018b4:	2200      	movs	r2, #0
 80018b6:	701a      	strb	r2, [r3, #0]
						mode != p;
						printf("Scanning Mode ON\n\r");
 80018b8:	481b      	ldr	r0, [pc, #108]	; (8001928 <process_console+0x44c>)
 80018ba:	f001 fc9f 	bl	80031fc <iprintf>
						perform_scanningX();
 80018be:	f000 f83b 	bl	8001938 <perform_scanningX>
						delay(20);
 80018c2:	2014      	movs	r0, #20
 80018c4:	f000 faca 	bl	8001e5c <delay>
						perform_scanningY();
 80018c8:	f000 f8d6 	bl	8001a78 <perform_scanningY>
					}
					if(value == 0)
 80018cc:	edd7 7a06 	vldr	s15, [r7, #24]
 80018d0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80018d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018d8:	d11e      	bne.n	8001918 <process_console+0x43c>
					{
						mode != s;
						mode = p;
 80018da:	4b12      	ldr	r3, [pc, #72]	; (8001924 <process_console+0x448>)
 80018dc:	2201      	movs	r2, #1
 80018de:	701a      	strb	r2, [r3, #0]
						printf("Scanning Mode OFF\n\r");
 80018e0:	4812      	ldr	r0, [pc, #72]	; (800192c <process_console+0x450>)
 80018e2:	f001 fc8b 	bl	80031fc <iprintf>
					}
					break;
 80018e6:	e017      	b.n	8001918 <process_console+0x43c>


#if 0

#else
		        	xCmd = value;
 80018e8:	edd7 7a06 	vldr	s15, [r7, #24]
 80018ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80018f0:	ee17 2a90 	vmov	r2, s15
 80018f4:	4b0e      	ldr	r3, [pc, #56]	; (8001930 <process_console+0x454>)
 80018f6:	601a      	str	r2, [r3, #0]


#endif

		            break;
 80018f8:	e00f      	b.n	800191a <process_console+0x43e>
		        case 'y':
#if 0

#else

		        	yCmd = value;
 80018fa:	edd7 7a06 	vldr	s15, [r7, #24]
 80018fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001902:	ee17 2a90 	vmov	r2, s15
 8001906:	4b0b      	ldr	r3, [pc, #44]	; (8001934 <process_console+0x458>)
 8001908:	601a      	str	r2, [r3, #0]

		    }

	}

}
 800190a:	e006      	b.n	800191a <process_console+0x43e>
					break;
 800190c:	bf00      	nop
 800190e:	e004      	b.n	800191a <process_console+0x43e>
					break;
 8001910:	bf00      	nop
 8001912:	e002      	b.n	800191a <process_console+0x43e>
					break;
 8001914:	bf00      	nop
 8001916:	e000      	b.n	800191a <process_console+0x43e>
					break;
 8001918:	bf00      	nop
}
 800191a:	bf00      	nop
 800191c:	3720      	adds	r7, #32
 800191e:	46bd      	mov	sp, r7
 8001920:	bd80      	pop	{r7, pc}
 8001922:	bf00      	nop
 8001924:	20000265 	.word	0x20000265
 8001928:	08006cf8 	.word	0x08006cf8
 800192c:	08006d0c 	.word	0x08006d0c
 8001930:	20000270 	.word	0x20000270
 8001934:	20000274 	.word	0x20000274

08001938 <perform_scanningX>:

float frssiX = -150;
int signed maxX_rssi;
int signed maxX_rssi_position;

void perform_scanningX() {
 8001938:	b580      	push	{r7, lr}
 800193a:	b084      	sub	sp, #16
 800193c:	af00      	add	r7, sp, #0



	maxX_rssi = -200;
 800193e:	4b43      	ldr	r3, [pc, #268]	; (8001a4c <perform_scanningX+0x114>)
 8001940:	f06f 02c7 	mvn.w	r2, #199	; 0xc7
 8001944:	601a      	str	r2, [r3, #0]
	maxX_rssi_position = 0;
 8001946:	4b42      	ldr	r3, [pc, #264]	; (8001a50 <perform_scanningX+0x118>)
 8001948:	2200      	movs	r2, #0
 800194a:	601a      	str	r2, [r3, #0]
	xPos = 81;
 800194c:	4b41      	ldr	r3, [pc, #260]	; (8001a54 <perform_scanningX+0x11c>)
 800194e:	2251      	movs	r2, #81	; 0x51
 8001950:	601a      	str	r2, [r3, #0]
    for (int i = 81; i < MAX_X_POSITIONS; i+=5)
 8001952:	2351      	movs	r3, #81	; 0x51
 8001954:	60fb      	str	r3, [r7, #12]
 8001956:	e061      	b.n	8001a1c <perform_scanningX+0xe4>
    {

        xCmd = i;
 8001958:	4a3f      	ldr	r2, [pc, #252]	; (8001a58 <perform_scanningX+0x120>)
 800195a:	68fb      	ldr	r3, [r7, #12]
 800195c:	6013      	str	r3, [r2, #0]
        control_X();
 800195e:	f7ff fadf 	bl	8000f20 <control_X>
        Motor_Position();
 8001962:	f7ff fac7 	bl	8000ef4 <Motor_Position>
        delay(10);
 8001966:	200a      	movs	r0, #10
 8001968:	f000 fa78 	bl	8001e5c <delay>

//        frssiX = 30.*sin(((i-100)*3.14)/300) - 70;
//        frssiX = Read_RSSI();

        float frssiTemp;
         frssiX = -200;
 800196c:	4b3b      	ldr	r3, [pc, #236]	; (8001a5c <perform_scanningX+0x124>)
 800196e:	4a3c      	ldr	r2, [pc, #240]	; (8001a60 <perform_scanningX+0x128>)
 8001970:	601a      	str	r2, [r3, #0]
         for (int j = 0; j< 10; j++)
 8001972:	2300      	movs	r3, #0
 8001974:	60bb      	str	r3, [r7, #8]
 8001976:	e017      	b.n	80019a8 <perform_scanningX+0x70>
         {
         	frssiTemp = Uart1_Read();
 8001978:	f000 fc34 	bl	80021e4 <Uart1_Read>
 800197c:	ee07 0a90 	vmov	s15, r0
 8001980:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001984:	edc7 7a01 	vstr	s15, [r7, #4]
         	if (frssiTemp > frssiX) frssiX = frssiTemp;
 8001988:	4b34      	ldr	r3, [pc, #208]	; (8001a5c <perform_scanningX+0x124>)
 800198a:	edd3 7a00 	vldr	s15, [r3]
 800198e:	ed97 7a01 	vldr	s14, [r7, #4]
 8001992:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800199a:	dd02      	ble.n	80019a2 <perform_scanningX+0x6a>
 800199c:	4a2f      	ldr	r2, [pc, #188]	; (8001a5c <perform_scanningX+0x124>)
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	6013      	str	r3, [r2, #0]
         for (int j = 0; j< 10; j++)
 80019a2:	68bb      	ldr	r3, [r7, #8]
 80019a4:	3301      	adds	r3, #1
 80019a6:	60bb      	str	r3, [r7, #8]
 80019a8:	68bb      	ldr	r3, [r7, #8]
 80019aa:	2b09      	cmp	r3, #9
 80019ac:	dde4      	ble.n	8001978 <perform_scanningX+0x40>
         }

        printf("X position i: %d\r\n", i);
 80019ae:	68f9      	ldr	r1, [r7, #12]
 80019b0:	482c      	ldr	r0, [pc, #176]	; (8001a64 <perform_scanningX+0x12c>)
 80019b2:	f001 fc23 	bl	80031fc <iprintf>


		if (frssiX > maxX_rssi) {
 80019b6:	4b25      	ldr	r3, [pc, #148]	; (8001a4c <perform_scanningX+0x114>)
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	ee07 3a90 	vmov	s15, r3
 80019be:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80019c2:	4b26      	ldr	r3, [pc, #152]	; (8001a5c <perform_scanningX+0x124>)
 80019c4:	edd3 7a00 	vldr	s15, [r3]
 80019c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80019cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019d0:	d50b      	bpl.n	80019ea <perform_scanningX+0xb2>
			maxX_rssi = frssiX;
 80019d2:	4b22      	ldr	r3, [pc, #136]	; (8001a5c <perform_scanningX+0x124>)
 80019d4:	edd3 7a00 	vldr	s15, [r3]
 80019d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80019dc:	ee17 2a90 	vmov	r2, s15
 80019e0:	4b1a      	ldr	r3, [pc, #104]	; (8001a4c <perform_scanningX+0x114>)
 80019e2:	601a      	str	r2, [r3, #0]
			maxX_rssi_position = i;
 80019e4:	4a1a      	ldr	r2, [pc, #104]	; (8001a50 <perform_scanningX+0x118>)
 80019e6:	68fb      	ldr	r3, [r7, #12]
 80019e8:	6013      	str	r3, [r2, #0]

		}
		printf("Max RSSI: %i\n\r", maxX_rssi);
 80019ea:	4b18      	ldr	r3, [pc, #96]	; (8001a4c <perform_scanningX+0x114>)
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	4619      	mov	r1, r3
 80019f0:	481d      	ldr	r0, [pc, #116]	; (8001a68 <perform_scanningX+0x130>)
 80019f2:	f001 fc03 	bl	80031fc <iprintf>
        x_positions[i] = i;
 80019f6:	491d      	ldr	r1, [pc, #116]	; (8001a6c <perform_scanningX+0x134>)
 80019f8:	68fb      	ldr	r3, [r7, #12]
 80019fa:	68fa      	ldr	r2, [r7, #12]
 80019fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        rssiX_values[i] = frssiX;
 8001a00:	4b16      	ldr	r3, [pc, #88]	; (8001a5c <perform_scanningX+0x124>)
 8001a02:	edd3 7a00 	vldr	s15, [r3]
 8001a06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001a0a:	ee17 1a90 	vmov	r1, s15
 8001a0e:	4a18      	ldr	r2, [pc, #96]	; (8001a70 <perform_scanningX+0x138>)
 8001a10:	68fb      	ldr	r3, [r7, #12]
 8001a12:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (int i = 81; i < MAX_X_POSITIONS; i+=5)
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	3305      	adds	r3, #5
 8001a1a:	60fb      	str	r3, [r7, #12]
 8001a1c:	68fb      	ldr	r3, [r7, #12]
 8001a1e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8001a22:	db99      	blt.n	8001958 <perform_scanningX+0x20>


    }


    xPos = maxX_rssi_position;
 8001a24:	4b0a      	ldr	r3, [pc, #40]	; (8001a50 <perform_scanningX+0x118>)
 8001a26:	681b      	ldr	r3, [r3, #0]
 8001a28:	4a0a      	ldr	r2, [pc, #40]	; (8001a54 <perform_scanningX+0x11c>)
 8001a2a:	6013      	str	r3, [r2, #0]
    xCmd = xPos;
 8001a2c:	4b09      	ldr	r3, [pc, #36]	; (8001a54 <perform_scanningX+0x11c>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	4a09      	ldr	r2, [pc, #36]	; (8001a58 <perform_scanningX+0x120>)
 8001a32:	6013      	str	r3, [r2, #0]
    printf("**Max xPos: %f**\r\n", maxX_rssi_position);
 8001a34:	4b06      	ldr	r3, [pc, #24]	; (8001a50 <perform_scanningX+0x118>)
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	4619      	mov	r1, r3
 8001a3a:	480e      	ldr	r0, [pc, #56]	; (8001a74 <perform_scanningX+0x13c>)
 8001a3c:	f001 fbde 	bl	80031fc <iprintf>
    Motor_Position();
 8001a40:	f7ff fa58 	bl	8000ef4 <Motor_Position>

}
 8001a44:	bf00      	nop
 8001a46:	3710      	adds	r7, #16
 8001a48:	46bd      	mov	sp, r7
 8001a4a:	bd80      	pop	{r7, pc}
 8001a4c:	200019e8 	.word	0x200019e8
 8001a50:	200019ec 	.word	0x200019ec
 8001a54:	2000001c 	.word	0x2000001c
 8001a58:	20000270 	.word	0x20000270
 8001a5c:	20000024 	.word	0x20000024
 8001a60:	c3480000 	.word	0xc3480000
 8001a64:	08006d20 	.word	0x08006d20
 8001a68:	08006d34 	.word	0x08006d34
 8001a6c:	20000278 	.word	0x20000278
 8001a70:	20000a48 	.word	0x20000a48
 8001a74:	08006d44 	.word	0x08006d44

08001a78 <perform_scanningY>:
float frssiY = -150;
float maxY_rssi;
float maxY_rssi_positions;


void perform_scanningY() {
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b084      	sub	sp, #16
 8001a7c:	af00      	add	r7, sp, #0


	maxY_rssi = -128;
 8001a7e:	4b43      	ldr	r3, [pc, #268]	; (8001b8c <perform_scanningY+0x114>)
 8001a80:	f04f 4243 	mov.w	r2, #3271557120	; 0xc3000000
 8001a84:	601a      	str	r2, [r3, #0]
	maxY_rssi_positions = 0;
 8001a86:	4b42      	ldr	r3, [pc, #264]	; (8001b90 <perform_scanningY+0x118>)
 8001a88:	f04f 0200 	mov.w	r2, #0
 8001a8c:	601a      	str	r2, [r3, #0]
	yCmd = 150;
 8001a8e:	4b41      	ldr	r3, [pc, #260]	; (8001b94 <perform_scanningY+0x11c>)
 8001a90:	2296      	movs	r2, #150	; 0x96
 8001a92:	601a      	str	r2, [r3, #0]
    for (int i = 150; i < MAX_Y_POSITIONS; i+=5)
 8001a94:	2396      	movs	r3, #150	; 0x96
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	e058      	b.n	8001b4c <perform_scanningY+0xd4>
    {

        yCmd = i;
 8001a9a:	4a3e      	ldr	r2, [pc, #248]	; (8001b94 <perform_scanningY+0x11c>)
 8001a9c:	68fb      	ldr	r3, [r7, #12]
 8001a9e:	6013      	str	r3, [r2, #0]
        control_Y();
 8001aa0:	f7ff fa68 	bl	8000f74 <control_Y>
        Motor_Position();
 8001aa4:	f7ff fa26 	bl	8000ef4 <Motor_Position>
        delay(10);
 8001aa8:	200a      	movs	r0, #10
 8001aaa:	f000 f9d7 	bl	8001e5c <delay>


//        frssiY = 30.*sin(((i-140)*3.14)/100) - 70;
      float frssiTemp;
        frssiY = -1000;
 8001aae:	4b3a      	ldr	r3, [pc, #232]	; (8001b98 <perform_scanningY+0x120>)
 8001ab0:	4a3a      	ldr	r2, [pc, #232]	; (8001b9c <perform_scanningY+0x124>)
 8001ab2:	601a      	str	r2, [r3, #0]
        for (int j = 0; j< 10; j++)
 8001ab4:	2300      	movs	r3, #0
 8001ab6:	60bb      	str	r3, [r7, #8]
 8001ab8:	e017      	b.n	8001aea <perform_scanningY+0x72>
        {
        	frssiTemp = Uart1_Read();
 8001aba:	f000 fb93 	bl	80021e4 <Uart1_Read>
 8001abe:	ee07 0a90 	vmov	s15, r0
 8001ac2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001ac6:	edc7 7a01 	vstr	s15, [r7, #4]
        	if (frssiTemp > frssiY) frssiY = frssiTemp;
 8001aca:	4b33      	ldr	r3, [pc, #204]	; (8001b98 <perform_scanningY+0x120>)
 8001acc:	edd3 7a00 	vldr	s15, [r3]
 8001ad0:	ed97 7a01 	vldr	s14, [r7, #4]
 8001ad4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001adc:	dd02      	ble.n	8001ae4 <perform_scanningY+0x6c>
 8001ade:	4a2e      	ldr	r2, [pc, #184]	; (8001b98 <perform_scanningY+0x120>)
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	6013      	str	r3, [r2, #0]
        for (int j = 0; j< 10; j++)
 8001ae4:	68bb      	ldr	r3, [r7, #8]
 8001ae6:	3301      	adds	r3, #1
 8001ae8:	60bb      	str	r3, [r7, #8]
 8001aea:	68bb      	ldr	r3, [r7, #8]
 8001aec:	2b09      	cmp	r3, #9
 8001aee:	dde4      	ble.n	8001aba <perform_scanningY+0x42>
        }

       printf("Y position i: %d\r\n", i);
 8001af0:	68f9      	ldr	r1, [r7, #12]
 8001af2:	482b      	ldr	r0, [pc, #172]	; (8001ba0 <perform_scanningY+0x128>)
 8001af4:	f001 fb82 	bl	80031fc <iprintf>


		if (frssiY > maxY_rssi) {
 8001af8:	4b27      	ldr	r3, [pc, #156]	; (8001b98 <perform_scanningY+0x120>)
 8001afa:	ed93 7a00 	vldr	s14, [r3]
 8001afe:	4b23      	ldr	r3, [pc, #140]	; (8001b8c <perform_scanningY+0x114>)
 8001b00:	edd3 7a00 	vldr	s15, [r3]
 8001b04:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b0c:	dd0b      	ble.n	8001b26 <perform_scanningY+0xae>
			maxY_rssi = frssiY;
 8001b0e:	4b22      	ldr	r3, [pc, #136]	; (8001b98 <perform_scanningY+0x120>)
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	4a1e      	ldr	r2, [pc, #120]	; (8001b8c <perform_scanningY+0x114>)
 8001b14:	6013      	str	r3, [r2, #0]
			maxY_rssi_positions = i;
 8001b16:	68fb      	ldr	r3, [r7, #12]
 8001b18:	ee07 3a90 	vmov	s15, r3
 8001b1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001b20:	4b1b      	ldr	r3, [pc, #108]	; (8001b90 <perform_scanningY+0x118>)
 8001b22:	edc3 7a00 	vstr	s15, [r3]
		}

        y_positions[i] = i;
 8001b26:	491f      	ldr	r1, [pc, #124]	; (8001ba4 <perform_scanningY+0x12c>)
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	68fa      	ldr	r2, [r7, #12]
 8001b2c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        rssiY_values[i] = frssiY;
 8001b30:	4b19      	ldr	r3, [pc, #100]	; (8001b98 <perform_scanningY+0x120>)
 8001b32:	edd3 7a00 	vldr	s15, [r3]
 8001b36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b3a:	ee17 1a90 	vmov	r1, s15
 8001b3e:	4a1a      	ldr	r2, [pc, #104]	; (8001ba8 <perform_scanningY+0x130>)
 8001b40:	68fb      	ldr	r3, [r7, #12]
 8001b42:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (int i = 150; i < MAX_Y_POSITIONS; i+=5)
 8001b46:	68fb      	ldr	r3, [r7, #12]
 8001b48:	3305      	adds	r3, #5
 8001b4a:	60fb      	str	r3, [r7, #12]
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	2bf9      	cmp	r3, #249	; 0xf9
 8001b50:	dda3      	ble.n	8001a9a <perform_scanningY+0x22>


    }


    yPos = maxY_rssi_positions;
 8001b52:	4b0f      	ldr	r3, [pc, #60]	; (8001b90 <perform_scanningY+0x118>)
 8001b54:	edd3 7a00 	vldr	s15, [r3]
 8001b58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b5c:	ee17 2a90 	vmov	r2, s15
 8001b60:	4b12      	ldr	r3, [pc, #72]	; (8001bac <perform_scanningY+0x134>)
 8001b62:	601a      	str	r2, [r3, #0]
    yCmd = yPos;
 8001b64:	4b11      	ldr	r3, [pc, #68]	; (8001bac <perform_scanningY+0x134>)
 8001b66:	681b      	ldr	r3, [r3, #0]
 8001b68:	4a0a      	ldr	r2, [pc, #40]	; (8001b94 <perform_scanningY+0x11c>)
 8001b6a:	6013      	str	r3, [r2, #0]

    printf("**Max Y Pos: %f**\r\n", maxY_rssi_positions);
 8001b6c:	4b08      	ldr	r3, [pc, #32]	; (8001b90 <perform_scanningY+0x118>)
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	4618      	mov	r0, r3
 8001b72:	f7fe fcf1 	bl	8000558 <__aeabi_f2d>
 8001b76:	4602      	mov	r2, r0
 8001b78:	460b      	mov	r3, r1
 8001b7a:	480d      	ldr	r0, [pc, #52]	; (8001bb0 <perform_scanningY+0x138>)
 8001b7c:	f001 fb3e 	bl	80031fc <iprintf>
    Motor_Position();
 8001b80:	f7ff f9b8 	bl	8000ef4 <Motor_Position>

}
 8001b84:	bf00      	nop
 8001b86:	3710      	adds	r7, #16
 8001b88:	46bd      	mov	sp, r7
 8001b8a:	bd80      	pop	{r7, pc}
 8001b8c:	200019f0 	.word	0x200019f0
 8001b90:	200019f4 	.word	0x200019f4
 8001b94:	20000274 	.word	0x20000274
 8001b98:	20000028 	.word	0x20000028
 8001b9c:	c47a0000 	.word	0xc47a0000
 8001ba0:	08006d58 	.word	0x08006d58
 8001ba4:	20001218 	.word	0x20001218
 8001ba8:	20001600 	.word	0x20001600
 8001bac:	20000020 	.word	0x20000020
 8001bb0:	08006d6c 	.word	0x08006d6c

08001bb4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001bb4:	b480      	push	{r7}
 8001bb6:	af00      	add	r7, sp, #0
  return 1;
 8001bb8:	2301      	movs	r3, #1
}
 8001bba:	4618      	mov	r0, r3
 8001bbc:	46bd      	mov	sp, r7
 8001bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc2:	4770      	bx	lr

08001bc4 <_kill>:

int _kill(int pid, int sig)
{
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	b082      	sub	sp, #8
 8001bc8:	af00      	add	r7, sp, #0
 8001bca:	6078      	str	r0, [r7, #4]
 8001bcc:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001bce:	f001 fbdd 	bl	800338c <__errno>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	2216      	movs	r2, #22
 8001bd6:	601a      	str	r2, [r3, #0]
  return -1;
 8001bd8:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001bdc:	4618      	mov	r0, r3
 8001bde:	3708      	adds	r7, #8
 8001be0:	46bd      	mov	sp, r7
 8001be2:	bd80      	pop	{r7, pc}

08001be4 <_exit>:

void _exit (int status)
{
 8001be4:	b580      	push	{r7, lr}
 8001be6:	b082      	sub	sp, #8
 8001be8:	af00      	add	r7, sp, #0
 8001bea:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001bec:	f04f 31ff 	mov.w	r1, #4294967295
 8001bf0:	6878      	ldr	r0, [r7, #4]
 8001bf2:	f7ff ffe7 	bl	8001bc4 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001bf6:	e7fe      	b.n	8001bf6 <_exit+0x12>

08001bf8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001bf8:	b580      	push	{r7, lr}
 8001bfa:	b086      	sub	sp, #24
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	60f8      	str	r0, [r7, #12]
 8001c00:	60b9      	str	r1, [r7, #8]
 8001c02:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c04:	2300      	movs	r3, #0
 8001c06:	617b      	str	r3, [r7, #20]
 8001c08:	e00a      	b.n	8001c20 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001c0a:	f3af 8000 	nop.w
 8001c0e:	4601      	mov	r1, r0
 8001c10:	68bb      	ldr	r3, [r7, #8]
 8001c12:	1c5a      	adds	r2, r3, #1
 8001c14:	60ba      	str	r2, [r7, #8]
 8001c16:	b2ca      	uxtb	r2, r1
 8001c18:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c1a:	697b      	ldr	r3, [r7, #20]
 8001c1c:	3301      	adds	r3, #1
 8001c1e:	617b      	str	r3, [r7, #20]
 8001c20:	697a      	ldr	r2, [r7, #20]
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	429a      	cmp	r2, r3
 8001c26:	dbf0      	blt.n	8001c0a <_read+0x12>
  }

  return len;
 8001c28:	687b      	ldr	r3, [r7, #4]
}
 8001c2a:	4618      	mov	r0, r3
 8001c2c:	3718      	adds	r7, #24
 8001c2e:	46bd      	mov	sp, r7
 8001c30:	bd80      	pop	{r7, pc}

08001c32 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001c32:	b580      	push	{r7, lr}
 8001c34:	b086      	sub	sp, #24
 8001c36:	af00      	add	r7, sp, #0
 8001c38:	60f8      	str	r0, [r7, #12]
 8001c3a:	60b9      	str	r1, [r7, #8]
 8001c3c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c3e:	2300      	movs	r3, #0
 8001c40:	617b      	str	r3, [r7, #20]
 8001c42:	e009      	b.n	8001c58 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001c44:	68bb      	ldr	r3, [r7, #8]
 8001c46:	1c5a      	adds	r2, r3, #1
 8001c48:	60ba      	str	r2, [r7, #8]
 8001c4a:	781b      	ldrb	r3, [r3, #0]
 8001c4c:	4618      	mov	r0, r3
 8001c4e:	f000 fa0f 	bl	8002070 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c52:	697b      	ldr	r3, [r7, #20]
 8001c54:	3301      	adds	r3, #1
 8001c56:	617b      	str	r3, [r7, #20]
 8001c58:	697a      	ldr	r2, [r7, #20]
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	429a      	cmp	r2, r3
 8001c5e:	dbf1      	blt.n	8001c44 <_write+0x12>
  }
  return len;
 8001c60:	687b      	ldr	r3, [r7, #4]
}
 8001c62:	4618      	mov	r0, r3
 8001c64:	3718      	adds	r7, #24
 8001c66:	46bd      	mov	sp, r7
 8001c68:	bd80      	pop	{r7, pc}

08001c6a <_close>:

int _close(int file)
{
 8001c6a:	b480      	push	{r7}
 8001c6c:	b083      	sub	sp, #12
 8001c6e:	af00      	add	r7, sp, #0
 8001c70:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001c72:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001c76:	4618      	mov	r0, r3
 8001c78:	370c      	adds	r7, #12
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c80:	4770      	bx	lr

08001c82 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001c82:	b480      	push	{r7}
 8001c84:	b083      	sub	sp, #12
 8001c86:	af00      	add	r7, sp, #0
 8001c88:	6078      	str	r0, [r7, #4]
 8001c8a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001c8c:	683b      	ldr	r3, [r7, #0]
 8001c8e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001c92:	605a      	str	r2, [r3, #4]
  return 0;
 8001c94:	2300      	movs	r3, #0
}
 8001c96:	4618      	mov	r0, r3
 8001c98:	370c      	adds	r7, #12
 8001c9a:	46bd      	mov	sp, r7
 8001c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ca0:	4770      	bx	lr

08001ca2 <_isatty>:

int _isatty(int file)
{
 8001ca2:	b480      	push	{r7}
 8001ca4:	b083      	sub	sp, #12
 8001ca6:	af00      	add	r7, sp, #0
 8001ca8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001caa:	2301      	movs	r3, #1
}
 8001cac:	4618      	mov	r0, r3
 8001cae:	370c      	adds	r7, #12
 8001cb0:	46bd      	mov	sp, r7
 8001cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb6:	4770      	bx	lr

08001cb8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001cb8:	b480      	push	{r7}
 8001cba:	b085      	sub	sp, #20
 8001cbc:	af00      	add	r7, sp, #0
 8001cbe:	60f8      	str	r0, [r7, #12]
 8001cc0:	60b9      	str	r1, [r7, #8]
 8001cc2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001cc4:	2300      	movs	r3, #0
}
 8001cc6:	4618      	mov	r0, r3
 8001cc8:	3714      	adds	r7, #20
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd0:	4770      	bx	lr
	...

08001cd4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001cd4:	b580      	push	{r7, lr}
 8001cd6:	b086      	sub	sp, #24
 8001cd8:	af00      	add	r7, sp, #0
 8001cda:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001cdc:	4a14      	ldr	r2, [pc, #80]	; (8001d30 <_sbrk+0x5c>)
 8001cde:	4b15      	ldr	r3, [pc, #84]	; (8001d34 <_sbrk+0x60>)
 8001ce0:	1ad3      	subs	r3, r2, r3
 8001ce2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001ce4:	697b      	ldr	r3, [r7, #20]
 8001ce6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001ce8:	4b13      	ldr	r3, [pc, #76]	; (8001d38 <_sbrk+0x64>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	d102      	bne.n	8001cf6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001cf0:	4b11      	ldr	r3, [pc, #68]	; (8001d38 <_sbrk+0x64>)
 8001cf2:	4a12      	ldr	r2, [pc, #72]	; (8001d3c <_sbrk+0x68>)
 8001cf4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001cf6:	4b10      	ldr	r3, [pc, #64]	; (8001d38 <_sbrk+0x64>)
 8001cf8:	681a      	ldr	r2, [r3, #0]
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	4413      	add	r3, r2
 8001cfe:	693a      	ldr	r2, [r7, #16]
 8001d00:	429a      	cmp	r2, r3
 8001d02:	d207      	bcs.n	8001d14 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001d04:	f001 fb42 	bl	800338c <__errno>
 8001d08:	4603      	mov	r3, r0
 8001d0a:	220c      	movs	r2, #12
 8001d0c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001d0e:	f04f 33ff 	mov.w	r3, #4294967295
 8001d12:	e009      	b.n	8001d28 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001d14:	4b08      	ldr	r3, [pc, #32]	; (8001d38 <_sbrk+0x64>)
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001d1a:	4b07      	ldr	r3, [pc, #28]	; (8001d38 <_sbrk+0x64>)
 8001d1c:	681a      	ldr	r2, [r3, #0]
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	4413      	add	r3, r2
 8001d22:	4a05      	ldr	r2, [pc, #20]	; (8001d38 <_sbrk+0x64>)
 8001d24:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001d26:	68fb      	ldr	r3, [r7, #12]
}
 8001d28:	4618      	mov	r0, r3
 8001d2a:	3718      	adds	r7, #24
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}
 8001d30:	20020000 	.word	0x20020000
 8001d34:	00000400 	.word	0x00000400
 8001d38:	200019f8 	.word	0x200019f8
 8001d3c:	20001b50 	.word	0x20001b50

08001d40 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001d40:	b480      	push	{r7}
 8001d42:	b083      	sub	sp, #12
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	4603      	mov	r3, r0
 8001d48:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001d4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d4e:	2b00      	cmp	r3, #0
 8001d50:	db0b      	blt.n	8001d6a <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d52:	79fb      	ldrb	r3, [r7, #7]
 8001d54:	f003 021f 	and.w	r2, r3, #31
 8001d58:	4907      	ldr	r1, [pc, #28]	; (8001d78 <__NVIC_EnableIRQ+0x38>)
 8001d5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d5e:	095b      	lsrs	r3, r3, #5
 8001d60:	2001      	movs	r0, #1
 8001d62:	fa00 f202 	lsl.w	r2, r0, r2
 8001d66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001d6a:	bf00      	nop
 8001d6c:	370c      	adds	r7, #12
 8001d6e:	46bd      	mov	sp, r7
 8001d70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d74:	4770      	bx	lr
 8001d76:	bf00      	nop
 8001d78:	e000e100 	.word	0xe000e100

08001d7c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001d7c:	b480      	push	{r7}
 8001d7e:	b083      	sub	sp, #12
 8001d80:	af00      	add	r7, sp, #0
 8001d82:	4603      	mov	r3, r0
 8001d84:	6039      	str	r1, [r7, #0]
 8001d86:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001d88:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	db0a      	blt.n	8001da6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d90:	683b      	ldr	r3, [r7, #0]
 8001d92:	b2da      	uxtb	r2, r3
 8001d94:	490c      	ldr	r1, [pc, #48]	; (8001dc8 <__NVIC_SetPriority+0x4c>)
 8001d96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d9a:	0112      	lsls	r2, r2, #4
 8001d9c:	b2d2      	uxtb	r2, r2
 8001d9e:	440b      	add	r3, r1
 8001da0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001da4:	e00a      	b.n	8001dbc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001da6:	683b      	ldr	r3, [r7, #0]
 8001da8:	b2da      	uxtb	r2, r3
 8001daa:	4908      	ldr	r1, [pc, #32]	; (8001dcc <__NVIC_SetPriority+0x50>)
 8001dac:	79fb      	ldrb	r3, [r7, #7]
 8001dae:	f003 030f 	and.w	r3, r3, #15
 8001db2:	3b04      	subs	r3, #4
 8001db4:	0112      	lsls	r2, r2, #4
 8001db6:	b2d2      	uxtb	r2, r2
 8001db8:	440b      	add	r3, r1
 8001dba:	761a      	strb	r2, [r3, #24]
}
 8001dbc:	bf00      	nop
 8001dbe:	370c      	adds	r7, #12
 8001dc0:	46bd      	mov	sp, r7
 8001dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc6:	4770      	bx	lr
 8001dc8:	e000e100 	.word	0xe000e100
 8001dcc:	e000ed00 	.word	0xe000ed00

08001dd0 <SysTick_Init>:
uint32_t heart_count = 0;

//******************************************************************************************
// Initialize SysTick
//******************************************************************************************
void SysTick_Init(void){
 8001dd0:	b580      	push	{r7, lr}
 8001dd2:	af00      	add	r7, sp, #0
	// The RCC feeds the Cortex System Timer (SysTick) external clock with the AHB clock
	// (HCLK) divided by 8. The SysTick can work either with this clock or with the Cortex clock
	// (HCLK), configurable in the SysTick Control and Status Register.

	//  SysTick Control and Status Register
	SysTick->CTRL = 0;										// Disable SysTick IRQ and SysTick Counter
 8001dd4:	4b12      	ldr	r3, [pc, #72]	; (8001e20 <SysTick_Init+0x50>)
 8001dd6:	2200      	movs	r2, #0
 8001dd8:	601a      	str	r2, [r3, #0]

	// SysTick Reload Value Register - Note: HCLK = 80MHz (no divide by 8)
	SysTick->LOAD = 16000000 / 50;    // 1ms, Default clock
 8001dda:	4b11      	ldr	r3, [pc, #68]	; (8001e20 <SysTick_Init+0x50>)
 8001ddc:	4a11      	ldr	r2, [pc, #68]	; (8001e24 <SysTick_Init+0x54>)
 8001dde:	605a      	str	r2, [r3, #4]

	// SysTick Current Value Register
	SysTick->VAL = 0;
 8001de0:	4b0f      	ldr	r3, [pc, #60]	; (8001e20 <SysTick_Init+0x50>)
 8001de2:	2200      	movs	r2, #0
 8001de4:	609a      	str	r2, [r3, #8]

	NVIC_SetPriority(SysTick_IRQn, 1);		// Set Priority to 1
 8001de6:	2101      	movs	r1, #1
 8001de8:	f04f 30ff 	mov.w	r0, #4294967295
 8001dec:	f7ff ffc6 	bl	8001d7c <__NVIC_SetPriority>
	NVIC_EnableIRQ(SysTick_IRQn);					// Enable EXTI0_1 interrupt in NVIC
 8001df0:	f04f 30ff 	mov.w	r0, #4294967295
 8001df4:	f7ff ffa4 	bl	8001d40 <__NVIC_EnableIRQ>

	// Enables SysTick exception request
	// 1 = counting down to zero asserts the SysTick exception request
	// 0 = counting down to zero does not assert the SysTick exception request
	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 8001df8:	4b09      	ldr	r3, [pc, #36]	; (8001e20 <SysTick_Init+0x50>)
 8001dfa:	681b      	ldr	r3, [r3, #0]
 8001dfc:	4a08      	ldr	r2, [pc, #32]	; (8001e20 <SysTick_Init+0x50>)
 8001dfe:	f043 0302 	orr.w	r3, r3, #2
 8001e02:	6013      	str	r3, [r2, #0]

	// Select processor clock
	// 1 = processor clock;  0 = external clock
	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk;
 8001e04:	4b06      	ldr	r3, [pc, #24]	; (8001e20 <SysTick_Init+0x50>)
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	4a05      	ldr	r2, [pc, #20]	; (8001e20 <SysTick_Init+0x50>)
 8001e0a:	f043 0304 	orr.w	r3, r3, #4
 8001e0e:	6013      	str	r3, [r2, #0]

	// Enable SysTick IRQ and SysTick Timer
	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;
 8001e10:	4b03      	ldr	r3, [pc, #12]	; (8001e20 <SysTick_Init+0x50>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	4a02      	ldr	r2, [pc, #8]	; (8001e20 <SysTick_Init+0x50>)
 8001e16:	f043 0301 	orr.w	r3, r3, #1
 8001e1a:	6013      	str	r3, [r2, #0]
}
 8001e1c:	bf00      	nop
 8001e1e:	bd80      	pop	{r7, pc}
 8001e20:	e000e010 	.word	0xe000e010
 8001e24:	0004e200 	.word	0x0004e200

08001e28 <SysTick_Handler>:


//******************************************************************************************
// SysTick Interrupt Handler
//******************************************************************************************
void SysTick_Handler(void){
 8001e28:	b480      	push	{r7}
 8001e2a:	af00      	add	r7, sp, #0
	msTicks++;
 8001e2c:	4b08      	ldr	r3, [pc, #32]	; (8001e50 <SysTick_Handler+0x28>)
 8001e2e:	681b      	ldr	r3, [r3, #0]
 8001e30:	3301      	adds	r3, #1
 8001e32:	4a07      	ldr	r2, [pc, #28]	; (8001e50 <SysTick_Handler+0x28>)
 8001e34:	6013      	str	r3, [r2, #0]
	heartbeat = true;
 8001e36:	4b07      	ldr	r3, [pc, #28]	; (8001e54 <SysTick_Handler+0x2c>)
 8001e38:	2201      	movs	r2, #1
 8001e3a:	701a      	strb	r2, [r3, #0]
	heart_count++;
 8001e3c:	4b06      	ldr	r3, [pc, #24]	; (8001e58 <SysTick_Handler+0x30>)
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	3301      	adds	r3, #1
 8001e42:	4a05      	ldr	r2, [pc, #20]	; (8001e58 <SysTick_Handler+0x30>)
 8001e44:	6013      	str	r3, [r2, #0]
}
 8001e46:	bf00      	nop
 8001e48:	46bd      	mov	sp, r7
 8001e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e4e:	4770      	bx	lr
 8001e50:	200019fc 	.word	0x200019fc
 8001e54:	20000264 	.word	0x20000264
 8001e58:	20001a00 	.word	0x20001a00

08001e5c <delay>:

//******************************************************************************************
// Delay in ms
//******************************************************************************************
void delay (uint32_t T){
 8001e5c:	b480      	push	{r7}
 8001e5e:	b083      	sub	sp, #12
 8001e60:	af00      	add	r7, sp, #0
 8001e62:	6078      	str	r0, [r7, #4]
	msTicks = 0;
 8001e64:	4b07      	ldr	r3, [pc, #28]	; (8001e84 <delay+0x28>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	601a      	str	r2, [r3, #0]
  while ((msTicks) < T);
 8001e6a:	bf00      	nop
 8001e6c:	4b05      	ldr	r3, [pc, #20]	; (8001e84 <delay+0x28>)
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	687a      	ldr	r2, [r7, #4]
 8001e72:	429a      	cmp	r2, r3
 8001e74:	d8fa      	bhi.n	8001e6c <delay+0x10>
}
 8001e76:	bf00      	nop
 8001e78:	bf00      	nop
 8001e7a:	370c      	adds	r7, #12
 8001e7c:	46bd      	mov	sp, r7
 8001e7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e82:	4770      	bx	lr
 8001e84:	200019fc 	.word	0x200019fc

08001e88 <tim2_pa0_pa1_pwm_init>:
#define TIM2EN			(1U<<0)
#define CR1_CEN			(1U<<0)


void tim2_pa0_pa1_pwm_init(void)
{
 8001e88:	b480      	push	{r7}
 8001e8a:	af00      	add	r7, sp, #0
	/*******GPIO Configuration*********/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8001e8c:	4b56      	ldr	r3, [pc, #344]	; (8001fe8 <tim2_pa0_pa1_pwm_init+0x160>)
 8001e8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e90:	4a55      	ldr	r2, [pc, #340]	; (8001fe8 <tim2_pa0_pa1_pwm_init+0x160>)
 8001e92:	f043 0301 	orr.w	r3, r3, #1
 8001e96:	6313      	str	r3, [r2, #48]	; 0x30
	/*set PA0 and PA1 modes to alternate function mode*/
	/*PA0*/
	GPIOA->MODER &= ~(1U<<0);
 8001e98:	4b54      	ldr	r3, [pc, #336]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	4a53      	ldr	r2, [pc, #332]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001e9e:	f023 0301 	bic.w	r3, r3, #1
 8001ea2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<1);
 8001ea4:	4b51      	ldr	r3, [pc, #324]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	4a50      	ldr	r2, [pc, #320]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001eaa:	f043 0302 	orr.w	r3, r3, #2
 8001eae:	6013      	str	r3, [r2, #0]

	/*PA1*/
	GPIOA->MODER &= ~(1U<<2);
 8001eb0:	4b4e      	ldr	r3, [pc, #312]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	4a4d      	ldr	r2, [pc, #308]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001eb6:	f023 0304 	bic.w	r3, r3, #4
 8001eba:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);
 8001ebc:	4b4b      	ldr	r3, [pc, #300]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	4a4a      	ldr	r2, [pc, #296]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ec2:	f043 0308 	orr.w	r3, r3, #8
 8001ec6:	6013      	str	r3, [r2, #0]

	/*set alternate function type to TIM2 (AF01 0001)*/
	/*Set AFR for PA0*/
	GPIOA->AFR[0] |= (1U<<0);
 8001ec8:	4b48      	ldr	r3, [pc, #288]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001eca:	6a1b      	ldr	r3, [r3, #32]
 8001ecc:	4a47      	ldr	r2, [pc, #284]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ece:	f043 0301 	orr.w	r3, r3, #1
 8001ed2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<1);
 8001ed4:	4b45      	ldr	r3, [pc, #276]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ed6:	6a1b      	ldr	r3, [r3, #32]
 8001ed8:	4a44      	ldr	r2, [pc, #272]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001eda:	f023 0302 	bic.w	r3, r3, #2
 8001ede:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<2);
 8001ee0:	4b42      	ldr	r3, [pc, #264]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ee2:	6a1b      	ldr	r3, [r3, #32]
 8001ee4:	4a41      	ldr	r2, [pc, #260]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ee6:	f023 0304 	bic.w	r3, r3, #4
 8001eea:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<3);
 8001eec:	4b3f      	ldr	r3, [pc, #252]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001eee:	6a1b      	ldr	r3, [r3, #32]
 8001ef0:	4a3e      	ldr	r2, [pc, #248]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001ef2:	f023 0308 	bic.w	r3, r3, #8
 8001ef6:	6213      	str	r3, [r2, #32]

	/*Set AFR for PA1*/
	GPIOA->AFR[0] |= (1U<<4);
 8001ef8:	4b3c      	ldr	r3, [pc, #240]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001efa:	6a1b      	ldr	r3, [r3, #32]
 8001efc:	4a3b      	ldr	r2, [pc, #236]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001efe:	f043 0310 	orr.w	r3, r3, #16
 8001f02:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<5);
 8001f04:	4b39      	ldr	r3, [pc, #228]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001f06:	6a1b      	ldr	r3, [r3, #32]
 8001f08:	4a38      	ldr	r2, [pc, #224]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001f0a:	f023 0320 	bic.w	r3, r3, #32
 8001f0e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<6);
 8001f10:	4b36      	ldr	r3, [pc, #216]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001f12:	6a1b      	ldr	r3, [r3, #32]
 8001f14:	4a35      	ldr	r2, [pc, #212]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001f16:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001f1a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<7);
 8001f1c:	4b33      	ldr	r3, [pc, #204]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001f1e:	6a1b      	ldr	r3, [r3, #32]
 8001f20:	4a32      	ldr	r2, [pc, #200]	; (8001fec <tim2_pa0_pa1_pwm_init+0x164>)
 8001f22:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001f26:	6213      	str	r3, [r2, #32]
	/*******Tim2 Configuration*********/
	/*Enable clock access to TIM2*/
	RCC->APB1ENR |= TIM2EN;
 8001f28:	4b2f      	ldr	r3, [pc, #188]	; (8001fe8 <tim2_pa0_pa1_pwm_init+0x160>)
 8001f2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f2c:	4a2e      	ldr	r2, [pc, #184]	; (8001fe8 <tim2_pa0_pa1_pwm_init+0x160>)
 8001f2e:	f043 0301 	orr.w	r3, r3, #1
 8001f32:	6413      	str	r3, [r2, #64]	; 0x40
	/*set timer prescaler*/
	TIM2->PSC = 80;  // 16 000 000 no divider = 16 000 000
 8001f34:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f38:	2250      	movs	r2, #80	; 0x50
 8001f3a:	629a      	str	r2, [r3, #40]	; 0x28
	/*set auto reload value*/
	TIM2->ARR = 3250 - 1; //16 000 000 / 100 = 160 000
 8001f3c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f40:	f640 42b1 	movw	r2, #3249	; 0xcb1
 8001f44:	62da      	str	r2, [r3, #44]	; 0x2c
	/*reset the timer count*/
	TIM2->CNT = 0;
 8001f46:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	625a      	str	r2, [r3, #36]	; 0x24
	/*Set PA1 (channel 2) and PA0 (channel 1) to 110 : PWM mode 1 finding OC1M (CH1) and OC2M (CH2) in the reference manual under CCMR1*/
	/*PA0*/
	TIM2->CCMR1 &= ~(1U<<4);
 8001f4e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f52:	699b      	ldr	r3, [r3, #24]
 8001f54:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f58:	f023 0310 	bic.w	r3, r3, #16
 8001f5c:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 |=  (1U<<5);
 8001f5e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f62:	699b      	ldr	r3, [r3, #24]
 8001f64:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f68:	f043 0320 	orr.w	r3, r3, #32
 8001f6c:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 |=  (1U<<6);
 8001f6e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f72:	699b      	ldr	r3, [r3, #24]
 8001f74:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f78:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f7c:	6193      	str	r3, [r2, #24]
	/*PA1*/
	TIM2->CCMR1 &= ~(1U<<12);
 8001f7e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f82:	699b      	ldr	r3, [r3, #24]
 8001f84:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f88:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001f8c:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 |=  (1U<<13);
 8001f8e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f92:	699b      	ldr	r3, [r3, #24]
 8001f94:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f98:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001f9c:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 |=  (1U<<14);
 8001f9e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fa2:	699b      	ldr	r3, [r3, #24]
 8001fa4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fa8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001fac:	6193      	str	r3, [r2, #24]
	/*Enable ch1 and ch2 search CCER in the reference manual*/
	/*Channel 1*/
	TIM2->CCER |= (1U<<0);
 8001fae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fb2:	6a1b      	ldr	r3, [r3, #32]
 8001fb4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fb8:	f043 0301 	orr.w	r3, r3, #1
 8001fbc:	6213      	str	r3, [r2, #32]
	/*Channel 2*/
	TIM2->CCER |= (1U<<4);
 8001fbe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fc2:	6a1b      	ldr	r3, [r3, #32]
 8001fc4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fc8:	f043 0310 	orr.w	r3, r3, #16
 8001fcc:	6213      	str	r3, [r2, #32]
	/*enable timer find timx_cr1 in the reference manual and enable CEN (counter enable)*/
	TIM2->CR1 |= CR1_CEN;
 8001fce:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001fd8:	f043 0301 	orr.w	r3, r3, #1
 8001fdc:	6013      	str	r3, [r2, #0]

}
 8001fde:	bf00      	nop
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe6:	4770      	bx	lr
 8001fe8:	40023800 	.word	0x40023800
 8001fec:	40020000 	.word	0x40020000

08001ff0 <tim2_pa0_pa1_pwm_set_dutycycle>:



void tim2_pa0_pa1_pwm_set_dutycycle(uint8_t ch, uint32_t dutycycle)
{
 8001ff0:	b480      	push	{r7}
 8001ff2:	b083      	sub	sp, #12
 8001ff4:	af00      	add	r7, sp, #0
 8001ff6:	4603      	mov	r3, r0
 8001ff8:	6039      	str	r1, [r7, #0]
 8001ffa:	71fb      	strb	r3, [r7, #7]
	/*Select Channel*/
	switch(ch)
 8001ffc:	79fb      	ldrb	r3, [r7, #7]
 8001ffe:	2b01      	cmp	r3, #1
 8002000:	d002      	beq.n	8002008 <tim2_pa0_pa1_pwm_set_dutycycle+0x18>
 8002002:	2b02      	cmp	r3, #2
 8002004:	d005      	beq.n	8002012 <tim2_pa0_pa1_pwm_set_dutycycle+0x22>
			break;
		case 2:
			TIM2->CCR2 = dutycycle;
			break;
		default:
			break;
 8002006:	e009      	b.n	800201c <tim2_pa0_pa1_pwm_set_dutycycle+0x2c>
			TIM2->CCR1 = dutycycle;
 8002008:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800200c:	683b      	ldr	r3, [r7, #0]
 800200e:	6353      	str	r3, [r2, #52]	; 0x34
			break;
 8002010:	e004      	b.n	800201c <tim2_pa0_pa1_pwm_set_dutycycle+0x2c>
			TIM2->CCR2 = dutycycle;
 8002012:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002016:	683b      	ldr	r3, [r7, #0]
 8002018:	6393      	str	r3, [r2, #56]	; 0x38
			break;
 800201a:	bf00      	nop
	}

}
 800201c:	bf00      	nop
 800201e:	370c      	adds	r7, #12
 8002020:	46bd      	mov	sp, r7
 8002022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002026:	4770      	bx	lr

08002028 <uart2_read>:
void uart2_write(int ch);



char uart2_read(void)
{
 8002028:	b480      	push	{r7}
 800202a:	af00      	add	r7, sp, #0
	/*make sure the transmit data register is not empty RXNE flag*/
	while(!(USART2->SR & SR_RXNE)){}	//to read a register we use the & operation
 800202c:	bf00      	nop
 800202e:	4b07      	ldr	r3, [pc, #28]	; (800204c <uart2_read+0x24>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	f003 0320 	and.w	r3, r3, #32
 8002036:	2b00      	cmp	r3, #0
 8002038:	d0f9      	beq.n	800202e <uart2_read+0x6>

	/* read data */
	return USART2->DR;
 800203a:	4b04      	ldr	r3, [pc, #16]	; (800204c <uart2_read+0x24>)
 800203c:	685b      	ldr	r3, [r3, #4]
 800203e:	b2db      	uxtb	r3, r3
}
 8002040:	4618      	mov	r0, r3
 8002042:	46bd      	mov	sp, r7
 8002044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002048:	4770      	bx	lr
 800204a:	bf00      	nop
 800204c:	40004400 	.word	0x40004400

08002050 <kbhit>:

char kbhit(void)
{
 8002050:	b480      	push	{r7}
 8002052:	af00      	add	r7, sp, #0
	/*make sure the transmit data register is not empty RXNE flag*/
	//to read a register we use the & operation

	return (USART2->SR & SR_RXNE);
 8002054:	4b05      	ldr	r3, [pc, #20]	; (800206c <kbhit+0x1c>)
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	b2db      	uxtb	r3, r3
 800205a:	f003 0320 	and.w	r3, r3, #32
 800205e:	b2db      	uxtb	r3, r3
}
 8002060:	4618      	mov	r0, r3
 8002062:	46bd      	mov	sp, r7
 8002064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002068:	4770      	bx	lr
 800206a:	bf00      	nop
 800206c:	40004400 	.word	0x40004400

08002070 <__io_putchar>:


int __io_putchar(int ch) //allows printf to function calling the uart2_write(ch)
{
 8002070:	b580      	push	{r7, lr}
 8002072:	b082      	sub	sp, #8
 8002074:	af00      	add	r7, sp, #0
 8002076:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8002078:	6878      	ldr	r0, [r7, #4]
 800207a:	f000 f805 	bl	8002088 <uart2_write>
	return ch;
 800207e:	687b      	ldr	r3, [r7, #4]
}
 8002080:	4618      	mov	r0, r3
 8002082:	3708      	adds	r7, #8
 8002084:	46bd      	mov	sp, r7
 8002086:	bd80      	pop	{r7, pc}

08002088 <uart2_write>:


void uart2_write(int ch)
{
 8002088:	b480      	push	{r7}
 800208a:	b083      	sub	sp, #12
 800208c:	af00      	add	r7, sp, #0
 800208e:	6078      	str	r0, [r7, #4]
	/*make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}	//to read a register we use the & operation
 8002090:	bf00      	nop
 8002092:	4b08      	ldr	r3, [pc, #32]	; (80020b4 <uart2_write+0x2c>)
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800209a:	2b00      	cmp	r3, #0
 800209c:	d0f9      	beq.n	8002092 <uart2_write+0xa>
	/*write to transmit data register*/

	USART2->DR = (ch & 0xFF);
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	4a04      	ldr	r2, [pc, #16]	; (80020b4 <uart2_write+0x2c>)
 80020a2:	b2db      	uxtb	r3, r3
 80020a4:	6053      	str	r3, [r2, #4]
}
 80020a6:	bf00      	nop
 80020a8:	370c      	adds	r7, #12
 80020aa:	46bd      	mov	sp, r7
 80020ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b0:	4770      	bx	lr
 80020b2:	bf00      	nop
 80020b4:	40004400 	.word	0x40004400

080020b8 <uart2_rxtx_init>:

void uart2_rxtx_init(void)
{
 80020b8:	b580      	push	{r7, lr}
 80020ba:	af00      	add	r7, sp, #0
	/* ************* configure uart gpio pin ************/
	 //1. enable clock access to gpio a
	RCC->AHB1ENR |= GPIOAEN;
 80020bc:	4b32      	ldr	r3, [pc, #200]	; (8002188 <uart2_rxtx_init+0xd0>)
 80020be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020c0:	4a31      	ldr	r2, [pc, #196]	; (8002188 <uart2_rxtx_init+0xd0>)
 80020c2:	f043 0301 	orr.w	r3, r3, #1
 80020c6:	6313      	str	r3, [r2, #48]	; 0x30
	 // 2. set PA2 mode to alternate function mode
	GPIOA->MODER &= ~(1U<<4);
 80020c8:	4b30      	ldr	r3, [pc, #192]	; (800218c <uart2_rxtx_init+0xd4>)
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	4a2f      	ldr	r2, [pc, #188]	; (800218c <uart2_rxtx_init+0xd4>)
 80020ce:	f023 0310 	bic.w	r3, r3, #16
 80020d2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 80020d4:	4b2d      	ldr	r3, [pc, #180]	; (800218c <uart2_rxtx_init+0xd4>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	4a2c      	ldr	r2, [pc, #176]	; (800218c <uart2_rxtx_init+0xd4>)
 80020da:	f043 0320 	orr.w	r3, r3, #32
 80020de:	6013      	str	r3, [r2, #0]
	 // 3. set PA2 alternate function type to UART_TX (AF07)
	GPIOA->AFR[0] |= (1U<<8);
 80020e0:	4b2a      	ldr	r3, [pc, #168]	; (800218c <uart2_rxtx_init+0xd4>)
 80020e2:	6a1b      	ldr	r3, [r3, #32]
 80020e4:	4a29      	ldr	r2, [pc, #164]	; (800218c <uart2_rxtx_init+0xd4>)
 80020e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80020ea:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 80020ec:	4b27      	ldr	r3, [pc, #156]	; (800218c <uart2_rxtx_init+0xd4>)
 80020ee:	6a1b      	ldr	r3, [r3, #32]
 80020f0:	4a26      	ldr	r2, [pc, #152]	; (800218c <uart2_rxtx_init+0xd4>)
 80020f2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80020f6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 80020f8:	4b24      	ldr	r3, [pc, #144]	; (800218c <uart2_rxtx_init+0xd4>)
 80020fa:	6a1b      	ldr	r3, [r3, #32]
 80020fc:	4a23      	ldr	r2, [pc, #140]	; (800218c <uart2_rxtx_init+0xd4>)
 80020fe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002102:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 8002104:	4b21      	ldr	r3, [pc, #132]	; (800218c <uart2_rxtx_init+0xd4>)
 8002106:	6a1b      	ldr	r3, [r3, #32]
 8002108:	4a20      	ldr	r2, [pc, #128]	; (800218c <uart2_rxtx_init+0xd4>)
 800210a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800210e:	6213      	str	r3, [r2, #32]


	// 2. set PA3 mode to alternate function mode
	GPIOA->MODER &= ~(1U<<6);
 8002110:	4b1e      	ldr	r3, [pc, #120]	; (800218c <uart2_rxtx_init+0xd4>)
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	4a1d      	ldr	r2, [pc, #116]	; (800218c <uart2_rxtx_init+0xd4>)
 8002116:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800211a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=  (1U<<7);
 800211c:	4b1b      	ldr	r3, [pc, #108]	; (800218c <uart2_rxtx_init+0xd4>)
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	4a1a      	ldr	r2, [pc, #104]	; (800218c <uart2_rxtx_init+0xd4>)
 8002122:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002126:	6013      	str	r3, [r2, #0]
	// 3. set PA3 alternate function type to UART_RX (AF07)
	GPIOA->AFR[0] |= (1U<<12);
 8002128:	4b18      	ldr	r3, [pc, #96]	; (800218c <uart2_rxtx_init+0xd4>)
 800212a:	6a1b      	ldr	r3, [r3, #32]
 800212c:	4a17      	ldr	r2, [pc, #92]	; (800218c <uart2_rxtx_init+0xd4>)
 800212e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002132:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<13);
 8002134:	4b15      	ldr	r3, [pc, #84]	; (800218c <uart2_rxtx_init+0xd4>)
 8002136:	6a1b      	ldr	r3, [r3, #32]
 8002138:	4a14      	ldr	r2, [pc, #80]	; (800218c <uart2_rxtx_init+0xd4>)
 800213a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800213e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<14);
 8002140:	4b12      	ldr	r3, [pc, #72]	; (800218c <uart2_rxtx_init+0xd4>)
 8002142:	6a1b      	ldr	r3, [r3, #32]
 8002144:	4a11      	ldr	r2, [pc, #68]	; (800218c <uart2_rxtx_init+0xd4>)
 8002146:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800214a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<15);
 800214c:	4b0f      	ldr	r3, [pc, #60]	; (800218c <uart2_rxtx_init+0xd4>)
 800214e:	6a1b      	ldr	r3, [r3, #32]
 8002150:	4a0e      	ldr	r2, [pc, #56]	; (800218c <uart2_rxtx_init+0xd4>)
 8002152:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002156:	6213      	str	r3, [r2, #32]
	/************** configure uart gpio pin ************/
	//Enable clock access to uart2
	RCC->APB1ENR |= UART2EN;
 8002158:	4b0b      	ldr	r3, [pc, #44]	; (8002188 <uart2_rxtx_init+0xd0>)
 800215a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800215c:	4a0a      	ldr	r2, [pc, #40]	; (8002188 <uart2_rxtx_init+0xd0>)
 800215e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002162:	6413      	str	r3, [r2, #64]	; 0x40
	//configure baudrate (there is an equation which is the bus frequency)
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 8002164:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002168:	4909      	ldr	r1, [pc, #36]	; (8002190 <uart2_rxtx_init+0xd8>)
 800216a:	480a      	ldr	r0, [pc, #40]	; (8002194 <uart2_rxtx_init+0xdc>)
 800216c:	f000 f814 	bl	8002198 <uart_set_baudrate>
	//configure the transfer direction
	USART2->CR1 = CR1_TE | CR1_RE;
 8002170:	4b08      	ldr	r3, [pc, #32]	; (8002194 <uart2_rxtx_init+0xdc>)
 8002172:	220c      	movs	r2, #12
 8002174:	60da      	str	r2, [r3, #12]
	//enable uart module
	USART2->CR1 |= CR1_UE;		//the OR operator (|) keeps all 32 bits the same and only changes 13
 8002176:	4b07      	ldr	r3, [pc, #28]	; (8002194 <uart2_rxtx_init+0xdc>)
 8002178:	68db      	ldr	r3, [r3, #12]
 800217a:	4a06      	ldr	r2, [pc, #24]	; (8002194 <uart2_rxtx_init+0xdc>)
 800217c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002180:	60d3      	str	r3, [r2, #12]
								//if the = operator is used than it will set all but 13 to zero and change only 13


}
 8002182:	bf00      	nop
 8002184:	bd80      	pop	{r7, pc}
 8002186:	bf00      	nop
 8002188:	40023800 	.word	0x40023800
 800218c:	40020000 	.word	0x40020000
 8002190:	00f42400 	.word	0x00f42400
 8002194:	40004400 	.word	0x40004400

08002198 <uart_set_baudrate>:




static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 8002198:	b580      	push	{r7, lr}
 800219a:	b084      	sub	sp, #16
 800219c:	af00      	add	r7, sp, #0
 800219e:	60f8      	str	r0, [r7, #12]
 80021a0:	60b9      	str	r1, [r7, #8]
 80021a2:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_BD(PeriphClk,BaudRate);
 80021a4:	6879      	ldr	r1, [r7, #4]
 80021a6:	68b8      	ldr	r0, [r7, #8]
 80021a8:	f000 f808 	bl	80021bc <compute_uart_BD>
 80021ac:	4603      	mov	r3, r0
 80021ae:	461a      	mov	r2, r3
 80021b0:	68fb      	ldr	r3, [r7, #12]
 80021b2:	609a      	str	r2, [r3, #8]
}
 80021b4:	bf00      	nop
 80021b6:	3710      	adds	r7, #16
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bd80      	pop	{r7, pc}

080021bc <compute_uart_BD>:


static uint16_t compute_uart_BD(uint32_t PeriphClk, uint32_t BaudRate)
{
 80021bc:	b480      	push	{r7}
 80021be:	b083      	sub	sp, #12
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	6078      	str	r0, [r7, #4]
 80021c4:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 80021c6:	683b      	ldr	r3, [r7, #0]
 80021c8:	085a      	lsrs	r2, r3, #1
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	441a      	add	r2, r3
 80021ce:	683b      	ldr	r3, [r7, #0]
 80021d0:	fbb2 f3f3 	udiv	r3, r2, r3
 80021d4:	b29b      	uxth	r3, r3
}
 80021d6:	4618      	mov	r0, r3
 80021d8:	370c      	adds	r7, #12
 80021da:	46bd      	mov	sp, r7
 80021dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021e0:	4770      	bx	lr
	...

080021e4 <Uart1_Read>:




char Uart1_Read(void)
{
 80021e4:	b480      	push	{r7}
 80021e6:	af00      	add	r7, sp, #0
	while(!(USART1->SR & SR_RXNE)){}
 80021e8:	bf00      	nop
 80021ea:	4b07      	ldr	r3, [pc, #28]	; (8002208 <Uart1_Read+0x24>)
 80021ec:	681b      	ldr	r3, [r3, #0]
 80021ee:	f003 0320 	and.w	r3, r3, #32
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d0f9      	beq.n	80021ea <Uart1_Read+0x6>

	return USART1->DR;
 80021f6:	4b04      	ldr	r3, [pc, #16]	; (8002208 <Uart1_Read+0x24>)
 80021f8:	685b      	ldr	r3, [r3, #4]
 80021fa:	b2db      	uxtb	r3, r3
}
 80021fc:	4618      	mov	r0, r3
 80021fe:	46bd      	mov	sp, r7
 8002200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002204:	4770      	bx	lr
 8002206:	bf00      	nop
 8002208:	40011000 	.word	0x40011000

0800220c <Uart1_Init>:

	USART1->DR = (ch & 0xFF);
}

void Uart1_Init(void)
{
 800220c:	b580      	push	{r7, lr}
 800220e:	af00      	add	r7, sp, #0
/* ENABLE CLOCK TO GPIOA */
	RCC->AHB1ENR |= GPIOAEN; //CLOCK ACCESS TO GPIOA
 8002210:	4b32      	ldr	r3, [pc, #200]	; (80022dc <Uart1_Init+0xd0>)
 8002212:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002214:	4a31      	ldr	r2, [pc, #196]	; (80022dc <Uart1_Init+0xd0>)
 8002216:	f043 0301 	orr.w	r3, r3, #1
 800221a:	6313      	str	r3, [r2, #48]	; 0x30


/*PA 9 TX */
	GPIOA->MODER &=	~(1U<<18); //SET BIT 18 TO ZERO
 800221c:	4b30      	ldr	r3, [pc, #192]	; (80022e0 <Uart1_Init+0xd4>)
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	4a2f      	ldr	r2, [pc, #188]	; (80022e0 <Uart1_Init+0xd4>)
 8002222:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002226:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=  (1U<<19); //SET BIT 19 TO 1
 8002228:	4b2d      	ldr	r3, [pc, #180]	; (80022e0 <Uart1_Init+0xd4>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	4a2c      	ldr	r2, [pc, #176]	; (80022e0 <Uart1_Init+0xd4>)
 800222e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8002232:	6013      	str	r3, [r2, #0]
/* SET AFRH TO 07 0111 */
	GPIOA->AFR[1] |=  (1U<<4);
 8002234:	4b2a      	ldr	r3, [pc, #168]	; (80022e0 <Uart1_Init+0xd4>)
 8002236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002238:	4a29      	ldr	r2, [pc, #164]	; (80022e0 <Uart1_Init+0xd4>)
 800223a:	f043 0310 	orr.w	r3, r3, #16
 800223e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] |=  (1U<<5);
 8002240:	4b27      	ldr	r3, [pc, #156]	; (80022e0 <Uart1_Init+0xd4>)
 8002242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002244:	4a26      	ldr	r2, [pc, #152]	; (80022e0 <Uart1_Init+0xd4>)
 8002246:	f043 0320 	orr.w	r3, r3, #32
 800224a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] |=  (1U<<6);
 800224c:	4b24      	ldr	r3, [pc, #144]	; (80022e0 <Uart1_Init+0xd4>)
 800224e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002250:	4a23      	ldr	r2, [pc, #140]	; (80022e0 <Uart1_Init+0xd4>)
 8002252:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002256:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] &= ~(1U<<7);
 8002258:	4b21      	ldr	r3, [pc, #132]	; (80022e0 <Uart1_Init+0xd4>)
 800225a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800225c:	4a20      	ldr	r2, [pc, #128]	; (80022e0 <Uart1_Init+0xd4>)
 800225e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002262:	6253      	str	r3, [r2, #36]	; 0x24




/*PA 10 RX */
	GPIOA->MODER &= ~(1U<<20);	//SET BIT 20 TO 0
 8002264:	4b1e      	ldr	r3, [pc, #120]	; (80022e0 <Uart1_Init+0xd4>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	4a1d      	ldr	r2, [pc, #116]	; (80022e0 <Uart1_Init+0xd4>)
 800226a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800226e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=  (1U<<21);	//SET BIT 21 TO 1
 8002270:	4b1b      	ldr	r3, [pc, #108]	; (80022e0 <Uart1_Init+0xd4>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	4a1a      	ldr	r2, [pc, #104]	; (80022e0 <Uart1_Init+0xd4>)
 8002276:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800227a:	6013      	str	r3, [r2, #0]
/* SET AFRH TO 07 0111 */
	GPIOA->AFR[1] |=  (1U<<8);
 800227c:	4b18      	ldr	r3, [pc, #96]	; (80022e0 <Uart1_Init+0xd4>)
 800227e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002280:	4a17      	ldr	r2, [pc, #92]	; (80022e0 <Uart1_Init+0xd4>)
 8002282:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002286:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] |=  (1U<<9);
 8002288:	4b15      	ldr	r3, [pc, #84]	; (80022e0 <Uart1_Init+0xd4>)
 800228a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800228c:	4a14      	ldr	r2, [pc, #80]	; (80022e0 <Uart1_Init+0xd4>)
 800228e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002292:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] |=  (1U<<10);
 8002294:	4b12      	ldr	r3, [pc, #72]	; (80022e0 <Uart1_Init+0xd4>)
 8002296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002298:	4a11      	ldr	r2, [pc, #68]	; (80022e0 <Uart1_Init+0xd4>)
 800229a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800229e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] &= ~(1U<<11);
 80022a0:	4b0f      	ldr	r3, [pc, #60]	; (80022e0 <Uart1_Init+0xd4>)
 80022a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a4:	4a0e      	ldr	r2, [pc, #56]	; (80022e0 <Uart1_Init+0xd4>)
 80022a6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80022aa:	6253      	str	r3, [r2, #36]	; 0x24

/*ENABLE CLOCK ACCESS TO UART1*/
	RCC->APB2ENR |= UARTEN;
 80022ac:	4b0b      	ldr	r3, [pc, #44]	; (80022dc <Uart1_Init+0xd0>)
 80022ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022b0:	4a0a      	ldr	r2, [pc, #40]	; (80022dc <Uart1_Init+0xd0>)
 80022b2:	f043 0310 	orr.w	r3, r3, #16
 80022b6:	6453      	str	r3, [r2, #68]	; 0x44

/*BAUDRATE CONFIGURE*/
	uart_set_baudrate(USART1, APB2_CLK, UART_BAUDRATE);
 80022b8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80022bc:	4909      	ldr	r1, [pc, #36]	; (80022e4 <Uart1_Init+0xd8>)
 80022be:	480a      	ldr	r0, [pc, #40]	; (80022e8 <Uart1_Init+0xdc>)
 80022c0:	f000 f814 	bl	80022ec <uart_set_baudrate>

/* configure Transfer direction*/
	USART1->CR1 = CR1_TE | CR1_RE;
 80022c4:	4b08      	ldr	r3, [pc, #32]	; (80022e8 <Uart1_Init+0xdc>)
 80022c6:	220c      	movs	r2, #12
 80022c8:	60da      	str	r2, [r3, #12]
/* configure uart module*/
	USART1->CR1 |= CR1_UE;
 80022ca:	4b07      	ldr	r3, [pc, #28]	; (80022e8 <Uart1_Init+0xdc>)
 80022cc:	68db      	ldr	r3, [r3, #12]
 80022ce:	4a06      	ldr	r2, [pc, #24]	; (80022e8 <Uart1_Init+0xdc>)
 80022d0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80022d4:	60d3      	str	r3, [r2, #12]


}
 80022d6:	bf00      	nop
 80022d8:	bd80      	pop	{r7, pc}
 80022da:	bf00      	nop
 80022dc:	40023800 	.word	0x40023800
 80022e0:	40020000 	.word	0x40020000
 80022e4:	00f42400 	.word	0x00f42400
 80022e8:	40011000 	.word	0x40011000

080022ec <uart_set_baudrate>:
static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 80022ec:	b580      	push	{r7, lr}
 80022ee:	b084      	sub	sp, #16
 80022f0:	af00      	add	r7, sp, #0
 80022f2:	60f8      	str	r0, [r7, #12]
 80022f4:	60b9      	str	r1, [r7, #8]
 80022f6:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_BD(PeriphClk,BaudRate);
 80022f8:	6879      	ldr	r1, [r7, #4]
 80022fa:	68b8      	ldr	r0, [r7, #8]
 80022fc:	f000 f808 	bl	8002310 <compute_uart_BD>
 8002300:	4603      	mov	r3, r0
 8002302:	461a      	mov	r2, r3
 8002304:	68fb      	ldr	r3, [r7, #12]
 8002306:	609a      	str	r2, [r3, #8]
}
 8002308:	bf00      	nop
 800230a:	3710      	adds	r7, #16
 800230c:	46bd      	mov	sp, r7
 800230e:	bd80      	pop	{r7, pc}

08002310 <compute_uart_BD>:


static uint16_t compute_uart_BD(uint32_t PeriphClk, uint32_t BaudRate)
{
 8002310:	b480      	push	{r7}
 8002312:	b083      	sub	sp, #12
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
 8002318:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 800231a:	683b      	ldr	r3, [r7, #0]
 800231c:	085a      	lsrs	r2, r3, #1
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	441a      	add	r2, r3
 8002322:	683b      	ldr	r3, [r7, #0]
 8002324:	fbb2 f3f3 	udiv	r3, r2, r3
 8002328:	b29b      	uxth	r3, r3
}
 800232a:	4618      	mov	r0, r3
 800232c:	370c      	adds	r7, #12
 800232e:	46bd      	mov	sp, r7
 8002330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002334:	4770      	bx	lr
	...

08002338 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002338:	480d      	ldr	r0, [pc, #52]	; (8002370 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800233a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800233c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002340:	480c      	ldr	r0, [pc, #48]	; (8002374 <LoopForever+0x6>)
  ldr r1, =_edata
 8002342:	490d      	ldr	r1, [pc, #52]	; (8002378 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002344:	4a0d      	ldr	r2, [pc, #52]	; (800237c <LoopForever+0xe>)
  movs r3, #0
 8002346:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002348:	e002      	b.n	8002350 <LoopCopyDataInit>

0800234a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800234a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800234c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800234e:	3304      	adds	r3, #4

08002350 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002350:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002352:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002354:	d3f9      	bcc.n	800234a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002356:	4a0a      	ldr	r2, [pc, #40]	; (8002380 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002358:	4c0a      	ldr	r4, [pc, #40]	; (8002384 <LoopForever+0x16>)
  movs r3, #0
 800235a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800235c:	e001      	b.n	8002362 <LoopFillZerobss>

0800235e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800235e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002360:	3204      	adds	r2, #4

08002362 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002362:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002364:	d3fb      	bcc.n	800235e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002366:	f001 f817 	bl	8003398 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800236a:	f7fe ff45 	bl	80011f8 <main>

0800236e <LoopForever>:

LoopForever:
  b LoopForever
 800236e:	e7fe      	b.n	800236e <LoopForever>
  ldr   r0, =_estack
 8002370:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002374:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002378:	200001f4 	.word	0x200001f4
  ldr r2, =_sidata
 800237c:	080071b4 	.word	0x080071b4
  ldr r2, =_sbss
 8002380:	200001f4 	.word	0x200001f4
  ldr r4, =_ebss
 8002384:	20001b50 	.word	0x20001b50

08002388 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002388:	e7fe      	b.n	8002388 <ADC_IRQHandler>

0800238a <__cvt>:
 800238a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800238e:	ec55 4b10 	vmov	r4, r5, d0
 8002392:	2d00      	cmp	r5, #0
 8002394:	460e      	mov	r6, r1
 8002396:	4619      	mov	r1, r3
 8002398:	462b      	mov	r3, r5
 800239a:	bfbb      	ittet	lt
 800239c:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80023a0:	461d      	movlt	r5, r3
 80023a2:	2300      	movge	r3, #0
 80023a4:	232d      	movlt	r3, #45	; 0x2d
 80023a6:	700b      	strb	r3, [r1, #0]
 80023a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80023aa:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80023ae:	4691      	mov	r9, r2
 80023b0:	f023 0820 	bic.w	r8, r3, #32
 80023b4:	bfbc      	itt	lt
 80023b6:	4622      	movlt	r2, r4
 80023b8:	4614      	movlt	r4, r2
 80023ba:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80023be:	d005      	beq.n	80023cc <__cvt+0x42>
 80023c0:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80023c4:	d100      	bne.n	80023c8 <__cvt+0x3e>
 80023c6:	3601      	adds	r6, #1
 80023c8:	2102      	movs	r1, #2
 80023ca:	e000      	b.n	80023ce <__cvt+0x44>
 80023cc:	2103      	movs	r1, #3
 80023ce:	ab03      	add	r3, sp, #12
 80023d0:	9301      	str	r3, [sp, #4]
 80023d2:	ab02      	add	r3, sp, #8
 80023d4:	9300      	str	r3, [sp, #0]
 80023d6:	ec45 4b10 	vmov	d0, r4, r5
 80023da:	4653      	mov	r3, sl
 80023dc:	4632      	mov	r2, r6
 80023de:	f001 f8af 	bl	8003540 <_dtoa_r>
 80023e2:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80023e6:	4607      	mov	r7, r0
 80023e8:	d102      	bne.n	80023f0 <__cvt+0x66>
 80023ea:	f019 0f01 	tst.w	r9, #1
 80023ee:	d022      	beq.n	8002436 <__cvt+0xac>
 80023f0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80023f4:	eb07 0906 	add.w	r9, r7, r6
 80023f8:	d110      	bne.n	800241c <__cvt+0x92>
 80023fa:	783b      	ldrb	r3, [r7, #0]
 80023fc:	2b30      	cmp	r3, #48	; 0x30
 80023fe:	d10a      	bne.n	8002416 <__cvt+0x8c>
 8002400:	2200      	movs	r2, #0
 8002402:	2300      	movs	r3, #0
 8002404:	4620      	mov	r0, r4
 8002406:	4629      	mov	r1, r5
 8002408:	f7fe fb66 	bl	8000ad8 <__aeabi_dcmpeq>
 800240c:	b918      	cbnz	r0, 8002416 <__cvt+0x8c>
 800240e:	f1c6 0601 	rsb	r6, r6, #1
 8002412:	f8ca 6000 	str.w	r6, [sl]
 8002416:	f8da 3000 	ldr.w	r3, [sl]
 800241a:	4499      	add	r9, r3
 800241c:	2200      	movs	r2, #0
 800241e:	2300      	movs	r3, #0
 8002420:	4620      	mov	r0, r4
 8002422:	4629      	mov	r1, r5
 8002424:	f7fe fb58 	bl	8000ad8 <__aeabi_dcmpeq>
 8002428:	b108      	cbz	r0, 800242e <__cvt+0xa4>
 800242a:	f8cd 900c 	str.w	r9, [sp, #12]
 800242e:	2230      	movs	r2, #48	; 0x30
 8002430:	9b03      	ldr	r3, [sp, #12]
 8002432:	454b      	cmp	r3, r9
 8002434:	d307      	bcc.n	8002446 <__cvt+0xbc>
 8002436:	9b03      	ldr	r3, [sp, #12]
 8002438:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800243a:	1bdb      	subs	r3, r3, r7
 800243c:	4638      	mov	r0, r7
 800243e:	6013      	str	r3, [r2, #0]
 8002440:	b004      	add	sp, #16
 8002442:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002446:	1c59      	adds	r1, r3, #1
 8002448:	9103      	str	r1, [sp, #12]
 800244a:	701a      	strb	r2, [r3, #0]
 800244c:	e7f0      	b.n	8002430 <__cvt+0xa6>

0800244e <__exponent>:
 800244e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002450:	4603      	mov	r3, r0
 8002452:	2900      	cmp	r1, #0
 8002454:	bfb8      	it	lt
 8002456:	4249      	neglt	r1, r1
 8002458:	f803 2b02 	strb.w	r2, [r3], #2
 800245c:	bfb4      	ite	lt
 800245e:	222d      	movlt	r2, #45	; 0x2d
 8002460:	222b      	movge	r2, #43	; 0x2b
 8002462:	2909      	cmp	r1, #9
 8002464:	7042      	strb	r2, [r0, #1]
 8002466:	dd2a      	ble.n	80024be <__exponent+0x70>
 8002468:	f10d 0207 	add.w	r2, sp, #7
 800246c:	4617      	mov	r7, r2
 800246e:	260a      	movs	r6, #10
 8002470:	4694      	mov	ip, r2
 8002472:	fb91 f5f6 	sdiv	r5, r1, r6
 8002476:	fb06 1415 	mls	r4, r6, r5, r1
 800247a:	3430      	adds	r4, #48	; 0x30
 800247c:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8002480:	460c      	mov	r4, r1
 8002482:	2c63      	cmp	r4, #99	; 0x63
 8002484:	f102 32ff 	add.w	r2, r2, #4294967295
 8002488:	4629      	mov	r1, r5
 800248a:	dcf1      	bgt.n	8002470 <__exponent+0x22>
 800248c:	3130      	adds	r1, #48	; 0x30
 800248e:	f1ac 0402 	sub.w	r4, ip, #2
 8002492:	f802 1c01 	strb.w	r1, [r2, #-1]
 8002496:	1c41      	adds	r1, r0, #1
 8002498:	4622      	mov	r2, r4
 800249a:	42ba      	cmp	r2, r7
 800249c:	d30a      	bcc.n	80024b4 <__exponent+0x66>
 800249e:	f10d 0209 	add.w	r2, sp, #9
 80024a2:	eba2 020c 	sub.w	r2, r2, ip
 80024a6:	42bc      	cmp	r4, r7
 80024a8:	bf88      	it	hi
 80024aa:	2200      	movhi	r2, #0
 80024ac:	4413      	add	r3, r2
 80024ae:	1a18      	subs	r0, r3, r0
 80024b0:	b003      	add	sp, #12
 80024b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024b4:	f812 5b01 	ldrb.w	r5, [r2], #1
 80024b8:	f801 5f01 	strb.w	r5, [r1, #1]!
 80024bc:	e7ed      	b.n	800249a <__exponent+0x4c>
 80024be:	2330      	movs	r3, #48	; 0x30
 80024c0:	3130      	adds	r1, #48	; 0x30
 80024c2:	7083      	strb	r3, [r0, #2]
 80024c4:	70c1      	strb	r1, [r0, #3]
 80024c6:	1d03      	adds	r3, r0, #4
 80024c8:	e7f1      	b.n	80024ae <__exponent+0x60>
	...

080024cc <_printf_float>:
 80024cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024d0:	ed2d 8b02 	vpush	{d8}
 80024d4:	b08d      	sub	sp, #52	; 0x34
 80024d6:	460c      	mov	r4, r1
 80024d8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80024dc:	4616      	mov	r6, r2
 80024de:	461f      	mov	r7, r3
 80024e0:	4605      	mov	r5, r0
 80024e2:	f000 ff09 	bl	80032f8 <_localeconv_r>
 80024e6:	f8d0 a000 	ldr.w	sl, [r0]
 80024ea:	4650      	mov	r0, sl
 80024ec:	f7fd fec8 	bl	8000280 <strlen>
 80024f0:	2300      	movs	r3, #0
 80024f2:	930a      	str	r3, [sp, #40]	; 0x28
 80024f4:	6823      	ldr	r3, [r4, #0]
 80024f6:	9305      	str	r3, [sp, #20]
 80024f8:	f8d8 3000 	ldr.w	r3, [r8]
 80024fc:	f894 b018 	ldrb.w	fp, [r4, #24]
 8002500:	3307      	adds	r3, #7
 8002502:	f023 0307 	bic.w	r3, r3, #7
 8002506:	f103 0208 	add.w	r2, r3, #8
 800250a:	f8c8 2000 	str.w	r2, [r8]
 800250e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002512:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8002516:	9307      	str	r3, [sp, #28]
 8002518:	f8cd 8018 	str.w	r8, [sp, #24]
 800251c:	ee08 0a10 	vmov	s16, r0
 8002520:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8002524:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002528:	4b9e      	ldr	r3, [pc, #632]	; (80027a4 <_printf_float+0x2d8>)
 800252a:	f04f 32ff 	mov.w	r2, #4294967295
 800252e:	f7fe fb05 	bl	8000b3c <__aeabi_dcmpun>
 8002532:	bb88      	cbnz	r0, 8002598 <_printf_float+0xcc>
 8002534:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002538:	4b9a      	ldr	r3, [pc, #616]	; (80027a4 <_printf_float+0x2d8>)
 800253a:	f04f 32ff 	mov.w	r2, #4294967295
 800253e:	f7fe fadf 	bl	8000b00 <__aeabi_dcmple>
 8002542:	bb48      	cbnz	r0, 8002598 <_printf_float+0xcc>
 8002544:	2200      	movs	r2, #0
 8002546:	2300      	movs	r3, #0
 8002548:	4640      	mov	r0, r8
 800254a:	4649      	mov	r1, r9
 800254c:	f7fe face 	bl	8000aec <__aeabi_dcmplt>
 8002550:	b110      	cbz	r0, 8002558 <_printf_float+0x8c>
 8002552:	232d      	movs	r3, #45	; 0x2d
 8002554:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002558:	4a93      	ldr	r2, [pc, #588]	; (80027a8 <_printf_float+0x2dc>)
 800255a:	4b94      	ldr	r3, [pc, #592]	; (80027ac <_printf_float+0x2e0>)
 800255c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8002560:	bf94      	ite	ls
 8002562:	4690      	movls	r8, r2
 8002564:	4698      	movhi	r8, r3
 8002566:	2303      	movs	r3, #3
 8002568:	6123      	str	r3, [r4, #16]
 800256a:	9b05      	ldr	r3, [sp, #20]
 800256c:	f023 0304 	bic.w	r3, r3, #4
 8002570:	6023      	str	r3, [r4, #0]
 8002572:	f04f 0900 	mov.w	r9, #0
 8002576:	9700      	str	r7, [sp, #0]
 8002578:	4633      	mov	r3, r6
 800257a:	aa0b      	add	r2, sp, #44	; 0x2c
 800257c:	4621      	mov	r1, r4
 800257e:	4628      	mov	r0, r5
 8002580:	f000 f9da 	bl	8002938 <_printf_common>
 8002584:	3001      	adds	r0, #1
 8002586:	f040 8090 	bne.w	80026aa <_printf_float+0x1de>
 800258a:	f04f 30ff 	mov.w	r0, #4294967295
 800258e:	b00d      	add	sp, #52	; 0x34
 8002590:	ecbd 8b02 	vpop	{d8}
 8002594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002598:	4642      	mov	r2, r8
 800259a:	464b      	mov	r3, r9
 800259c:	4640      	mov	r0, r8
 800259e:	4649      	mov	r1, r9
 80025a0:	f7fe facc 	bl	8000b3c <__aeabi_dcmpun>
 80025a4:	b140      	cbz	r0, 80025b8 <_printf_float+0xec>
 80025a6:	464b      	mov	r3, r9
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	bfbc      	itt	lt
 80025ac:	232d      	movlt	r3, #45	; 0x2d
 80025ae:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80025b2:	4a7f      	ldr	r2, [pc, #508]	; (80027b0 <_printf_float+0x2e4>)
 80025b4:	4b7f      	ldr	r3, [pc, #508]	; (80027b4 <_printf_float+0x2e8>)
 80025b6:	e7d1      	b.n	800255c <_printf_float+0x90>
 80025b8:	6863      	ldr	r3, [r4, #4]
 80025ba:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80025be:	9206      	str	r2, [sp, #24]
 80025c0:	1c5a      	adds	r2, r3, #1
 80025c2:	d13f      	bne.n	8002644 <_printf_float+0x178>
 80025c4:	2306      	movs	r3, #6
 80025c6:	6063      	str	r3, [r4, #4]
 80025c8:	9b05      	ldr	r3, [sp, #20]
 80025ca:	6861      	ldr	r1, [r4, #4]
 80025cc:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80025d0:	2300      	movs	r3, #0
 80025d2:	9303      	str	r3, [sp, #12]
 80025d4:	ab0a      	add	r3, sp, #40	; 0x28
 80025d6:	e9cd b301 	strd	fp, r3, [sp, #4]
 80025da:	ab09      	add	r3, sp, #36	; 0x24
 80025dc:	ec49 8b10 	vmov	d0, r8, r9
 80025e0:	9300      	str	r3, [sp, #0]
 80025e2:	6022      	str	r2, [r4, #0]
 80025e4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80025e8:	4628      	mov	r0, r5
 80025ea:	f7ff fece 	bl	800238a <__cvt>
 80025ee:	9b06      	ldr	r3, [sp, #24]
 80025f0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80025f2:	2b47      	cmp	r3, #71	; 0x47
 80025f4:	4680      	mov	r8, r0
 80025f6:	d108      	bne.n	800260a <_printf_float+0x13e>
 80025f8:	1cc8      	adds	r0, r1, #3
 80025fa:	db02      	blt.n	8002602 <_printf_float+0x136>
 80025fc:	6863      	ldr	r3, [r4, #4]
 80025fe:	4299      	cmp	r1, r3
 8002600:	dd41      	ble.n	8002686 <_printf_float+0x1ba>
 8002602:	f1ab 0302 	sub.w	r3, fp, #2
 8002606:	fa5f fb83 	uxtb.w	fp, r3
 800260a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800260e:	d820      	bhi.n	8002652 <_printf_float+0x186>
 8002610:	3901      	subs	r1, #1
 8002612:	465a      	mov	r2, fp
 8002614:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002618:	9109      	str	r1, [sp, #36]	; 0x24
 800261a:	f7ff ff18 	bl	800244e <__exponent>
 800261e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002620:	1813      	adds	r3, r2, r0
 8002622:	2a01      	cmp	r2, #1
 8002624:	4681      	mov	r9, r0
 8002626:	6123      	str	r3, [r4, #16]
 8002628:	dc02      	bgt.n	8002630 <_printf_float+0x164>
 800262a:	6822      	ldr	r2, [r4, #0]
 800262c:	07d2      	lsls	r2, r2, #31
 800262e:	d501      	bpl.n	8002634 <_printf_float+0x168>
 8002630:	3301      	adds	r3, #1
 8002632:	6123      	str	r3, [r4, #16]
 8002634:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002638:	2b00      	cmp	r3, #0
 800263a:	d09c      	beq.n	8002576 <_printf_float+0xaa>
 800263c:	232d      	movs	r3, #45	; 0x2d
 800263e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002642:	e798      	b.n	8002576 <_printf_float+0xaa>
 8002644:	9a06      	ldr	r2, [sp, #24]
 8002646:	2a47      	cmp	r2, #71	; 0x47
 8002648:	d1be      	bne.n	80025c8 <_printf_float+0xfc>
 800264a:	2b00      	cmp	r3, #0
 800264c:	d1bc      	bne.n	80025c8 <_printf_float+0xfc>
 800264e:	2301      	movs	r3, #1
 8002650:	e7b9      	b.n	80025c6 <_printf_float+0xfa>
 8002652:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8002656:	d118      	bne.n	800268a <_printf_float+0x1be>
 8002658:	2900      	cmp	r1, #0
 800265a:	6863      	ldr	r3, [r4, #4]
 800265c:	dd0b      	ble.n	8002676 <_printf_float+0x1aa>
 800265e:	6121      	str	r1, [r4, #16]
 8002660:	b913      	cbnz	r3, 8002668 <_printf_float+0x19c>
 8002662:	6822      	ldr	r2, [r4, #0]
 8002664:	07d0      	lsls	r0, r2, #31
 8002666:	d502      	bpl.n	800266e <_printf_float+0x1a2>
 8002668:	3301      	adds	r3, #1
 800266a:	440b      	add	r3, r1
 800266c:	6123      	str	r3, [r4, #16]
 800266e:	65a1      	str	r1, [r4, #88]	; 0x58
 8002670:	f04f 0900 	mov.w	r9, #0
 8002674:	e7de      	b.n	8002634 <_printf_float+0x168>
 8002676:	b913      	cbnz	r3, 800267e <_printf_float+0x1b2>
 8002678:	6822      	ldr	r2, [r4, #0]
 800267a:	07d2      	lsls	r2, r2, #31
 800267c:	d501      	bpl.n	8002682 <_printf_float+0x1b6>
 800267e:	3302      	adds	r3, #2
 8002680:	e7f4      	b.n	800266c <_printf_float+0x1a0>
 8002682:	2301      	movs	r3, #1
 8002684:	e7f2      	b.n	800266c <_printf_float+0x1a0>
 8002686:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800268a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800268c:	4299      	cmp	r1, r3
 800268e:	db05      	blt.n	800269c <_printf_float+0x1d0>
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	6121      	str	r1, [r4, #16]
 8002694:	07d8      	lsls	r0, r3, #31
 8002696:	d5ea      	bpl.n	800266e <_printf_float+0x1a2>
 8002698:	1c4b      	adds	r3, r1, #1
 800269a:	e7e7      	b.n	800266c <_printf_float+0x1a0>
 800269c:	2900      	cmp	r1, #0
 800269e:	bfd4      	ite	le
 80026a0:	f1c1 0202 	rsble	r2, r1, #2
 80026a4:	2201      	movgt	r2, #1
 80026a6:	4413      	add	r3, r2
 80026a8:	e7e0      	b.n	800266c <_printf_float+0x1a0>
 80026aa:	6823      	ldr	r3, [r4, #0]
 80026ac:	055a      	lsls	r2, r3, #21
 80026ae:	d407      	bmi.n	80026c0 <_printf_float+0x1f4>
 80026b0:	6923      	ldr	r3, [r4, #16]
 80026b2:	4642      	mov	r2, r8
 80026b4:	4631      	mov	r1, r6
 80026b6:	4628      	mov	r0, r5
 80026b8:	47b8      	blx	r7
 80026ba:	3001      	adds	r0, #1
 80026bc:	d12c      	bne.n	8002718 <_printf_float+0x24c>
 80026be:	e764      	b.n	800258a <_printf_float+0xbe>
 80026c0:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80026c4:	f240 80e0 	bls.w	8002888 <_printf_float+0x3bc>
 80026c8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80026cc:	2200      	movs	r2, #0
 80026ce:	2300      	movs	r3, #0
 80026d0:	f7fe fa02 	bl	8000ad8 <__aeabi_dcmpeq>
 80026d4:	2800      	cmp	r0, #0
 80026d6:	d034      	beq.n	8002742 <_printf_float+0x276>
 80026d8:	4a37      	ldr	r2, [pc, #220]	; (80027b8 <_printf_float+0x2ec>)
 80026da:	2301      	movs	r3, #1
 80026dc:	4631      	mov	r1, r6
 80026de:	4628      	mov	r0, r5
 80026e0:	47b8      	blx	r7
 80026e2:	3001      	adds	r0, #1
 80026e4:	f43f af51 	beq.w	800258a <_printf_float+0xbe>
 80026e8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80026ec:	429a      	cmp	r2, r3
 80026ee:	db02      	blt.n	80026f6 <_printf_float+0x22a>
 80026f0:	6823      	ldr	r3, [r4, #0]
 80026f2:	07d8      	lsls	r0, r3, #31
 80026f4:	d510      	bpl.n	8002718 <_printf_float+0x24c>
 80026f6:	ee18 3a10 	vmov	r3, s16
 80026fa:	4652      	mov	r2, sl
 80026fc:	4631      	mov	r1, r6
 80026fe:	4628      	mov	r0, r5
 8002700:	47b8      	blx	r7
 8002702:	3001      	adds	r0, #1
 8002704:	f43f af41 	beq.w	800258a <_printf_float+0xbe>
 8002708:	f04f 0800 	mov.w	r8, #0
 800270c:	f104 091a 	add.w	r9, r4, #26
 8002710:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002712:	3b01      	subs	r3, #1
 8002714:	4543      	cmp	r3, r8
 8002716:	dc09      	bgt.n	800272c <_printf_float+0x260>
 8002718:	6823      	ldr	r3, [r4, #0]
 800271a:	079b      	lsls	r3, r3, #30
 800271c:	f100 8107 	bmi.w	800292e <_printf_float+0x462>
 8002720:	68e0      	ldr	r0, [r4, #12]
 8002722:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002724:	4298      	cmp	r0, r3
 8002726:	bfb8      	it	lt
 8002728:	4618      	movlt	r0, r3
 800272a:	e730      	b.n	800258e <_printf_float+0xc2>
 800272c:	2301      	movs	r3, #1
 800272e:	464a      	mov	r2, r9
 8002730:	4631      	mov	r1, r6
 8002732:	4628      	mov	r0, r5
 8002734:	47b8      	blx	r7
 8002736:	3001      	adds	r0, #1
 8002738:	f43f af27 	beq.w	800258a <_printf_float+0xbe>
 800273c:	f108 0801 	add.w	r8, r8, #1
 8002740:	e7e6      	b.n	8002710 <_printf_float+0x244>
 8002742:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002744:	2b00      	cmp	r3, #0
 8002746:	dc39      	bgt.n	80027bc <_printf_float+0x2f0>
 8002748:	4a1b      	ldr	r2, [pc, #108]	; (80027b8 <_printf_float+0x2ec>)
 800274a:	2301      	movs	r3, #1
 800274c:	4631      	mov	r1, r6
 800274e:	4628      	mov	r0, r5
 8002750:	47b8      	blx	r7
 8002752:	3001      	adds	r0, #1
 8002754:	f43f af19 	beq.w	800258a <_printf_float+0xbe>
 8002758:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800275c:	4313      	orrs	r3, r2
 800275e:	d102      	bne.n	8002766 <_printf_float+0x29a>
 8002760:	6823      	ldr	r3, [r4, #0]
 8002762:	07d9      	lsls	r1, r3, #31
 8002764:	d5d8      	bpl.n	8002718 <_printf_float+0x24c>
 8002766:	ee18 3a10 	vmov	r3, s16
 800276a:	4652      	mov	r2, sl
 800276c:	4631      	mov	r1, r6
 800276e:	4628      	mov	r0, r5
 8002770:	47b8      	blx	r7
 8002772:	3001      	adds	r0, #1
 8002774:	f43f af09 	beq.w	800258a <_printf_float+0xbe>
 8002778:	f04f 0900 	mov.w	r9, #0
 800277c:	f104 0a1a 	add.w	sl, r4, #26
 8002780:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002782:	425b      	negs	r3, r3
 8002784:	454b      	cmp	r3, r9
 8002786:	dc01      	bgt.n	800278c <_printf_float+0x2c0>
 8002788:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800278a:	e792      	b.n	80026b2 <_printf_float+0x1e6>
 800278c:	2301      	movs	r3, #1
 800278e:	4652      	mov	r2, sl
 8002790:	4631      	mov	r1, r6
 8002792:	4628      	mov	r0, r5
 8002794:	47b8      	blx	r7
 8002796:	3001      	adds	r0, #1
 8002798:	f43f aef7 	beq.w	800258a <_printf_float+0xbe>
 800279c:	f109 0901 	add.w	r9, r9, #1
 80027a0:	e7ee      	b.n	8002780 <_printf_float+0x2b4>
 80027a2:	bf00      	nop
 80027a4:	7fefffff 	.word	0x7fefffff
 80027a8:	08006d80 	.word	0x08006d80
 80027ac:	08006d84 	.word	0x08006d84
 80027b0:	08006d88 	.word	0x08006d88
 80027b4:	08006d8c 	.word	0x08006d8c
 80027b8:	08006d90 	.word	0x08006d90
 80027bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80027be:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80027c0:	429a      	cmp	r2, r3
 80027c2:	bfa8      	it	ge
 80027c4:	461a      	movge	r2, r3
 80027c6:	2a00      	cmp	r2, #0
 80027c8:	4691      	mov	r9, r2
 80027ca:	dc37      	bgt.n	800283c <_printf_float+0x370>
 80027cc:	f04f 0b00 	mov.w	fp, #0
 80027d0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80027d4:	f104 021a 	add.w	r2, r4, #26
 80027d8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80027da:	9305      	str	r3, [sp, #20]
 80027dc:	eba3 0309 	sub.w	r3, r3, r9
 80027e0:	455b      	cmp	r3, fp
 80027e2:	dc33      	bgt.n	800284c <_printf_float+0x380>
 80027e4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80027e8:	429a      	cmp	r2, r3
 80027ea:	db3b      	blt.n	8002864 <_printf_float+0x398>
 80027ec:	6823      	ldr	r3, [r4, #0]
 80027ee:	07da      	lsls	r2, r3, #31
 80027f0:	d438      	bmi.n	8002864 <_printf_float+0x398>
 80027f2:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80027f6:	eba2 0903 	sub.w	r9, r2, r3
 80027fa:	9b05      	ldr	r3, [sp, #20]
 80027fc:	1ad2      	subs	r2, r2, r3
 80027fe:	4591      	cmp	r9, r2
 8002800:	bfa8      	it	ge
 8002802:	4691      	movge	r9, r2
 8002804:	f1b9 0f00 	cmp.w	r9, #0
 8002808:	dc35      	bgt.n	8002876 <_printf_float+0x3aa>
 800280a:	f04f 0800 	mov.w	r8, #0
 800280e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002812:	f104 0a1a 	add.w	sl, r4, #26
 8002816:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800281a:	1a9b      	subs	r3, r3, r2
 800281c:	eba3 0309 	sub.w	r3, r3, r9
 8002820:	4543      	cmp	r3, r8
 8002822:	f77f af79 	ble.w	8002718 <_printf_float+0x24c>
 8002826:	2301      	movs	r3, #1
 8002828:	4652      	mov	r2, sl
 800282a:	4631      	mov	r1, r6
 800282c:	4628      	mov	r0, r5
 800282e:	47b8      	blx	r7
 8002830:	3001      	adds	r0, #1
 8002832:	f43f aeaa 	beq.w	800258a <_printf_float+0xbe>
 8002836:	f108 0801 	add.w	r8, r8, #1
 800283a:	e7ec      	b.n	8002816 <_printf_float+0x34a>
 800283c:	4613      	mov	r3, r2
 800283e:	4631      	mov	r1, r6
 8002840:	4642      	mov	r2, r8
 8002842:	4628      	mov	r0, r5
 8002844:	47b8      	blx	r7
 8002846:	3001      	adds	r0, #1
 8002848:	d1c0      	bne.n	80027cc <_printf_float+0x300>
 800284a:	e69e      	b.n	800258a <_printf_float+0xbe>
 800284c:	2301      	movs	r3, #1
 800284e:	4631      	mov	r1, r6
 8002850:	4628      	mov	r0, r5
 8002852:	9205      	str	r2, [sp, #20]
 8002854:	47b8      	blx	r7
 8002856:	3001      	adds	r0, #1
 8002858:	f43f ae97 	beq.w	800258a <_printf_float+0xbe>
 800285c:	9a05      	ldr	r2, [sp, #20]
 800285e:	f10b 0b01 	add.w	fp, fp, #1
 8002862:	e7b9      	b.n	80027d8 <_printf_float+0x30c>
 8002864:	ee18 3a10 	vmov	r3, s16
 8002868:	4652      	mov	r2, sl
 800286a:	4631      	mov	r1, r6
 800286c:	4628      	mov	r0, r5
 800286e:	47b8      	blx	r7
 8002870:	3001      	adds	r0, #1
 8002872:	d1be      	bne.n	80027f2 <_printf_float+0x326>
 8002874:	e689      	b.n	800258a <_printf_float+0xbe>
 8002876:	9a05      	ldr	r2, [sp, #20]
 8002878:	464b      	mov	r3, r9
 800287a:	4442      	add	r2, r8
 800287c:	4631      	mov	r1, r6
 800287e:	4628      	mov	r0, r5
 8002880:	47b8      	blx	r7
 8002882:	3001      	adds	r0, #1
 8002884:	d1c1      	bne.n	800280a <_printf_float+0x33e>
 8002886:	e680      	b.n	800258a <_printf_float+0xbe>
 8002888:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800288a:	2a01      	cmp	r2, #1
 800288c:	dc01      	bgt.n	8002892 <_printf_float+0x3c6>
 800288e:	07db      	lsls	r3, r3, #31
 8002890:	d53a      	bpl.n	8002908 <_printf_float+0x43c>
 8002892:	2301      	movs	r3, #1
 8002894:	4642      	mov	r2, r8
 8002896:	4631      	mov	r1, r6
 8002898:	4628      	mov	r0, r5
 800289a:	47b8      	blx	r7
 800289c:	3001      	adds	r0, #1
 800289e:	f43f ae74 	beq.w	800258a <_printf_float+0xbe>
 80028a2:	ee18 3a10 	vmov	r3, s16
 80028a6:	4652      	mov	r2, sl
 80028a8:	4631      	mov	r1, r6
 80028aa:	4628      	mov	r0, r5
 80028ac:	47b8      	blx	r7
 80028ae:	3001      	adds	r0, #1
 80028b0:	f43f ae6b 	beq.w	800258a <_printf_float+0xbe>
 80028b4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80028b8:	2200      	movs	r2, #0
 80028ba:	2300      	movs	r3, #0
 80028bc:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80028c0:	f7fe f90a 	bl	8000ad8 <__aeabi_dcmpeq>
 80028c4:	b9d8      	cbnz	r0, 80028fe <_printf_float+0x432>
 80028c6:	f10a 33ff 	add.w	r3, sl, #4294967295
 80028ca:	f108 0201 	add.w	r2, r8, #1
 80028ce:	4631      	mov	r1, r6
 80028d0:	4628      	mov	r0, r5
 80028d2:	47b8      	blx	r7
 80028d4:	3001      	adds	r0, #1
 80028d6:	d10e      	bne.n	80028f6 <_printf_float+0x42a>
 80028d8:	e657      	b.n	800258a <_printf_float+0xbe>
 80028da:	2301      	movs	r3, #1
 80028dc:	4652      	mov	r2, sl
 80028de:	4631      	mov	r1, r6
 80028e0:	4628      	mov	r0, r5
 80028e2:	47b8      	blx	r7
 80028e4:	3001      	adds	r0, #1
 80028e6:	f43f ae50 	beq.w	800258a <_printf_float+0xbe>
 80028ea:	f108 0801 	add.w	r8, r8, #1
 80028ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028f0:	3b01      	subs	r3, #1
 80028f2:	4543      	cmp	r3, r8
 80028f4:	dcf1      	bgt.n	80028da <_printf_float+0x40e>
 80028f6:	464b      	mov	r3, r9
 80028f8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80028fc:	e6da      	b.n	80026b4 <_printf_float+0x1e8>
 80028fe:	f04f 0800 	mov.w	r8, #0
 8002902:	f104 0a1a 	add.w	sl, r4, #26
 8002906:	e7f2      	b.n	80028ee <_printf_float+0x422>
 8002908:	2301      	movs	r3, #1
 800290a:	4642      	mov	r2, r8
 800290c:	e7df      	b.n	80028ce <_printf_float+0x402>
 800290e:	2301      	movs	r3, #1
 8002910:	464a      	mov	r2, r9
 8002912:	4631      	mov	r1, r6
 8002914:	4628      	mov	r0, r5
 8002916:	47b8      	blx	r7
 8002918:	3001      	adds	r0, #1
 800291a:	f43f ae36 	beq.w	800258a <_printf_float+0xbe>
 800291e:	f108 0801 	add.w	r8, r8, #1
 8002922:	68e3      	ldr	r3, [r4, #12]
 8002924:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002926:	1a5b      	subs	r3, r3, r1
 8002928:	4543      	cmp	r3, r8
 800292a:	dcf0      	bgt.n	800290e <_printf_float+0x442>
 800292c:	e6f8      	b.n	8002720 <_printf_float+0x254>
 800292e:	f04f 0800 	mov.w	r8, #0
 8002932:	f104 0919 	add.w	r9, r4, #25
 8002936:	e7f4      	b.n	8002922 <_printf_float+0x456>

08002938 <_printf_common>:
 8002938:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800293c:	4616      	mov	r6, r2
 800293e:	4699      	mov	r9, r3
 8002940:	688a      	ldr	r2, [r1, #8]
 8002942:	690b      	ldr	r3, [r1, #16]
 8002944:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002948:	4293      	cmp	r3, r2
 800294a:	bfb8      	it	lt
 800294c:	4613      	movlt	r3, r2
 800294e:	6033      	str	r3, [r6, #0]
 8002950:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002954:	4607      	mov	r7, r0
 8002956:	460c      	mov	r4, r1
 8002958:	b10a      	cbz	r2, 800295e <_printf_common+0x26>
 800295a:	3301      	adds	r3, #1
 800295c:	6033      	str	r3, [r6, #0]
 800295e:	6823      	ldr	r3, [r4, #0]
 8002960:	0699      	lsls	r1, r3, #26
 8002962:	bf42      	ittt	mi
 8002964:	6833      	ldrmi	r3, [r6, #0]
 8002966:	3302      	addmi	r3, #2
 8002968:	6033      	strmi	r3, [r6, #0]
 800296a:	6825      	ldr	r5, [r4, #0]
 800296c:	f015 0506 	ands.w	r5, r5, #6
 8002970:	d106      	bne.n	8002980 <_printf_common+0x48>
 8002972:	f104 0a19 	add.w	sl, r4, #25
 8002976:	68e3      	ldr	r3, [r4, #12]
 8002978:	6832      	ldr	r2, [r6, #0]
 800297a:	1a9b      	subs	r3, r3, r2
 800297c:	42ab      	cmp	r3, r5
 800297e:	dc26      	bgt.n	80029ce <_printf_common+0x96>
 8002980:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002984:	1e13      	subs	r3, r2, #0
 8002986:	6822      	ldr	r2, [r4, #0]
 8002988:	bf18      	it	ne
 800298a:	2301      	movne	r3, #1
 800298c:	0692      	lsls	r2, r2, #26
 800298e:	d42b      	bmi.n	80029e8 <_printf_common+0xb0>
 8002990:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002994:	4649      	mov	r1, r9
 8002996:	4638      	mov	r0, r7
 8002998:	47c0      	blx	r8
 800299a:	3001      	adds	r0, #1
 800299c:	d01e      	beq.n	80029dc <_printf_common+0xa4>
 800299e:	6823      	ldr	r3, [r4, #0]
 80029a0:	6922      	ldr	r2, [r4, #16]
 80029a2:	f003 0306 	and.w	r3, r3, #6
 80029a6:	2b04      	cmp	r3, #4
 80029a8:	bf02      	ittt	eq
 80029aa:	68e5      	ldreq	r5, [r4, #12]
 80029ac:	6833      	ldreq	r3, [r6, #0]
 80029ae:	1aed      	subeq	r5, r5, r3
 80029b0:	68a3      	ldr	r3, [r4, #8]
 80029b2:	bf0c      	ite	eq
 80029b4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80029b8:	2500      	movne	r5, #0
 80029ba:	4293      	cmp	r3, r2
 80029bc:	bfc4      	itt	gt
 80029be:	1a9b      	subgt	r3, r3, r2
 80029c0:	18ed      	addgt	r5, r5, r3
 80029c2:	2600      	movs	r6, #0
 80029c4:	341a      	adds	r4, #26
 80029c6:	42b5      	cmp	r5, r6
 80029c8:	d11a      	bne.n	8002a00 <_printf_common+0xc8>
 80029ca:	2000      	movs	r0, #0
 80029cc:	e008      	b.n	80029e0 <_printf_common+0xa8>
 80029ce:	2301      	movs	r3, #1
 80029d0:	4652      	mov	r2, sl
 80029d2:	4649      	mov	r1, r9
 80029d4:	4638      	mov	r0, r7
 80029d6:	47c0      	blx	r8
 80029d8:	3001      	adds	r0, #1
 80029da:	d103      	bne.n	80029e4 <_printf_common+0xac>
 80029dc:	f04f 30ff 	mov.w	r0, #4294967295
 80029e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80029e4:	3501      	adds	r5, #1
 80029e6:	e7c6      	b.n	8002976 <_printf_common+0x3e>
 80029e8:	18e1      	adds	r1, r4, r3
 80029ea:	1c5a      	adds	r2, r3, #1
 80029ec:	2030      	movs	r0, #48	; 0x30
 80029ee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80029f2:	4422      	add	r2, r4
 80029f4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80029f8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80029fc:	3302      	adds	r3, #2
 80029fe:	e7c7      	b.n	8002990 <_printf_common+0x58>
 8002a00:	2301      	movs	r3, #1
 8002a02:	4622      	mov	r2, r4
 8002a04:	4649      	mov	r1, r9
 8002a06:	4638      	mov	r0, r7
 8002a08:	47c0      	blx	r8
 8002a0a:	3001      	adds	r0, #1
 8002a0c:	d0e6      	beq.n	80029dc <_printf_common+0xa4>
 8002a0e:	3601      	adds	r6, #1
 8002a10:	e7d9      	b.n	80029c6 <_printf_common+0x8e>
	...

08002a14 <_printf_i>:
 8002a14:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002a18:	7e0f      	ldrb	r7, [r1, #24]
 8002a1a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002a1c:	2f78      	cmp	r7, #120	; 0x78
 8002a1e:	4691      	mov	r9, r2
 8002a20:	4680      	mov	r8, r0
 8002a22:	460c      	mov	r4, r1
 8002a24:	469a      	mov	sl, r3
 8002a26:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002a2a:	d807      	bhi.n	8002a3c <_printf_i+0x28>
 8002a2c:	2f62      	cmp	r7, #98	; 0x62
 8002a2e:	d80a      	bhi.n	8002a46 <_printf_i+0x32>
 8002a30:	2f00      	cmp	r7, #0
 8002a32:	f000 80d4 	beq.w	8002bde <_printf_i+0x1ca>
 8002a36:	2f58      	cmp	r7, #88	; 0x58
 8002a38:	f000 80c0 	beq.w	8002bbc <_printf_i+0x1a8>
 8002a3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002a40:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002a44:	e03a      	b.n	8002abc <_printf_i+0xa8>
 8002a46:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002a4a:	2b15      	cmp	r3, #21
 8002a4c:	d8f6      	bhi.n	8002a3c <_printf_i+0x28>
 8002a4e:	a101      	add	r1, pc, #4	; (adr r1, 8002a54 <_printf_i+0x40>)
 8002a50:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002a54:	08002aad 	.word	0x08002aad
 8002a58:	08002ac1 	.word	0x08002ac1
 8002a5c:	08002a3d 	.word	0x08002a3d
 8002a60:	08002a3d 	.word	0x08002a3d
 8002a64:	08002a3d 	.word	0x08002a3d
 8002a68:	08002a3d 	.word	0x08002a3d
 8002a6c:	08002ac1 	.word	0x08002ac1
 8002a70:	08002a3d 	.word	0x08002a3d
 8002a74:	08002a3d 	.word	0x08002a3d
 8002a78:	08002a3d 	.word	0x08002a3d
 8002a7c:	08002a3d 	.word	0x08002a3d
 8002a80:	08002bc5 	.word	0x08002bc5
 8002a84:	08002aed 	.word	0x08002aed
 8002a88:	08002b7f 	.word	0x08002b7f
 8002a8c:	08002a3d 	.word	0x08002a3d
 8002a90:	08002a3d 	.word	0x08002a3d
 8002a94:	08002be7 	.word	0x08002be7
 8002a98:	08002a3d 	.word	0x08002a3d
 8002a9c:	08002aed 	.word	0x08002aed
 8002aa0:	08002a3d 	.word	0x08002a3d
 8002aa4:	08002a3d 	.word	0x08002a3d
 8002aa8:	08002b87 	.word	0x08002b87
 8002aac:	682b      	ldr	r3, [r5, #0]
 8002aae:	1d1a      	adds	r2, r3, #4
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	602a      	str	r2, [r5, #0]
 8002ab4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002ab8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002abc:	2301      	movs	r3, #1
 8002abe:	e09f      	b.n	8002c00 <_printf_i+0x1ec>
 8002ac0:	6820      	ldr	r0, [r4, #0]
 8002ac2:	682b      	ldr	r3, [r5, #0]
 8002ac4:	0607      	lsls	r7, r0, #24
 8002ac6:	f103 0104 	add.w	r1, r3, #4
 8002aca:	6029      	str	r1, [r5, #0]
 8002acc:	d501      	bpl.n	8002ad2 <_printf_i+0xbe>
 8002ace:	681e      	ldr	r6, [r3, #0]
 8002ad0:	e003      	b.n	8002ada <_printf_i+0xc6>
 8002ad2:	0646      	lsls	r6, r0, #25
 8002ad4:	d5fb      	bpl.n	8002ace <_printf_i+0xba>
 8002ad6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8002ada:	2e00      	cmp	r6, #0
 8002adc:	da03      	bge.n	8002ae6 <_printf_i+0xd2>
 8002ade:	232d      	movs	r3, #45	; 0x2d
 8002ae0:	4276      	negs	r6, r6
 8002ae2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002ae6:	485a      	ldr	r0, [pc, #360]	; (8002c50 <_printf_i+0x23c>)
 8002ae8:	230a      	movs	r3, #10
 8002aea:	e012      	b.n	8002b12 <_printf_i+0xfe>
 8002aec:	682b      	ldr	r3, [r5, #0]
 8002aee:	6820      	ldr	r0, [r4, #0]
 8002af0:	1d19      	adds	r1, r3, #4
 8002af2:	6029      	str	r1, [r5, #0]
 8002af4:	0605      	lsls	r5, r0, #24
 8002af6:	d501      	bpl.n	8002afc <_printf_i+0xe8>
 8002af8:	681e      	ldr	r6, [r3, #0]
 8002afa:	e002      	b.n	8002b02 <_printf_i+0xee>
 8002afc:	0641      	lsls	r1, r0, #25
 8002afe:	d5fb      	bpl.n	8002af8 <_printf_i+0xe4>
 8002b00:	881e      	ldrh	r6, [r3, #0]
 8002b02:	4853      	ldr	r0, [pc, #332]	; (8002c50 <_printf_i+0x23c>)
 8002b04:	2f6f      	cmp	r7, #111	; 0x6f
 8002b06:	bf0c      	ite	eq
 8002b08:	2308      	moveq	r3, #8
 8002b0a:	230a      	movne	r3, #10
 8002b0c:	2100      	movs	r1, #0
 8002b0e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002b12:	6865      	ldr	r5, [r4, #4]
 8002b14:	60a5      	str	r5, [r4, #8]
 8002b16:	2d00      	cmp	r5, #0
 8002b18:	bfa2      	ittt	ge
 8002b1a:	6821      	ldrge	r1, [r4, #0]
 8002b1c:	f021 0104 	bicge.w	r1, r1, #4
 8002b20:	6021      	strge	r1, [r4, #0]
 8002b22:	b90e      	cbnz	r6, 8002b28 <_printf_i+0x114>
 8002b24:	2d00      	cmp	r5, #0
 8002b26:	d04b      	beq.n	8002bc0 <_printf_i+0x1ac>
 8002b28:	4615      	mov	r5, r2
 8002b2a:	fbb6 f1f3 	udiv	r1, r6, r3
 8002b2e:	fb03 6711 	mls	r7, r3, r1, r6
 8002b32:	5dc7      	ldrb	r7, [r0, r7]
 8002b34:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002b38:	4637      	mov	r7, r6
 8002b3a:	42bb      	cmp	r3, r7
 8002b3c:	460e      	mov	r6, r1
 8002b3e:	d9f4      	bls.n	8002b2a <_printf_i+0x116>
 8002b40:	2b08      	cmp	r3, #8
 8002b42:	d10b      	bne.n	8002b5c <_printf_i+0x148>
 8002b44:	6823      	ldr	r3, [r4, #0]
 8002b46:	07de      	lsls	r6, r3, #31
 8002b48:	d508      	bpl.n	8002b5c <_printf_i+0x148>
 8002b4a:	6923      	ldr	r3, [r4, #16]
 8002b4c:	6861      	ldr	r1, [r4, #4]
 8002b4e:	4299      	cmp	r1, r3
 8002b50:	bfde      	ittt	le
 8002b52:	2330      	movle	r3, #48	; 0x30
 8002b54:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002b58:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002b5c:	1b52      	subs	r2, r2, r5
 8002b5e:	6122      	str	r2, [r4, #16]
 8002b60:	f8cd a000 	str.w	sl, [sp]
 8002b64:	464b      	mov	r3, r9
 8002b66:	aa03      	add	r2, sp, #12
 8002b68:	4621      	mov	r1, r4
 8002b6a:	4640      	mov	r0, r8
 8002b6c:	f7ff fee4 	bl	8002938 <_printf_common>
 8002b70:	3001      	adds	r0, #1
 8002b72:	d14a      	bne.n	8002c0a <_printf_i+0x1f6>
 8002b74:	f04f 30ff 	mov.w	r0, #4294967295
 8002b78:	b004      	add	sp, #16
 8002b7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002b7e:	6823      	ldr	r3, [r4, #0]
 8002b80:	f043 0320 	orr.w	r3, r3, #32
 8002b84:	6023      	str	r3, [r4, #0]
 8002b86:	4833      	ldr	r0, [pc, #204]	; (8002c54 <_printf_i+0x240>)
 8002b88:	2778      	movs	r7, #120	; 0x78
 8002b8a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002b8e:	6823      	ldr	r3, [r4, #0]
 8002b90:	6829      	ldr	r1, [r5, #0]
 8002b92:	061f      	lsls	r7, r3, #24
 8002b94:	f851 6b04 	ldr.w	r6, [r1], #4
 8002b98:	d402      	bmi.n	8002ba0 <_printf_i+0x18c>
 8002b9a:	065f      	lsls	r7, r3, #25
 8002b9c:	bf48      	it	mi
 8002b9e:	b2b6      	uxthmi	r6, r6
 8002ba0:	07df      	lsls	r7, r3, #31
 8002ba2:	bf48      	it	mi
 8002ba4:	f043 0320 	orrmi.w	r3, r3, #32
 8002ba8:	6029      	str	r1, [r5, #0]
 8002baa:	bf48      	it	mi
 8002bac:	6023      	strmi	r3, [r4, #0]
 8002bae:	b91e      	cbnz	r6, 8002bb8 <_printf_i+0x1a4>
 8002bb0:	6823      	ldr	r3, [r4, #0]
 8002bb2:	f023 0320 	bic.w	r3, r3, #32
 8002bb6:	6023      	str	r3, [r4, #0]
 8002bb8:	2310      	movs	r3, #16
 8002bba:	e7a7      	b.n	8002b0c <_printf_i+0xf8>
 8002bbc:	4824      	ldr	r0, [pc, #144]	; (8002c50 <_printf_i+0x23c>)
 8002bbe:	e7e4      	b.n	8002b8a <_printf_i+0x176>
 8002bc0:	4615      	mov	r5, r2
 8002bc2:	e7bd      	b.n	8002b40 <_printf_i+0x12c>
 8002bc4:	682b      	ldr	r3, [r5, #0]
 8002bc6:	6826      	ldr	r6, [r4, #0]
 8002bc8:	6961      	ldr	r1, [r4, #20]
 8002bca:	1d18      	adds	r0, r3, #4
 8002bcc:	6028      	str	r0, [r5, #0]
 8002bce:	0635      	lsls	r5, r6, #24
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	d501      	bpl.n	8002bd8 <_printf_i+0x1c4>
 8002bd4:	6019      	str	r1, [r3, #0]
 8002bd6:	e002      	b.n	8002bde <_printf_i+0x1ca>
 8002bd8:	0670      	lsls	r0, r6, #25
 8002bda:	d5fb      	bpl.n	8002bd4 <_printf_i+0x1c0>
 8002bdc:	8019      	strh	r1, [r3, #0]
 8002bde:	2300      	movs	r3, #0
 8002be0:	6123      	str	r3, [r4, #16]
 8002be2:	4615      	mov	r5, r2
 8002be4:	e7bc      	b.n	8002b60 <_printf_i+0x14c>
 8002be6:	682b      	ldr	r3, [r5, #0]
 8002be8:	1d1a      	adds	r2, r3, #4
 8002bea:	602a      	str	r2, [r5, #0]
 8002bec:	681d      	ldr	r5, [r3, #0]
 8002bee:	6862      	ldr	r2, [r4, #4]
 8002bf0:	2100      	movs	r1, #0
 8002bf2:	4628      	mov	r0, r5
 8002bf4:	f7fd faf4 	bl	80001e0 <memchr>
 8002bf8:	b108      	cbz	r0, 8002bfe <_printf_i+0x1ea>
 8002bfa:	1b40      	subs	r0, r0, r5
 8002bfc:	6060      	str	r0, [r4, #4]
 8002bfe:	6863      	ldr	r3, [r4, #4]
 8002c00:	6123      	str	r3, [r4, #16]
 8002c02:	2300      	movs	r3, #0
 8002c04:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002c08:	e7aa      	b.n	8002b60 <_printf_i+0x14c>
 8002c0a:	6923      	ldr	r3, [r4, #16]
 8002c0c:	462a      	mov	r2, r5
 8002c0e:	4649      	mov	r1, r9
 8002c10:	4640      	mov	r0, r8
 8002c12:	47d0      	blx	sl
 8002c14:	3001      	adds	r0, #1
 8002c16:	d0ad      	beq.n	8002b74 <_printf_i+0x160>
 8002c18:	6823      	ldr	r3, [r4, #0]
 8002c1a:	079b      	lsls	r3, r3, #30
 8002c1c:	d413      	bmi.n	8002c46 <_printf_i+0x232>
 8002c1e:	68e0      	ldr	r0, [r4, #12]
 8002c20:	9b03      	ldr	r3, [sp, #12]
 8002c22:	4298      	cmp	r0, r3
 8002c24:	bfb8      	it	lt
 8002c26:	4618      	movlt	r0, r3
 8002c28:	e7a6      	b.n	8002b78 <_printf_i+0x164>
 8002c2a:	2301      	movs	r3, #1
 8002c2c:	4632      	mov	r2, r6
 8002c2e:	4649      	mov	r1, r9
 8002c30:	4640      	mov	r0, r8
 8002c32:	47d0      	blx	sl
 8002c34:	3001      	adds	r0, #1
 8002c36:	d09d      	beq.n	8002b74 <_printf_i+0x160>
 8002c38:	3501      	adds	r5, #1
 8002c3a:	68e3      	ldr	r3, [r4, #12]
 8002c3c:	9903      	ldr	r1, [sp, #12]
 8002c3e:	1a5b      	subs	r3, r3, r1
 8002c40:	42ab      	cmp	r3, r5
 8002c42:	dcf2      	bgt.n	8002c2a <_printf_i+0x216>
 8002c44:	e7eb      	b.n	8002c1e <_printf_i+0x20a>
 8002c46:	2500      	movs	r5, #0
 8002c48:	f104 0619 	add.w	r6, r4, #25
 8002c4c:	e7f5      	b.n	8002c3a <_printf_i+0x226>
 8002c4e:	bf00      	nop
 8002c50:	08006d92 	.word	0x08006d92
 8002c54:	08006da3 	.word	0x08006da3

08002c58 <_scanf_float>:
 8002c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c5c:	b087      	sub	sp, #28
 8002c5e:	4617      	mov	r7, r2
 8002c60:	9303      	str	r3, [sp, #12]
 8002c62:	688b      	ldr	r3, [r1, #8]
 8002c64:	1e5a      	subs	r2, r3, #1
 8002c66:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002c6a:	bf83      	ittte	hi
 8002c6c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002c70:	195b      	addhi	r3, r3, r5
 8002c72:	9302      	strhi	r3, [sp, #8]
 8002c74:	2300      	movls	r3, #0
 8002c76:	bf86      	itte	hi
 8002c78:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002c7c:	608b      	strhi	r3, [r1, #8]
 8002c7e:	9302      	strls	r3, [sp, #8]
 8002c80:	680b      	ldr	r3, [r1, #0]
 8002c82:	468b      	mov	fp, r1
 8002c84:	2500      	movs	r5, #0
 8002c86:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002c8a:	f84b 3b1c 	str.w	r3, [fp], #28
 8002c8e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002c92:	4680      	mov	r8, r0
 8002c94:	460c      	mov	r4, r1
 8002c96:	465e      	mov	r6, fp
 8002c98:	46aa      	mov	sl, r5
 8002c9a:	46a9      	mov	r9, r5
 8002c9c:	9501      	str	r5, [sp, #4]
 8002c9e:	68a2      	ldr	r2, [r4, #8]
 8002ca0:	b152      	cbz	r2, 8002cb8 <_scanf_float+0x60>
 8002ca2:	683b      	ldr	r3, [r7, #0]
 8002ca4:	781b      	ldrb	r3, [r3, #0]
 8002ca6:	2b4e      	cmp	r3, #78	; 0x4e
 8002ca8:	d864      	bhi.n	8002d74 <_scanf_float+0x11c>
 8002caa:	2b40      	cmp	r3, #64	; 0x40
 8002cac:	d83c      	bhi.n	8002d28 <_scanf_float+0xd0>
 8002cae:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002cb2:	b2c8      	uxtb	r0, r1
 8002cb4:	280e      	cmp	r0, #14
 8002cb6:	d93a      	bls.n	8002d2e <_scanf_float+0xd6>
 8002cb8:	f1b9 0f00 	cmp.w	r9, #0
 8002cbc:	d003      	beq.n	8002cc6 <_scanf_float+0x6e>
 8002cbe:	6823      	ldr	r3, [r4, #0]
 8002cc0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002cc4:	6023      	str	r3, [r4, #0]
 8002cc6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002cca:	f1ba 0f01 	cmp.w	sl, #1
 8002cce:	f200 8113 	bhi.w	8002ef8 <_scanf_float+0x2a0>
 8002cd2:	455e      	cmp	r6, fp
 8002cd4:	f200 8105 	bhi.w	8002ee2 <_scanf_float+0x28a>
 8002cd8:	2501      	movs	r5, #1
 8002cda:	4628      	mov	r0, r5
 8002cdc:	b007      	add	sp, #28
 8002cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ce2:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002ce6:	2a0d      	cmp	r2, #13
 8002ce8:	d8e6      	bhi.n	8002cb8 <_scanf_float+0x60>
 8002cea:	a101      	add	r1, pc, #4	; (adr r1, 8002cf0 <_scanf_float+0x98>)
 8002cec:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002cf0:	08002e2f 	.word	0x08002e2f
 8002cf4:	08002cb9 	.word	0x08002cb9
 8002cf8:	08002cb9 	.word	0x08002cb9
 8002cfc:	08002cb9 	.word	0x08002cb9
 8002d00:	08002e8f 	.word	0x08002e8f
 8002d04:	08002e67 	.word	0x08002e67
 8002d08:	08002cb9 	.word	0x08002cb9
 8002d0c:	08002cb9 	.word	0x08002cb9
 8002d10:	08002e3d 	.word	0x08002e3d
 8002d14:	08002cb9 	.word	0x08002cb9
 8002d18:	08002cb9 	.word	0x08002cb9
 8002d1c:	08002cb9 	.word	0x08002cb9
 8002d20:	08002cb9 	.word	0x08002cb9
 8002d24:	08002df5 	.word	0x08002df5
 8002d28:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002d2c:	e7db      	b.n	8002ce6 <_scanf_float+0x8e>
 8002d2e:	290e      	cmp	r1, #14
 8002d30:	d8c2      	bhi.n	8002cb8 <_scanf_float+0x60>
 8002d32:	a001      	add	r0, pc, #4	; (adr r0, 8002d38 <_scanf_float+0xe0>)
 8002d34:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002d38:	08002de7 	.word	0x08002de7
 8002d3c:	08002cb9 	.word	0x08002cb9
 8002d40:	08002de7 	.word	0x08002de7
 8002d44:	08002e7b 	.word	0x08002e7b
 8002d48:	08002cb9 	.word	0x08002cb9
 8002d4c:	08002d95 	.word	0x08002d95
 8002d50:	08002dd1 	.word	0x08002dd1
 8002d54:	08002dd1 	.word	0x08002dd1
 8002d58:	08002dd1 	.word	0x08002dd1
 8002d5c:	08002dd1 	.word	0x08002dd1
 8002d60:	08002dd1 	.word	0x08002dd1
 8002d64:	08002dd1 	.word	0x08002dd1
 8002d68:	08002dd1 	.word	0x08002dd1
 8002d6c:	08002dd1 	.word	0x08002dd1
 8002d70:	08002dd1 	.word	0x08002dd1
 8002d74:	2b6e      	cmp	r3, #110	; 0x6e
 8002d76:	d809      	bhi.n	8002d8c <_scanf_float+0x134>
 8002d78:	2b60      	cmp	r3, #96	; 0x60
 8002d7a:	d8b2      	bhi.n	8002ce2 <_scanf_float+0x8a>
 8002d7c:	2b54      	cmp	r3, #84	; 0x54
 8002d7e:	d077      	beq.n	8002e70 <_scanf_float+0x218>
 8002d80:	2b59      	cmp	r3, #89	; 0x59
 8002d82:	d199      	bne.n	8002cb8 <_scanf_float+0x60>
 8002d84:	2d07      	cmp	r5, #7
 8002d86:	d197      	bne.n	8002cb8 <_scanf_float+0x60>
 8002d88:	2508      	movs	r5, #8
 8002d8a:	e029      	b.n	8002de0 <_scanf_float+0x188>
 8002d8c:	2b74      	cmp	r3, #116	; 0x74
 8002d8e:	d06f      	beq.n	8002e70 <_scanf_float+0x218>
 8002d90:	2b79      	cmp	r3, #121	; 0x79
 8002d92:	e7f6      	b.n	8002d82 <_scanf_float+0x12a>
 8002d94:	6821      	ldr	r1, [r4, #0]
 8002d96:	05c8      	lsls	r0, r1, #23
 8002d98:	d51a      	bpl.n	8002dd0 <_scanf_float+0x178>
 8002d9a:	9b02      	ldr	r3, [sp, #8]
 8002d9c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002da0:	6021      	str	r1, [r4, #0]
 8002da2:	f109 0901 	add.w	r9, r9, #1
 8002da6:	b11b      	cbz	r3, 8002db0 <_scanf_float+0x158>
 8002da8:	3b01      	subs	r3, #1
 8002daa:	3201      	adds	r2, #1
 8002dac:	9302      	str	r3, [sp, #8]
 8002dae:	60a2      	str	r2, [r4, #8]
 8002db0:	68a3      	ldr	r3, [r4, #8]
 8002db2:	3b01      	subs	r3, #1
 8002db4:	60a3      	str	r3, [r4, #8]
 8002db6:	6923      	ldr	r3, [r4, #16]
 8002db8:	3301      	adds	r3, #1
 8002dba:	6123      	str	r3, [r4, #16]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	3b01      	subs	r3, #1
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	607b      	str	r3, [r7, #4]
 8002dc4:	f340 8084 	ble.w	8002ed0 <_scanf_float+0x278>
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	3301      	adds	r3, #1
 8002dcc:	603b      	str	r3, [r7, #0]
 8002dce:	e766      	b.n	8002c9e <_scanf_float+0x46>
 8002dd0:	eb1a 0f05 	cmn.w	sl, r5
 8002dd4:	f47f af70 	bne.w	8002cb8 <_scanf_float+0x60>
 8002dd8:	6822      	ldr	r2, [r4, #0]
 8002dda:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8002dde:	6022      	str	r2, [r4, #0]
 8002de0:	f806 3b01 	strb.w	r3, [r6], #1
 8002de4:	e7e4      	b.n	8002db0 <_scanf_float+0x158>
 8002de6:	6822      	ldr	r2, [r4, #0]
 8002de8:	0610      	lsls	r0, r2, #24
 8002dea:	f57f af65 	bpl.w	8002cb8 <_scanf_float+0x60>
 8002dee:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002df2:	e7f4      	b.n	8002dde <_scanf_float+0x186>
 8002df4:	f1ba 0f00 	cmp.w	sl, #0
 8002df8:	d10e      	bne.n	8002e18 <_scanf_float+0x1c0>
 8002dfa:	f1b9 0f00 	cmp.w	r9, #0
 8002dfe:	d10e      	bne.n	8002e1e <_scanf_float+0x1c6>
 8002e00:	6822      	ldr	r2, [r4, #0]
 8002e02:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002e06:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002e0a:	d108      	bne.n	8002e1e <_scanf_float+0x1c6>
 8002e0c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002e10:	6022      	str	r2, [r4, #0]
 8002e12:	f04f 0a01 	mov.w	sl, #1
 8002e16:	e7e3      	b.n	8002de0 <_scanf_float+0x188>
 8002e18:	f1ba 0f02 	cmp.w	sl, #2
 8002e1c:	d055      	beq.n	8002eca <_scanf_float+0x272>
 8002e1e:	2d01      	cmp	r5, #1
 8002e20:	d002      	beq.n	8002e28 <_scanf_float+0x1d0>
 8002e22:	2d04      	cmp	r5, #4
 8002e24:	f47f af48 	bne.w	8002cb8 <_scanf_float+0x60>
 8002e28:	3501      	adds	r5, #1
 8002e2a:	b2ed      	uxtb	r5, r5
 8002e2c:	e7d8      	b.n	8002de0 <_scanf_float+0x188>
 8002e2e:	f1ba 0f01 	cmp.w	sl, #1
 8002e32:	f47f af41 	bne.w	8002cb8 <_scanf_float+0x60>
 8002e36:	f04f 0a02 	mov.w	sl, #2
 8002e3a:	e7d1      	b.n	8002de0 <_scanf_float+0x188>
 8002e3c:	b97d      	cbnz	r5, 8002e5e <_scanf_float+0x206>
 8002e3e:	f1b9 0f00 	cmp.w	r9, #0
 8002e42:	f47f af3c 	bne.w	8002cbe <_scanf_float+0x66>
 8002e46:	6822      	ldr	r2, [r4, #0]
 8002e48:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002e4c:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002e50:	f47f af39 	bne.w	8002cc6 <_scanf_float+0x6e>
 8002e54:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002e58:	6022      	str	r2, [r4, #0]
 8002e5a:	2501      	movs	r5, #1
 8002e5c:	e7c0      	b.n	8002de0 <_scanf_float+0x188>
 8002e5e:	2d03      	cmp	r5, #3
 8002e60:	d0e2      	beq.n	8002e28 <_scanf_float+0x1d0>
 8002e62:	2d05      	cmp	r5, #5
 8002e64:	e7de      	b.n	8002e24 <_scanf_float+0x1cc>
 8002e66:	2d02      	cmp	r5, #2
 8002e68:	f47f af26 	bne.w	8002cb8 <_scanf_float+0x60>
 8002e6c:	2503      	movs	r5, #3
 8002e6e:	e7b7      	b.n	8002de0 <_scanf_float+0x188>
 8002e70:	2d06      	cmp	r5, #6
 8002e72:	f47f af21 	bne.w	8002cb8 <_scanf_float+0x60>
 8002e76:	2507      	movs	r5, #7
 8002e78:	e7b2      	b.n	8002de0 <_scanf_float+0x188>
 8002e7a:	6822      	ldr	r2, [r4, #0]
 8002e7c:	0591      	lsls	r1, r2, #22
 8002e7e:	f57f af1b 	bpl.w	8002cb8 <_scanf_float+0x60>
 8002e82:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002e86:	6022      	str	r2, [r4, #0]
 8002e88:	f8cd 9004 	str.w	r9, [sp, #4]
 8002e8c:	e7a8      	b.n	8002de0 <_scanf_float+0x188>
 8002e8e:	6822      	ldr	r2, [r4, #0]
 8002e90:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002e94:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002e98:	d006      	beq.n	8002ea8 <_scanf_float+0x250>
 8002e9a:	0550      	lsls	r0, r2, #21
 8002e9c:	f57f af0c 	bpl.w	8002cb8 <_scanf_float+0x60>
 8002ea0:	f1b9 0f00 	cmp.w	r9, #0
 8002ea4:	f43f af0f 	beq.w	8002cc6 <_scanf_float+0x6e>
 8002ea8:	0591      	lsls	r1, r2, #22
 8002eaa:	bf58      	it	pl
 8002eac:	9901      	ldrpl	r1, [sp, #4]
 8002eae:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002eb2:	bf58      	it	pl
 8002eb4:	eba9 0101 	subpl.w	r1, r9, r1
 8002eb8:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8002ebc:	bf58      	it	pl
 8002ebe:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002ec2:	6022      	str	r2, [r4, #0]
 8002ec4:	f04f 0900 	mov.w	r9, #0
 8002ec8:	e78a      	b.n	8002de0 <_scanf_float+0x188>
 8002eca:	f04f 0a03 	mov.w	sl, #3
 8002ece:	e787      	b.n	8002de0 <_scanf_float+0x188>
 8002ed0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002ed4:	4639      	mov	r1, r7
 8002ed6:	4640      	mov	r0, r8
 8002ed8:	4798      	blx	r3
 8002eda:	2800      	cmp	r0, #0
 8002edc:	f43f aedf 	beq.w	8002c9e <_scanf_float+0x46>
 8002ee0:	e6ea      	b.n	8002cb8 <_scanf_float+0x60>
 8002ee2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ee6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002eea:	463a      	mov	r2, r7
 8002eec:	4640      	mov	r0, r8
 8002eee:	4798      	blx	r3
 8002ef0:	6923      	ldr	r3, [r4, #16]
 8002ef2:	3b01      	subs	r3, #1
 8002ef4:	6123      	str	r3, [r4, #16]
 8002ef6:	e6ec      	b.n	8002cd2 <_scanf_float+0x7a>
 8002ef8:	1e6b      	subs	r3, r5, #1
 8002efa:	2b06      	cmp	r3, #6
 8002efc:	d825      	bhi.n	8002f4a <_scanf_float+0x2f2>
 8002efe:	2d02      	cmp	r5, #2
 8002f00:	d836      	bhi.n	8002f70 <_scanf_float+0x318>
 8002f02:	455e      	cmp	r6, fp
 8002f04:	f67f aee8 	bls.w	8002cd8 <_scanf_float+0x80>
 8002f08:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f0c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002f10:	463a      	mov	r2, r7
 8002f12:	4640      	mov	r0, r8
 8002f14:	4798      	blx	r3
 8002f16:	6923      	ldr	r3, [r4, #16]
 8002f18:	3b01      	subs	r3, #1
 8002f1a:	6123      	str	r3, [r4, #16]
 8002f1c:	e7f1      	b.n	8002f02 <_scanf_float+0x2aa>
 8002f1e:	9802      	ldr	r0, [sp, #8]
 8002f20:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f24:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002f28:	9002      	str	r0, [sp, #8]
 8002f2a:	463a      	mov	r2, r7
 8002f2c:	4640      	mov	r0, r8
 8002f2e:	4798      	blx	r3
 8002f30:	6923      	ldr	r3, [r4, #16]
 8002f32:	3b01      	subs	r3, #1
 8002f34:	6123      	str	r3, [r4, #16]
 8002f36:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002f3a:	fa5f fa8a 	uxtb.w	sl, sl
 8002f3e:	f1ba 0f02 	cmp.w	sl, #2
 8002f42:	d1ec      	bne.n	8002f1e <_scanf_float+0x2c6>
 8002f44:	3d03      	subs	r5, #3
 8002f46:	b2ed      	uxtb	r5, r5
 8002f48:	1b76      	subs	r6, r6, r5
 8002f4a:	6823      	ldr	r3, [r4, #0]
 8002f4c:	05da      	lsls	r2, r3, #23
 8002f4e:	d52f      	bpl.n	8002fb0 <_scanf_float+0x358>
 8002f50:	055b      	lsls	r3, r3, #21
 8002f52:	d510      	bpl.n	8002f76 <_scanf_float+0x31e>
 8002f54:	455e      	cmp	r6, fp
 8002f56:	f67f aebf 	bls.w	8002cd8 <_scanf_float+0x80>
 8002f5a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f5e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002f62:	463a      	mov	r2, r7
 8002f64:	4640      	mov	r0, r8
 8002f66:	4798      	blx	r3
 8002f68:	6923      	ldr	r3, [r4, #16]
 8002f6a:	3b01      	subs	r3, #1
 8002f6c:	6123      	str	r3, [r4, #16]
 8002f6e:	e7f1      	b.n	8002f54 <_scanf_float+0x2fc>
 8002f70:	46aa      	mov	sl, r5
 8002f72:	9602      	str	r6, [sp, #8]
 8002f74:	e7df      	b.n	8002f36 <_scanf_float+0x2de>
 8002f76:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002f7a:	6923      	ldr	r3, [r4, #16]
 8002f7c:	2965      	cmp	r1, #101	; 0x65
 8002f7e:	f103 33ff 	add.w	r3, r3, #4294967295
 8002f82:	f106 35ff 	add.w	r5, r6, #4294967295
 8002f86:	6123      	str	r3, [r4, #16]
 8002f88:	d00c      	beq.n	8002fa4 <_scanf_float+0x34c>
 8002f8a:	2945      	cmp	r1, #69	; 0x45
 8002f8c:	d00a      	beq.n	8002fa4 <_scanf_float+0x34c>
 8002f8e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f92:	463a      	mov	r2, r7
 8002f94:	4640      	mov	r0, r8
 8002f96:	4798      	blx	r3
 8002f98:	6923      	ldr	r3, [r4, #16]
 8002f9a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002f9e:	3b01      	subs	r3, #1
 8002fa0:	1eb5      	subs	r5, r6, #2
 8002fa2:	6123      	str	r3, [r4, #16]
 8002fa4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002fa8:	463a      	mov	r2, r7
 8002faa:	4640      	mov	r0, r8
 8002fac:	4798      	blx	r3
 8002fae:	462e      	mov	r6, r5
 8002fb0:	6825      	ldr	r5, [r4, #0]
 8002fb2:	f015 0510 	ands.w	r5, r5, #16
 8002fb6:	d158      	bne.n	800306a <_scanf_float+0x412>
 8002fb8:	7035      	strb	r5, [r6, #0]
 8002fba:	6823      	ldr	r3, [r4, #0]
 8002fbc:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002fc0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002fc4:	d11c      	bne.n	8003000 <_scanf_float+0x3a8>
 8002fc6:	9b01      	ldr	r3, [sp, #4]
 8002fc8:	454b      	cmp	r3, r9
 8002fca:	eba3 0209 	sub.w	r2, r3, r9
 8002fce:	d124      	bne.n	800301a <_scanf_float+0x3c2>
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	4659      	mov	r1, fp
 8002fd4:	4640      	mov	r0, r8
 8002fd6:	f002 fc5f 	bl	8005898 <_strtod_r>
 8002fda:	9b03      	ldr	r3, [sp, #12]
 8002fdc:	6821      	ldr	r1, [r4, #0]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	f011 0f02 	tst.w	r1, #2
 8002fe4:	ec57 6b10 	vmov	r6, r7, d0
 8002fe8:	f103 0204 	add.w	r2, r3, #4
 8002fec:	d020      	beq.n	8003030 <_scanf_float+0x3d8>
 8002fee:	9903      	ldr	r1, [sp, #12]
 8002ff0:	600a      	str	r2, [r1, #0]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	e9c3 6700 	strd	r6, r7, [r3]
 8002ff8:	68e3      	ldr	r3, [r4, #12]
 8002ffa:	3301      	adds	r3, #1
 8002ffc:	60e3      	str	r3, [r4, #12]
 8002ffe:	e66c      	b.n	8002cda <_scanf_float+0x82>
 8003000:	9b04      	ldr	r3, [sp, #16]
 8003002:	2b00      	cmp	r3, #0
 8003004:	d0e4      	beq.n	8002fd0 <_scanf_float+0x378>
 8003006:	9905      	ldr	r1, [sp, #20]
 8003008:	230a      	movs	r3, #10
 800300a:	462a      	mov	r2, r5
 800300c:	3101      	adds	r1, #1
 800300e:	4640      	mov	r0, r8
 8003010:	f002 fcca 	bl	80059a8 <_strtol_r>
 8003014:	9b04      	ldr	r3, [sp, #16]
 8003016:	9e05      	ldr	r6, [sp, #20]
 8003018:	1ac2      	subs	r2, r0, r3
 800301a:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800301e:	429e      	cmp	r6, r3
 8003020:	bf28      	it	cs
 8003022:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8003026:	4912      	ldr	r1, [pc, #72]	; (8003070 <_scanf_float+0x418>)
 8003028:	4630      	mov	r0, r6
 800302a:	f000 f8f9 	bl	8003220 <siprintf>
 800302e:	e7cf      	b.n	8002fd0 <_scanf_float+0x378>
 8003030:	f011 0f04 	tst.w	r1, #4
 8003034:	9903      	ldr	r1, [sp, #12]
 8003036:	600a      	str	r2, [r1, #0]
 8003038:	d1db      	bne.n	8002ff2 <_scanf_float+0x39a>
 800303a:	f8d3 8000 	ldr.w	r8, [r3]
 800303e:	ee10 2a10 	vmov	r2, s0
 8003042:	ee10 0a10 	vmov	r0, s0
 8003046:	463b      	mov	r3, r7
 8003048:	4639      	mov	r1, r7
 800304a:	f7fd fd77 	bl	8000b3c <__aeabi_dcmpun>
 800304e:	b128      	cbz	r0, 800305c <_scanf_float+0x404>
 8003050:	4808      	ldr	r0, [pc, #32]	; (8003074 <_scanf_float+0x41c>)
 8003052:	f000 f9c9 	bl	80033e8 <nanf>
 8003056:	ed88 0a00 	vstr	s0, [r8]
 800305a:	e7cd      	b.n	8002ff8 <_scanf_float+0x3a0>
 800305c:	4630      	mov	r0, r6
 800305e:	4639      	mov	r1, r7
 8003060:	f7fd fdca 	bl	8000bf8 <__aeabi_d2f>
 8003064:	f8c8 0000 	str.w	r0, [r8]
 8003068:	e7c6      	b.n	8002ff8 <_scanf_float+0x3a0>
 800306a:	2500      	movs	r5, #0
 800306c:	e635      	b.n	8002cda <_scanf_float+0x82>
 800306e:	bf00      	nop
 8003070:	08006db4 	.word	0x08006db4
 8003074:	08006df4 	.word	0x08006df4

08003078 <std>:
 8003078:	2300      	movs	r3, #0
 800307a:	b510      	push	{r4, lr}
 800307c:	4604      	mov	r4, r0
 800307e:	e9c0 3300 	strd	r3, r3, [r0]
 8003082:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003086:	6083      	str	r3, [r0, #8]
 8003088:	8181      	strh	r1, [r0, #12]
 800308a:	6643      	str	r3, [r0, #100]	; 0x64
 800308c:	81c2      	strh	r2, [r0, #14]
 800308e:	6183      	str	r3, [r0, #24]
 8003090:	4619      	mov	r1, r3
 8003092:	2208      	movs	r2, #8
 8003094:	305c      	adds	r0, #92	; 0x5c
 8003096:	f000 f926 	bl	80032e6 <memset>
 800309a:	4b0d      	ldr	r3, [pc, #52]	; (80030d0 <std+0x58>)
 800309c:	6263      	str	r3, [r4, #36]	; 0x24
 800309e:	4b0d      	ldr	r3, [pc, #52]	; (80030d4 <std+0x5c>)
 80030a0:	62a3      	str	r3, [r4, #40]	; 0x28
 80030a2:	4b0d      	ldr	r3, [pc, #52]	; (80030d8 <std+0x60>)
 80030a4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80030a6:	4b0d      	ldr	r3, [pc, #52]	; (80030dc <std+0x64>)
 80030a8:	6323      	str	r3, [r4, #48]	; 0x30
 80030aa:	4b0d      	ldr	r3, [pc, #52]	; (80030e0 <std+0x68>)
 80030ac:	6224      	str	r4, [r4, #32]
 80030ae:	429c      	cmp	r4, r3
 80030b0:	d006      	beq.n	80030c0 <std+0x48>
 80030b2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80030b6:	4294      	cmp	r4, r2
 80030b8:	d002      	beq.n	80030c0 <std+0x48>
 80030ba:	33d0      	adds	r3, #208	; 0xd0
 80030bc:	429c      	cmp	r4, r3
 80030be:	d105      	bne.n	80030cc <std+0x54>
 80030c0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80030c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80030c8:	f000 b98a 	b.w	80033e0 <__retarget_lock_init_recursive>
 80030cc:	bd10      	pop	{r4, pc}
 80030ce:	bf00      	nop
 80030d0:	08003261 	.word	0x08003261
 80030d4:	08003283 	.word	0x08003283
 80030d8:	080032bb 	.word	0x080032bb
 80030dc:	080032df 	.word	0x080032df
 80030e0:	20001a04 	.word	0x20001a04

080030e4 <stdio_exit_handler>:
 80030e4:	4a02      	ldr	r2, [pc, #8]	; (80030f0 <stdio_exit_handler+0xc>)
 80030e6:	4903      	ldr	r1, [pc, #12]	; (80030f4 <stdio_exit_handler+0x10>)
 80030e8:	4803      	ldr	r0, [pc, #12]	; (80030f8 <stdio_exit_handler+0x14>)
 80030ea:	f000 b869 	b.w	80031c0 <_fwalk_sglue>
 80030ee:	bf00      	nop
 80030f0:	2000002c 	.word	0x2000002c
 80030f4:	08005ff1 	.word	0x08005ff1
 80030f8:	20000038 	.word	0x20000038

080030fc <cleanup_stdio>:
 80030fc:	6841      	ldr	r1, [r0, #4]
 80030fe:	4b0c      	ldr	r3, [pc, #48]	; (8003130 <cleanup_stdio+0x34>)
 8003100:	4299      	cmp	r1, r3
 8003102:	b510      	push	{r4, lr}
 8003104:	4604      	mov	r4, r0
 8003106:	d001      	beq.n	800310c <cleanup_stdio+0x10>
 8003108:	f002 ff72 	bl	8005ff0 <_fflush_r>
 800310c:	68a1      	ldr	r1, [r4, #8]
 800310e:	4b09      	ldr	r3, [pc, #36]	; (8003134 <cleanup_stdio+0x38>)
 8003110:	4299      	cmp	r1, r3
 8003112:	d002      	beq.n	800311a <cleanup_stdio+0x1e>
 8003114:	4620      	mov	r0, r4
 8003116:	f002 ff6b 	bl	8005ff0 <_fflush_r>
 800311a:	68e1      	ldr	r1, [r4, #12]
 800311c:	4b06      	ldr	r3, [pc, #24]	; (8003138 <cleanup_stdio+0x3c>)
 800311e:	4299      	cmp	r1, r3
 8003120:	d004      	beq.n	800312c <cleanup_stdio+0x30>
 8003122:	4620      	mov	r0, r4
 8003124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003128:	f002 bf62 	b.w	8005ff0 <_fflush_r>
 800312c:	bd10      	pop	{r4, pc}
 800312e:	bf00      	nop
 8003130:	20001a04 	.word	0x20001a04
 8003134:	20001a6c 	.word	0x20001a6c
 8003138:	20001ad4 	.word	0x20001ad4

0800313c <global_stdio_init.part.0>:
 800313c:	b510      	push	{r4, lr}
 800313e:	4b0b      	ldr	r3, [pc, #44]	; (800316c <global_stdio_init.part.0+0x30>)
 8003140:	4c0b      	ldr	r4, [pc, #44]	; (8003170 <global_stdio_init.part.0+0x34>)
 8003142:	4a0c      	ldr	r2, [pc, #48]	; (8003174 <global_stdio_init.part.0+0x38>)
 8003144:	601a      	str	r2, [r3, #0]
 8003146:	4620      	mov	r0, r4
 8003148:	2200      	movs	r2, #0
 800314a:	2104      	movs	r1, #4
 800314c:	f7ff ff94 	bl	8003078 <std>
 8003150:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8003154:	2201      	movs	r2, #1
 8003156:	2109      	movs	r1, #9
 8003158:	f7ff ff8e 	bl	8003078 <std>
 800315c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8003160:	2202      	movs	r2, #2
 8003162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003166:	2112      	movs	r1, #18
 8003168:	f7ff bf86 	b.w	8003078 <std>
 800316c:	20001b3c 	.word	0x20001b3c
 8003170:	20001a04 	.word	0x20001a04
 8003174:	080030e5 	.word	0x080030e5

08003178 <__sfp_lock_acquire>:
 8003178:	4801      	ldr	r0, [pc, #4]	; (8003180 <__sfp_lock_acquire+0x8>)
 800317a:	f000 b932 	b.w	80033e2 <__retarget_lock_acquire_recursive>
 800317e:	bf00      	nop
 8003180:	20001b45 	.word	0x20001b45

08003184 <__sfp_lock_release>:
 8003184:	4801      	ldr	r0, [pc, #4]	; (800318c <__sfp_lock_release+0x8>)
 8003186:	f000 b92d 	b.w	80033e4 <__retarget_lock_release_recursive>
 800318a:	bf00      	nop
 800318c:	20001b45 	.word	0x20001b45

08003190 <__sinit>:
 8003190:	b510      	push	{r4, lr}
 8003192:	4604      	mov	r4, r0
 8003194:	f7ff fff0 	bl	8003178 <__sfp_lock_acquire>
 8003198:	6a23      	ldr	r3, [r4, #32]
 800319a:	b11b      	cbz	r3, 80031a4 <__sinit+0x14>
 800319c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80031a0:	f7ff bff0 	b.w	8003184 <__sfp_lock_release>
 80031a4:	4b04      	ldr	r3, [pc, #16]	; (80031b8 <__sinit+0x28>)
 80031a6:	6223      	str	r3, [r4, #32]
 80031a8:	4b04      	ldr	r3, [pc, #16]	; (80031bc <__sinit+0x2c>)
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	2b00      	cmp	r3, #0
 80031ae:	d1f5      	bne.n	800319c <__sinit+0xc>
 80031b0:	f7ff ffc4 	bl	800313c <global_stdio_init.part.0>
 80031b4:	e7f2      	b.n	800319c <__sinit+0xc>
 80031b6:	bf00      	nop
 80031b8:	080030fd 	.word	0x080030fd
 80031bc:	20001b3c 	.word	0x20001b3c

080031c0 <_fwalk_sglue>:
 80031c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031c4:	4607      	mov	r7, r0
 80031c6:	4688      	mov	r8, r1
 80031c8:	4614      	mov	r4, r2
 80031ca:	2600      	movs	r6, #0
 80031cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80031d0:	f1b9 0901 	subs.w	r9, r9, #1
 80031d4:	d505      	bpl.n	80031e2 <_fwalk_sglue+0x22>
 80031d6:	6824      	ldr	r4, [r4, #0]
 80031d8:	2c00      	cmp	r4, #0
 80031da:	d1f7      	bne.n	80031cc <_fwalk_sglue+0xc>
 80031dc:	4630      	mov	r0, r6
 80031de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80031e2:	89ab      	ldrh	r3, [r5, #12]
 80031e4:	2b01      	cmp	r3, #1
 80031e6:	d907      	bls.n	80031f8 <_fwalk_sglue+0x38>
 80031e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80031ec:	3301      	adds	r3, #1
 80031ee:	d003      	beq.n	80031f8 <_fwalk_sglue+0x38>
 80031f0:	4629      	mov	r1, r5
 80031f2:	4638      	mov	r0, r7
 80031f4:	47c0      	blx	r8
 80031f6:	4306      	orrs	r6, r0
 80031f8:	3568      	adds	r5, #104	; 0x68
 80031fa:	e7e9      	b.n	80031d0 <_fwalk_sglue+0x10>

080031fc <iprintf>:
 80031fc:	b40f      	push	{r0, r1, r2, r3}
 80031fe:	b507      	push	{r0, r1, r2, lr}
 8003200:	4906      	ldr	r1, [pc, #24]	; (800321c <iprintf+0x20>)
 8003202:	ab04      	add	r3, sp, #16
 8003204:	6808      	ldr	r0, [r1, #0]
 8003206:	f853 2b04 	ldr.w	r2, [r3], #4
 800320a:	6881      	ldr	r1, [r0, #8]
 800320c:	9301      	str	r3, [sp, #4]
 800320e:	f002 fd4f 	bl	8005cb0 <_vfiprintf_r>
 8003212:	b003      	add	sp, #12
 8003214:	f85d eb04 	ldr.w	lr, [sp], #4
 8003218:	b004      	add	sp, #16
 800321a:	4770      	bx	lr
 800321c:	20000084 	.word	0x20000084

08003220 <siprintf>:
 8003220:	b40e      	push	{r1, r2, r3}
 8003222:	b500      	push	{lr}
 8003224:	b09c      	sub	sp, #112	; 0x70
 8003226:	ab1d      	add	r3, sp, #116	; 0x74
 8003228:	9002      	str	r0, [sp, #8]
 800322a:	9006      	str	r0, [sp, #24]
 800322c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003230:	4809      	ldr	r0, [pc, #36]	; (8003258 <siprintf+0x38>)
 8003232:	9107      	str	r1, [sp, #28]
 8003234:	9104      	str	r1, [sp, #16]
 8003236:	4909      	ldr	r1, [pc, #36]	; (800325c <siprintf+0x3c>)
 8003238:	f853 2b04 	ldr.w	r2, [r3], #4
 800323c:	9105      	str	r1, [sp, #20]
 800323e:	6800      	ldr	r0, [r0, #0]
 8003240:	9301      	str	r3, [sp, #4]
 8003242:	a902      	add	r1, sp, #8
 8003244:	f002 fc0c 	bl	8005a60 <_svfiprintf_r>
 8003248:	9b02      	ldr	r3, [sp, #8]
 800324a:	2200      	movs	r2, #0
 800324c:	701a      	strb	r2, [r3, #0]
 800324e:	b01c      	add	sp, #112	; 0x70
 8003250:	f85d eb04 	ldr.w	lr, [sp], #4
 8003254:	b003      	add	sp, #12
 8003256:	4770      	bx	lr
 8003258:	20000084 	.word	0x20000084
 800325c:	ffff0208 	.word	0xffff0208

08003260 <__sread>:
 8003260:	b510      	push	{r4, lr}
 8003262:	460c      	mov	r4, r1
 8003264:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003268:	f000 f86c 	bl	8003344 <_read_r>
 800326c:	2800      	cmp	r0, #0
 800326e:	bfab      	itete	ge
 8003270:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003272:	89a3      	ldrhlt	r3, [r4, #12]
 8003274:	181b      	addge	r3, r3, r0
 8003276:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800327a:	bfac      	ite	ge
 800327c:	6563      	strge	r3, [r4, #84]	; 0x54
 800327e:	81a3      	strhlt	r3, [r4, #12]
 8003280:	bd10      	pop	{r4, pc}

08003282 <__swrite>:
 8003282:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003286:	461f      	mov	r7, r3
 8003288:	898b      	ldrh	r3, [r1, #12]
 800328a:	05db      	lsls	r3, r3, #23
 800328c:	4605      	mov	r5, r0
 800328e:	460c      	mov	r4, r1
 8003290:	4616      	mov	r6, r2
 8003292:	d505      	bpl.n	80032a0 <__swrite+0x1e>
 8003294:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003298:	2302      	movs	r3, #2
 800329a:	2200      	movs	r2, #0
 800329c:	f000 f840 	bl	8003320 <_lseek_r>
 80032a0:	89a3      	ldrh	r3, [r4, #12]
 80032a2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80032a6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80032aa:	81a3      	strh	r3, [r4, #12]
 80032ac:	4632      	mov	r2, r6
 80032ae:	463b      	mov	r3, r7
 80032b0:	4628      	mov	r0, r5
 80032b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80032b6:	f000 b857 	b.w	8003368 <_write_r>

080032ba <__sseek>:
 80032ba:	b510      	push	{r4, lr}
 80032bc:	460c      	mov	r4, r1
 80032be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80032c2:	f000 f82d 	bl	8003320 <_lseek_r>
 80032c6:	1c43      	adds	r3, r0, #1
 80032c8:	89a3      	ldrh	r3, [r4, #12]
 80032ca:	bf15      	itete	ne
 80032cc:	6560      	strne	r0, [r4, #84]	; 0x54
 80032ce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80032d2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80032d6:	81a3      	strheq	r3, [r4, #12]
 80032d8:	bf18      	it	ne
 80032da:	81a3      	strhne	r3, [r4, #12]
 80032dc:	bd10      	pop	{r4, pc}

080032de <__sclose>:
 80032de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80032e2:	f000 b80d 	b.w	8003300 <_close_r>

080032e6 <memset>:
 80032e6:	4402      	add	r2, r0
 80032e8:	4603      	mov	r3, r0
 80032ea:	4293      	cmp	r3, r2
 80032ec:	d100      	bne.n	80032f0 <memset+0xa>
 80032ee:	4770      	bx	lr
 80032f0:	f803 1b01 	strb.w	r1, [r3], #1
 80032f4:	e7f9      	b.n	80032ea <memset+0x4>
	...

080032f8 <_localeconv_r>:
 80032f8:	4800      	ldr	r0, [pc, #0]	; (80032fc <_localeconv_r+0x4>)
 80032fa:	4770      	bx	lr
 80032fc:	20000178 	.word	0x20000178

08003300 <_close_r>:
 8003300:	b538      	push	{r3, r4, r5, lr}
 8003302:	4d06      	ldr	r5, [pc, #24]	; (800331c <_close_r+0x1c>)
 8003304:	2300      	movs	r3, #0
 8003306:	4604      	mov	r4, r0
 8003308:	4608      	mov	r0, r1
 800330a:	602b      	str	r3, [r5, #0]
 800330c:	f7fe fcad 	bl	8001c6a <_close>
 8003310:	1c43      	adds	r3, r0, #1
 8003312:	d102      	bne.n	800331a <_close_r+0x1a>
 8003314:	682b      	ldr	r3, [r5, #0]
 8003316:	b103      	cbz	r3, 800331a <_close_r+0x1a>
 8003318:	6023      	str	r3, [r4, #0]
 800331a:	bd38      	pop	{r3, r4, r5, pc}
 800331c:	20001b40 	.word	0x20001b40

08003320 <_lseek_r>:
 8003320:	b538      	push	{r3, r4, r5, lr}
 8003322:	4d07      	ldr	r5, [pc, #28]	; (8003340 <_lseek_r+0x20>)
 8003324:	4604      	mov	r4, r0
 8003326:	4608      	mov	r0, r1
 8003328:	4611      	mov	r1, r2
 800332a:	2200      	movs	r2, #0
 800332c:	602a      	str	r2, [r5, #0]
 800332e:	461a      	mov	r2, r3
 8003330:	f7fe fcc2 	bl	8001cb8 <_lseek>
 8003334:	1c43      	adds	r3, r0, #1
 8003336:	d102      	bne.n	800333e <_lseek_r+0x1e>
 8003338:	682b      	ldr	r3, [r5, #0]
 800333a:	b103      	cbz	r3, 800333e <_lseek_r+0x1e>
 800333c:	6023      	str	r3, [r4, #0]
 800333e:	bd38      	pop	{r3, r4, r5, pc}
 8003340:	20001b40 	.word	0x20001b40

08003344 <_read_r>:
 8003344:	b538      	push	{r3, r4, r5, lr}
 8003346:	4d07      	ldr	r5, [pc, #28]	; (8003364 <_read_r+0x20>)
 8003348:	4604      	mov	r4, r0
 800334a:	4608      	mov	r0, r1
 800334c:	4611      	mov	r1, r2
 800334e:	2200      	movs	r2, #0
 8003350:	602a      	str	r2, [r5, #0]
 8003352:	461a      	mov	r2, r3
 8003354:	f7fe fc50 	bl	8001bf8 <_read>
 8003358:	1c43      	adds	r3, r0, #1
 800335a:	d102      	bne.n	8003362 <_read_r+0x1e>
 800335c:	682b      	ldr	r3, [r5, #0]
 800335e:	b103      	cbz	r3, 8003362 <_read_r+0x1e>
 8003360:	6023      	str	r3, [r4, #0]
 8003362:	bd38      	pop	{r3, r4, r5, pc}
 8003364:	20001b40 	.word	0x20001b40

08003368 <_write_r>:
 8003368:	b538      	push	{r3, r4, r5, lr}
 800336a:	4d07      	ldr	r5, [pc, #28]	; (8003388 <_write_r+0x20>)
 800336c:	4604      	mov	r4, r0
 800336e:	4608      	mov	r0, r1
 8003370:	4611      	mov	r1, r2
 8003372:	2200      	movs	r2, #0
 8003374:	602a      	str	r2, [r5, #0]
 8003376:	461a      	mov	r2, r3
 8003378:	f7fe fc5b 	bl	8001c32 <_write>
 800337c:	1c43      	adds	r3, r0, #1
 800337e:	d102      	bne.n	8003386 <_write_r+0x1e>
 8003380:	682b      	ldr	r3, [r5, #0]
 8003382:	b103      	cbz	r3, 8003386 <_write_r+0x1e>
 8003384:	6023      	str	r3, [r4, #0]
 8003386:	bd38      	pop	{r3, r4, r5, pc}
 8003388:	20001b40 	.word	0x20001b40

0800338c <__errno>:
 800338c:	4b01      	ldr	r3, [pc, #4]	; (8003394 <__errno+0x8>)
 800338e:	6818      	ldr	r0, [r3, #0]
 8003390:	4770      	bx	lr
 8003392:	bf00      	nop
 8003394:	20000084 	.word	0x20000084

08003398 <__libc_init_array>:
 8003398:	b570      	push	{r4, r5, r6, lr}
 800339a:	4d0d      	ldr	r5, [pc, #52]	; (80033d0 <__libc_init_array+0x38>)
 800339c:	4c0d      	ldr	r4, [pc, #52]	; (80033d4 <__libc_init_array+0x3c>)
 800339e:	1b64      	subs	r4, r4, r5
 80033a0:	10a4      	asrs	r4, r4, #2
 80033a2:	2600      	movs	r6, #0
 80033a4:	42a6      	cmp	r6, r4
 80033a6:	d109      	bne.n	80033bc <__libc_init_array+0x24>
 80033a8:	4d0b      	ldr	r5, [pc, #44]	; (80033d8 <__libc_init_array+0x40>)
 80033aa:	4c0c      	ldr	r4, [pc, #48]	; (80033dc <__libc_init_array+0x44>)
 80033ac:	f003 fbd6 	bl	8006b5c <_init>
 80033b0:	1b64      	subs	r4, r4, r5
 80033b2:	10a4      	asrs	r4, r4, #2
 80033b4:	2600      	movs	r6, #0
 80033b6:	42a6      	cmp	r6, r4
 80033b8:	d105      	bne.n	80033c6 <__libc_init_array+0x2e>
 80033ba:	bd70      	pop	{r4, r5, r6, pc}
 80033bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80033c0:	4798      	blx	r3
 80033c2:	3601      	adds	r6, #1
 80033c4:	e7ee      	b.n	80033a4 <__libc_init_array+0xc>
 80033c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80033ca:	4798      	blx	r3
 80033cc:	3601      	adds	r6, #1
 80033ce:	e7f2      	b.n	80033b6 <__libc_init_array+0x1e>
 80033d0:	080071ac 	.word	0x080071ac
 80033d4:	080071ac 	.word	0x080071ac
 80033d8:	080071ac 	.word	0x080071ac
 80033dc:	080071b0 	.word	0x080071b0

080033e0 <__retarget_lock_init_recursive>:
 80033e0:	4770      	bx	lr

080033e2 <__retarget_lock_acquire_recursive>:
 80033e2:	4770      	bx	lr

080033e4 <__retarget_lock_release_recursive>:
 80033e4:	4770      	bx	lr
	...

080033e8 <nanf>:
 80033e8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80033f0 <nanf+0x8>
 80033ec:	4770      	bx	lr
 80033ee:	bf00      	nop
 80033f0:	7fc00000 	.word	0x7fc00000

080033f4 <__assert_func>:
 80033f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80033f6:	4614      	mov	r4, r2
 80033f8:	461a      	mov	r2, r3
 80033fa:	4b09      	ldr	r3, [pc, #36]	; (8003420 <__assert_func+0x2c>)
 80033fc:	681b      	ldr	r3, [r3, #0]
 80033fe:	4605      	mov	r5, r0
 8003400:	68d8      	ldr	r0, [r3, #12]
 8003402:	b14c      	cbz	r4, 8003418 <__assert_func+0x24>
 8003404:	4b07      	ldr	r3, [pc, #28]	; (8003424 <__assert_func+0x30>)
 8003406:	9100      	str	r1, [sp, #0]
 8003408:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800340c:	4906      	ldr	r1, [pc, #24]	; (8003428 <__assert_func+0x34>)
 800340e:	462b      	mov	r3, r5
 8003410:	f002 fe16 	bl	8006040 <fiprintf>
 8003414:	f002 ff10 	bl	8006238 <abort>
 8003418:	4b04      	ldr	r3, [pc, #16]	; (800342c <__assert_func+0x38>)
 800341a:	461c      	mov	r4, r3
 800341c:	e7f3      	b.n	8003406 <__assert_func+0x12>
 800341e:	bf00      	nop
 8003420:	20000084 	.word	0x20000084
 8003424:	08006db9 	.word	0x08006db9
 8003428:	08006dc6 	.word	0x08006dc6
 800342c:	08006df4 	.word	0x08006df4

08003430 <quorem>:
 8003430:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003434:	6903      	ldr	r3, [r0, #16]
 8003436:	690c      	ldr	r4, [r1, #16]
 8003438:	42a3      	cmp	r3, r4
 800343a:	4607      	mov	r7, r0
 800343c:	db7e      	blt.n	800353c <quorem+0x10c>
 800343e:	3c01      	subs	r4, #1
 8003440:	f101 0814 	add.w	r8, r1, #20
 8003444:	f100 0514 	add.w	r5, r0, #20
 8003448:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800344c:	9301      	str	r3, [sp, #4]
 800344e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003452:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003456:	3301      	adds	r3, #1
 8003458:	429a      	cmp	r2, r3
 800345a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800345e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003462:	fbb2 f6f3 	udiv	r6, r2, r3
 8003466:	d331      	bcc.n	80034cc <quorem+0x9c>
 8003468:	f04f 0e00 	mov.w	lr, #0
 800346c:	4640      	mov	r0, r8
 800346e:	46ac      	mov	ip, r5
 8003470:	46f2      	mov	sl, lr
 8003472:	f850 2b04 	ldr.w	r2, [r0], #4
 8003476:	b293      	uxth	r3, r2
 8003478:	fb06 e303 	mla	r3, r6, r3, lr
 800347c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8003480:	0c1a      	lsrs	r2, r3, #16
 8003482:	b29b      	uxth	r3, r3
 8003484:	ebaa 0303 	sub.w	r3, sl, r3
 8003488:	f8dc a000 	ldr.w	sl, [ip]
 800348c:	fa13 f38a 	uxtah	r3, r3, sl
 8003490:	fb06 220e 	mla	r2, r6, lr, r2
 8003494:	9300      	str	r3, [sp, #0]
 8003496:	9b00      	ldr	r3, [sp, #0]
 8003498:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800349c:	b292      	uxth	r2, r2
 800349e:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80034a2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80034a6:	f8bd 3000 	ldrh.w	r3, [sp]
 80034aa:	4581      	cmp	r9, r0
 80034ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80034b0:	f84c 3b04 	str.w	r3, [ip], #4
 80034b4:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80034b8:	d2db      	bcs.n	8003472 <quorem+0x42>
 80034ba:	f855 300b 	ldr.w	r3, [r5, fp]
 80034be:	b92b      	cbnz	r3, 80034cc <quorem+0x9c>
 80034c0:	9b01      	ldr	r3, [sp, #4]
 80034c2:	3b04      	subs	r3, #4
 80034c4:	429d      	cmp	r5, r3
 80034c6:	461a      	mov	r2, r3
 80034c8:	d32c      	bcc.n	8003524 <quorem+0xf4>
 80034ca:	613c      	str	r4, [r7, #16]
 80034cc:	4638      	mov	r0, r7
 80034ce:	f001 f9ef 	bl	80048b0 <__mcmp>
 80034d2:	2800      	cmp	r0, #0
 80034d4:	db22      	blt.n	800351c <quorem+0xec>
 80034d6:	3601      	adds	r6, #1
 80034d8:	4629      	mov	r1, r5
 80034da:	2000      	movs	r0, #0
 80034dc:	f858 2b04 	ldr.w	r2, [r8], #4
 80034e0:	f8d1 c000 	ldr.w	ip, [r1]
 80034e4:	b293      	uxth	r3, r2
 80034e6:	1ac3      	subs	r3, r0, r3
 80034e8:	0c12      	lsrs	r2, r2, #16
 80034ea:	fa13 f38c 	uxtah	r3, r3, ip
 80034ee:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80034f2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80034f6:	b29b      	uxth	r3, r3
 80034f8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80034fc:	45c1      	cmp	r9, r8
 80034fe:	f841 3b04 	str.w	r3, [r1], #4
 8003502:	ea4f 4022 	mov.w	r0, r2, asr #16
 8003506:	d2e9      	bcs.n	80034dc <quorem+0xac>
 8003508:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800350c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003510:	b922      	cbnz	r2, 800351c <quorem+0xec>
 8003512:	3b04      	subs	r3, #4
 8003514:	429d      	cmp	r5, r3
 8003516:	461a      	mov	r2, r3
 8003518:	d30a      	bcc.n	8003530 <quorem+0x100>
 800351a:	613c      	str	r4, [r7, #16]
 800351c:	4630      	mov	r0, r6
 800351e:	b003      	add	sp, #12
 8003520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003524:	6812      	ldr	r2, [r2, #0]
 8003526:	3b04      	subs	r3, #4
 8003528:	2a00      	cmp	r2, #0
 800352a:	d1ce      	bne.n	80034ca <quorem+0x9a>
 800352c:	3c01      	subs	r4, #1
 800352e:	e7c9      	b.n	80034c4 <quorem+0x94>
 8003530:	6812      	ldr	r2, [r2, #0]
 8003532:	3b04      	subs	r3, #4
 8003534:	2a00      	cmp	r2, #0
 8003536:	d1f0      	bne.n	800351a <quorem+0xea>
 8003538:	3c01      	subs	r4, #1
 800353a:	e7eb      	b.n	8003514 <quorem+0xe4>
 800353c:	2000      	movs	r0, #0
 800353e:	e7ee      	b.n	800351e <quorem+0xee>

08003540 <_dtoa_r>:
 8003540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003544:	ed2d 8b04 	vpush	{d8-d9}
 8003548:	69c5      	ldr	r5, [r0, #28]
 800354a:	b093      	sub	sp, #76	; 0x4c
 800354c:	ed8d 0b02 	vstr	d0, [sp, #8]
 8003550:	ec57 6b10 	vmov	r6, r7, d0
 8003554:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8003558:	9107      	str	r1, [sp, #28]
 800355a:	4604      	mov	r4, r0
 800355c:	920a      	str	r2, [sp, #40]	; 0x28
 800355e:	930d      	str	r3, [sp, #52]	; 0x34
 8003560:	b975      	cbnz	r5, 8003580 <_dtoa_r+0x40>
 8003562:	2010      	movs	r0, #16
 8003564:	f000 fe2a 	bl	80041bc <malloc>
 8003568:	4602      	mov	r2, r0
 800356a:	61e0      	str	r0, [r4, #28]
 800356c:	b920      	cbnz	r0, 8003578 <_dtoa_r+0x38>
 800356e:	4bae      	ldr	r3, [pc, #696]	; (8003828 <_dtoa_r+0x2e8>)
 8003570:	21ef      	movs	r1, #239	; 0xef
 8003572:	48ae      	ldr	r0, [pc, #696]	; (800382c <_dtoa_r+0x2ec>)
 8003574:	f7ff ff3e 	bl	80033f4 <__assert_func>
 8003578:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800357c:	6005      	str	r5, [r0, #0]
 800357e:	60c5      	str	r5, [r0, #12]
 8003580:	69e3      	ldr	r3, [r4, #28]
 8003582:	6819      	ldr	r1, [r3, #0]
 8003584:	b151      	cbz	r1, 800359c <_dtoa_r+0x5c>
 8003586:	685a      	ldr	r2, [r3, #4]
 8003588:	604a      	str	r2, [r1, #4]
 800358a:	2301      	movs	r3, #1
 800358c:	4093      	lsls	r3, r2
 800358e:	608b      	str	r3, [r1, #8]
 8003590:	4620      	mov	r0, r4
 8003592:	f000 ff07 	bl	80043a4 <_Bfree>
 8003596:	69e3      	ldr	r3, [r4, #28]
 8003598:	2200      	movs	r2, #0
 800359a:	601a      	str	r2, [r3, #0]
 800359c:	1e3b      	subs	r3, r7, #0
 800359e:	bfbb      	ittet	lt
 80035a0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80035a4:	9303      	strlt	r3, [sp, #12]
 80035a6:	2300      	movge	r3, #0
 80035a8:	2201      	movlt	r2, #1
 80035aa:	bfac      	ite	ge
 80035ac:	f8c8 3000 	strge.w	r3, [r8]
 80035b0:	f8c8 2000 	strlt.w	r2, [r8]
 80035b4:	4b9e      	ldr	r3, [pc, #632]	; (8003830 <_dtoa_r+0x2f0>)
 80035b6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80035ba:	ea33 0308 	bics.w	r3, r3, r8
 80035be:	d11b      	bne.n	80035f8 <_dtoa_r+0xb8>
 80035c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80035c2:	f242 730f 	movw	r3, #9999	; 0x270f
 80035c6:	6013      	str	r3, [r2, #0]
 80035c8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80035cc:	4333      	orrs	r3, r6
 80035ce:	f000 8593 	beq.w	80040f8 <_dtoa_r+0xbb8>
 80035d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80035d4:	b963      	cbnz	r3, 80035f0 <_dtoa_r+0xb0>
 80035d6:	4b97      	ldr	r3, [pc, #604]	; (8003834 <_dtoa_r+0x2f4>)
 80035d8:	e027      	b.n	800362a <_dtoa_r+0xea>
 80035da:	4b97      	ldr	r3, [pc, #604]	; (8003838 <_dtoa_r+0x2f8>)
 80035dc:	9300      	str	r3, [sp, #0]
 80035de:	3308      	adds	r3, #8
 80035e0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80035e2:	6013      	str	r3, [r2, #0]
 80035e4:	9800      	ldr	r0, [sp, #0]
 80035e6:	b013      	add	sp, #76	; 0x4c
 80035e8:	ecbd 8b04 	vpop	{d8-d9}
 80035ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035f0:	4b90      	ldr	r3, [pc, #576]	; (8003834 <_dtoa_r+0x2f4>)
 80035f2:	9300      	str	r3, [sp, #0]
 80035f4:	3303      	adds	r3, #3
 80035f6:	e7f3      	b.n	80035e0 <_dtoa_r+0xa0>
 80035f8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80035fc:	2200      	movs	r2, #0
 80035fe:	ec51 0b17 	vmov	r0, r1, d7
 8003602:	eeb0 8a47 	vmov.f32	s16, s14
 8003606:	eef0 8a67 	vmov.f32	s17, s15
 800360a:	2300      	movs	r3, #0
 800360c:	f7fd fa64 	bl	8000ad8 <__aeabi_dcmpeq>
 8003610:	4681      	mov	r9, r0
 8003612:	b160      	cbz	r0, 800362e <_dtoa_r+0xee>
 8003614:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003616:	2301      	movs	r3, #1
 8003618:	6013      	str	r3, [r2, #0]
 800361a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800361c:	2b00      	cmp	r3, #0
 800361e:	f000 8568 	beq.w	80040f2 <_dtoa_r+0xbb2>
 8003622:	4b86      	ldr	r3, [pc, #536]	; (800383c <_dtoa_r+0x2fc>)
 8003624:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003626:	6013      	str	r3, [r2, #0]
 8003628:	3b01      	subs	r3, #1
 800362a:	9300      	str	r3, [sp, #0]
 800362c:	e7da      	b.n	80035e4 <_dtoa_r+0xa4>
 800362e:	aa10      	add	r2, sp, #64	; 0x40
 8003630:	a911      	add	r1, sp, #68	; 0x44
 8003632:	4620      	mov	r0, r4
 8003634:	eeb0 0a48 	vmov.f32	s0, s16
 8003638:	eef0 0a68 	vmov.f32	s1, s17
 800363c:	f001 fa4e 	bl	8004adc <__d2b>
 8003640:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8003644:	4682      	mov	sl, r0
 8003646:	2d00      	cmp	r5, #0
 8003648:	d07f      	beq.n	800374a <_dtoa_r+0x20a>
 800364a:	ee18 3a90 	vmov	r3, s17
 800364e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003652:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8003656:	ec51 0b18 	vmov	r0, r1, d8
 800365a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800365e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003662:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8003666:	4619      	mov	r1, r3
 8003668:	2200      	movs	r2, #0
 800366a:	4b75      	ldr	r3, [pc, #468]	; (8003840 <_dtoa_r+0x300>)
 800366c:	f7fc fe14 	bl	8000298 <__aeabi_dsub>
 8003670:	a367      	add	r3, pc, #412	; (adr r3, 8003810 <_dtoa_r+0x2d0>)
 8003672:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003676:	f7fc ffc7 	bl	8000608 <__aeabi_dmul>
 800367a:	a367      	add	r3, pc, #412	; (adr r3, 8003818 <_dtoa_r+0x2d8>)
 800367c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003680:	f7fc fe0c 	bl	800029c <__adddf3>
 8003684:	4606      	mov	r6, r0
 8003686:	4628      	mov	r0, r5
 8003688:	460f      	mov	r7, r1
 800368a:	f7fc ff53 	bl	8000534 <__aeabi_i2d>
 800368e:	a364      	add	r3, pc, #400	; (adr r3, 8003820 <_dtoa_r+0x2e0>)
 8003690:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003694:	f7fc ffb8 	bl	8000608 <__aeabi_dmul>
 8003698:	4602      	mov	r2, r0
 800369a:	460b      	mov	r3, r1
 800369c:	4630      	mov	r0, r6
 800369e:	4639      	mov	r1, r7
 80036a0:	f7fc fdfc 	bl	800029c <__adddf3>
 80036a4:	4606      	mov	r6, r0
 80036a6:	460f      	mov	r7, r1
 80036a8:	f7fd fa5e 	bl	8000b68 <__aeabi_d2iz>
 80036ac:	2200      	movs	r2, #0
 80036ae:	4683      	mov	fp, r0
 80036b0:	2300      	movs	r3, #0
 80036b2:	4630      	mov	r0, r6
 80036b4:	4639      	mov	r1, r7
 80036b6:	f7fd fa19 	bl	8000aec <__aeabi_dcmplt>
 80036ba:	b148      	cbz	r0, 80036d0 <_dtoa_r+0x190>
 80036bc:	4658      	mov	r0, fp
 80036be:	f7fc ff39 	bl	8000534 <__aeabi_i2d>
 80036c2:	4632      	mov	r2, r6
 80036c4:	463b      	mov	r3, r7
 80036c6:	f7fd fa07 	bl	8000ad8 <__aeabi_dcmpeq>
 80036ca:	b908      	cbnz	r0, 80036d0 <_dtoa_r+0x190>
 80036cc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80036d0:	f1bb 0f16 	cmp.w	fp, #22
 80036d4:	d857      	bhi.n	8003786 <_dtoa_r+0x246>
 80036d6:	4b5b      	ldr	r3, [pc, #364]	; (8003844 <_dtoa_r+0x304>)
 80036d8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80036dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036e0:	ec51 0b18 	vmov	r0, r1, d8
 80036e4:	f7fd fa02 	bl	8000aec <__aeabi_dcmplt>
 80036e8:	2800      	cmp	r0, #0
 80036ea:	d04e      	beq.n	800378a <_dtoa_r+0x24a>
 80036ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 80036f0:	2300      	movs	r3, #0
 80036f2:	930c      	str	r3, [sp, #48]	; 0x30
 80036f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80036f6:	1b5b      	subs	r3, r3, r5
 80036f8:	1e5a      	subs	r2, r3, #1
 80036fa:	bf45      	ittet	mi
 80036fc:	f1c3 0301 	rsbmi	r3, r3, #1
 8003700:	9305      	strmi	r3, [sp, #20]
 8003702:	2300      	movpl	r3, #0
 8003704:	2300      	movmi	r3, #0
 8003706:	9206      	str	r2, [sp, #24]
 8003708:	bf54      	ite	pl
 800370a:	9305      	strpl	r3, [sp, #20]
 800370c:	9306      	strmi	r3, [sp, #24]
 800370e:	f1bb 0f00 	cmp.w	fp, #0
 8003712:	db3c      	blt.n	800378e <_dtoa_r+0x24e>
 8003714:	9b06      	ldr	r3, [sp, #24]
 8003716:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800371a:	445b      	add	r3, fp
 800371c:	9306      	str	r3, [sp, #24]
 800371e:	2300      	movs	r3, #0
 8003720:	9308      	str	r3, [sp, #32]
 8003722:	9b07      	ldr	r3, [sp, #28]
 8003724:	2b09      	cmp	r3, #9
 8003726:	d868      	bhi.n	80037fa <_dtoa_r+0x2ba>
 8003728:	2b05      	cmp	r3, #5
 800372a:	bfc4      	itt	gt
 800372c:	3b04      	subgt	r3, #4
 800372e:	9307      	strgt	r3, [sp, #28]
 8003730:	9b07      	ldr	r3, [sp, #28]
 8003732:	f1a3 0302 	sub.w	r3, r3, #2
 8003736:	bfcc      	ite	gt
 8003738:	2500      	movgt	r5, #0
 800373a:	2501      	movle	r5, #1
 800373c:	2b03      	cmp	r3, #3
 800373e:	f200 8085 	bhi.w	800384c <_dtoa_r+0x30c>
 8003742:	e8df f003 	tbb	[pc, r3]
 8003746:	3b2e      	.short	0x3b2e
 8003748:	5839      	.short	0x5839
 800374a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800374e:	441d      	add	r5, r3
 8003750:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003754:	2b20      	cmp	r3, #32
 8003756:	bfc1      	itttt	gt
 8003758:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800375c:	fa08 f803 	lslgt.w	r8, r8, r3
 8003760:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8003764:	fa26 f303 	lsrgt.w	r3, r6, r3
 8003768:	bfd6      	itet	le
 800376a:	f1c3 0320 	rsble	r3, r3, #32
 800376e:	ea48 0003 	orrgt.w	r0, r8, r3
 8003772:	fa06 f003 	lslle.w	r0, r6, r3
 8003776:	f7fc fecd 	bl	8000514 <__aeabi_ui2d>
 800377a:	2201      	movs	r2, #1
 800377c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8003780:	3d01      	subs	r5, #1
 8003782:	920e      	str	r2, [sp, #56]	; 0x38
 8003784:	e76f      	b.n	8003666 <_dtoa_r+0x126>
 8003786:	2301      	movs	r3, #1
 8003788:	e7b3      	b.n	80036f2 <_dtoa_r+0x1b2>
 800378a:	900c      	str	r0, [sp, #48]	; 0x30
 800378c:	e7b2      	b.n	80036f4 <_dtoa_r+0x1b4>
 800378e:	9b05      	ldr	r3, [sp, #20]
 8003790:	eba3 030b 	sub.w	r3, r3, fp
 8003794:	9305      	str	r3, [sp, #20]
 8003796:	f1cb 0300 	rsb	r3, fp, #0
 800379a:	9308      	str	r3, [sp, #32]
 800379c:	2300      	movs	r3, #0
 800379e:	930b      	str	r3, [sp, #44]	; 0x2c
 80037a0:	e7bf      	b.n	8003722 <_dtoa_r+0x1e2>
 80037a2:	2300      	movs	r3, #0
 80037a4:	9309      	str	r3, [sp, #36]	; 0x24
 80037a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80037a8:	2b00      	cmp	r3, #0
 80037aa:	dc52      	bgt.n	8003852 <_dtoa_r+0x312>
 80037ac:	2301      	movs	r3, #1
 80037ae:	9301      	str	r3, [sp, #4]
 80037b0:	9304      	str	r3, [sp, #16]
 80037b2:	461a      	mov	r2, r3
 80037b4:	920a      	str	r2, [sp, #40]	; 0x28
 80037b6:	e00b      	b.n	80037d0 <_dtoa_r+0x290>
 80037b8:	2301      	movs	r3, #1
 80037ba:	e7f3      	b.n	80037a4 <_dtoa_r+0x264>
 80037bc:	2300      	movs	r3, #0
 80037be:	9309      	str	r3, [sp, #36]	; 0x24
 80037c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80037c2:	445b      	add	r3, fp
 80037c4:	9301      	str	r3, [sp, #4]
 80037c6:	3301      	adds	r3, #1
 80037c8:	2b01      	cmp	r3, #1
 80037ca:	9304      	str	r3, [sp, #16]
 80037cc:	bfb8      	it	lt
 80037ce:	2301      	movlt	r3, #1
 80037d0:	69e0      	ldr	r0, [r4, #28]
 80037d2:	2100      	movs	r1, #0
 80037d4:	2204      	movs	r2, #4
 80037d6:	f102 0614 	add.w	r6, r2, #20
 80037da:	429e      	cmp	r6, r3
 80037dc:	d93d      	bls.n	800385a <_dtoa_r+0x31a>
 80037de:	6041      	str	r1, [r0, #4]
 80037e0:	4620      	mov	r0, r4
 80037e2:	f000 fd9f 	bl	8004324 <_Balloc>
 80037e6:	9000      	str	r0, [sp, #0]
 80037e8:	2800      	cmp	r0, #0
 80037ea:	d139      	bne.n	8003860 <_dtoa_r+0x320>
 80037ec:	4b16      	ldr	r3, [pc, #88]	; (8003848 <_dtoa_r+0x308>)
 80037ee:	4602      	mov	r2, r0
 80037f0:	f240 11af 	movw	r1, #431	; 0x1af
 80037f4:	e6bd      	b.n	8003572 <_dtoa_r+0x32>
 80037f6:	2301      	movs	r3, #1
 80037f8:	e7e1      	b.n	80037be <_dtoa_r+0x27e>
 80037fa:	2501      	movs	r5, #1
 80037fc:	2300      	movs	r3, #0
 80037fe:	9307      	str	r3, [sp, #28]
 8003800:	9509      	str	r5, [sp, #36]	; 0x24
 8003802:	f04f 33ff 	mov.w	r3, #4294967295
 8003806:	9301      	str	r3, [sp, #4]
 8003808:	9304      	str	r3, [sp, #16]
 800380a:	2200      	movs	r2, #0
 800380c:	2312      	movs	r3, #18
 800380e:	e7d1      	b.n	80037b4 <_dtoa_r+0x274>
 8003810:	636f4361 	.word	0x636f4361
 8003814:	3fd287a7 	.word	0x3fd287a7
 8003818:	8b60c8b3 	.word	0x8b60c8b3
 800381c:	3fc68a28 	.word	0x3fc68a28
 8003820:	509f79fb 	.word	0x509f79fb
 8003824:	3fd34413 	.word	0x3fd34413
 8003828:	08006e02 	.word	0x08006e02
 800382c:	08006e19 	.word	0x08006e19
 8003830:	7ff00000 	.word	0x7ff00000
 8003834:	08006dfe 	.word	0x08006dfe
 8003838:	08006df5 	.word	0x08006df5
 800383c:	08006d91 	.word	0x08006d91
 8003840:	3ff80000 	.word	0x3ff80000
 8003844:	08006f08 	.word	0x08006f08
 8003848:	08006e71 	.word	0x08006e71
 800384c:	2301      	movs	r3, #1
 800384e:	9309      	str	r3, [sp, #36]	; 0x24
 8003850:	e7d7      	b.n	8003802 <_dtoa_r+0x2c2>
 8003852:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003854:	9301      	str	r3, [sp, #4]
 8003856:	9304      	str	r3, [sp, #16]
 8003858:	e7ba      	b.n	80037d0 <_dtoa_r+0x290>
 800385a:	3101      	adds	r1, #1
 800385c:	0052      	lsls	r2, r2, #1
 800385e:	e7ba      	b.n	80037d6 <_dtoa_r+0x296>
 8003860:	69e3      	ldr	r3, [r4, #28]
 8003862:	9a00      	ldr	r2, [sp, #0]
 8003864:	601a      	str	r2, [r3, #0]
 8003866:	9b04      	ldr	r3, [sp, #16]
 8003868:	2b0e      	cmp	r3, #14
 800386a:	f200 80a8 	bhi.w	80039be <_dtoa_r+0x47e>
 800386e:	2d00      	cmp	r5, #0
 8003870:	f000 80a5 	beq.w	80039be <_dtoa_r+0x47e>
 8003874:	f1bb 0f00 	cmp.w	fp, #0
 8003878:	dd38      	ble.n	80038ec <_dtoa_r+0x3ac>
 800387a:	4bc0      	ldr	r3, [pc, #768]	; (8003b7c <_dtoa_r+0x63c>)
 800387c:	f00b 020f 	and.w	r2, fp, #15
 8003880:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003884:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8003888:	e9d3 6700 	ldrd	r6, r7, [r3]
 800388c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8003890:	d019      	beq.n	80038c6 <_dtoa_r+0x386>
 8003892:	4bbb      	ldr	r3, [pc, #748]	; (8003b80 <_dtoa_r+0x640>)
 8003894:	ec51 0b18 	vmov	r0, r1, d8
 8003898:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800389c:	f7fc ffde 	bl	800085c <__aeabi_ddiv>
 80038a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80038a4:	f008 080f 	and.w	r8, r8, #15
 80038a8:	2503      	movs	r5, #3
 80038aa:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8003b80 <_dtoa_r+0x640>
 80038ae:	f1b8 0f00 	cmp.w	r8, #0
 80038b2:	d10a      	bne.n	80038ca <_dtoa_r+0x38a>
 80038b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80038b8:	4632      	mov	r2, r6
 80038ba:	463b      	mov	r3, r7
 80038bc:	f7fc ffce 	bl	800085c <__aeabi_ddiv>
 80038c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80038c4:	e02b      	b.n	800391e <_dtoa_r+0x3de>
 80038c6:	2502      	movs	r5, #2
 80038c8:	e7ef      	b.n	80038aa <_dtoa_r+0x36a>
 80038ca:	f018 0f01 	tst.w	r8, #1
 80038ce:	d008      	beq.n	80038e2 <_dtoa_r+0x3a2>
 80038d0:	4630      	mov	r0, r6
 80038d2:	4639      	mov	r1, r7
 80038d4:	e9d9 2300 	ldrd	r2, r3, [r9]
 80038d8:	f7fc fe96 	bl	8000608 <__aeabi_dmul>
 80038dc:	3501      	adds	r5, #1
 80038de:	4606      	mov	r6, r0
 80038e0:	460f      	mov	r7, r1
 80038e2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80038e6:	f109 0908 	add.w	r9, r9, #8
 80038ea:	e7e0      	b.n	80038ae <_dtoa_r+0x36e>
 80038ec:	f000 809f 	beq.w	8003a2e <_dtoa_r+0x4ee>
 80038f0:	f1cb 0600 	rsb	r6, fp, #0
 80038f4:	4ba1      	ldr	r3, [pc, #644]	; (8003b7c <_dtoa_r+0x63c>)
 80038f6:	4fa2      	ldr	r7, [pc, #648]	; (8003b80 <_dtoa_r+0x640>)
 80038f8:	f006 020f 	and.w	r2, r6, #15
 80038fc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003900:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003904:	ec51 0b18 	vmov	r0, r1, d8
 8003908:	f7fc fe7e 	bl	8000608 <__aeabi_dmul>
 800390c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003910:	1136      	asrs	r6, r6, #4
 8003912:	2300      	movs	r3, #0
 8003914:	2502      	movs	r5, #2
 8003916:	2e00      	cmp	r6, #0
 8003918:	d17e      	bne.n	8003a18 <_dtoa_r+0x4d8>
 800391a:	2b00      	cmp	r3, #0
 800391c:	d1d0      	bne.n	80038c0 <_dtoa_r+0x380>
 800391e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003920:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8003924:	2b00      	cmp	r3, #0
 8003926:	f000 8084 	beq.w	8003a32 <_dtoa_r+0x4f2>
 800392a:	4b96      	ldr	r3, [pc, #600]	; (8003b84 <_dtoa_r+0x644>)
 800392c:	2200      	movs	r2, #0
 800392e:	4640      	mov	r0, r8
 8003930:	4649      	mov	r1, r9
 8003932:	f7fd f8db 	bl	8000aec <__aeabi_dcmplt>
 8003936:	2800      	cmp	r0, #0
 8003938:	d07b      	beq.n	8003a32 <_dtoa_r+0x4f2>
 800393a:	9b04      	ldr	r3, [sp, #16]
 800393c:	2b00      	cmp	r3, #0
 800393e:	d078      	beq.n	8003a32 <_dtoa_r+0x4f2>
 8003940:	9b01      	ldr	r3, [sp, #4]
 8003942:	2b00      	cmp	r3, #0
 8003944:	dd39      	ble.n	80039ba <_dtoa_r+0x47a>
 8003946:	4b90      	ldr	r3, [pc, #576]	; (8003b88 <_dtoa_r+0x648>)
 8003948:	2200      	movs	r2, #0
 800394a:	4640      	mov	r0, r8
 800394c:	4649      	mov	r1, r9
 800394e:	f7fc fe5b 	bl	8000608 <__aeabi_dmul>
 8003952:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003956:	9e01      	ldr	r6, [sp, #4]
 8003958:	f10b 37ff 	add.w	r7, fp, #4294967295
 800395c:	3501      	adds	r5, #1
 800395e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8003962:	4628      	mov	r0, r5
 8003964:	f7fc fde6 	bl	8000534 <__aeabi_i2d>
 8003968:	4642      	mov	r2, r8
 800396a:	464b      	mov	r3, r9
 800396c:	f7fc fe4c 	bl	8000608 <__aeabi_dmul>
 8003970:	4b86      	ldr	r3, [pc, #536]	; (8003b8c <_dtoa_r+0x64c>)
 8003972:	2200      	movs	r2, #0
 8003974:	f7fc fc92 	bl	800029c <__adddf3>
 8003978:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800397c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003980:	9303      	str	r3, [sp, #12]
 8003982:	2e00      	cmp	r6, #0
 8003984:	d158      	bne.n	8003a38 <_dtoa_r+0x4f8>
 8003986:	4b82      	ldr	r3, [pc, #520]	; (8003b90 <_dtoa_r+0x650>)
 8003988:	2200      	movs	r2, #0
 800398a:	4640      	mov	r0, r8
 800398c:	4649      	mov	r1, r9
 800398e:	f7fc fc83 	bl	8000298 <__aeabi_dsub>
 8003992:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003996:	4680      	mov	r8, r0
 8003998:	4689      	mov	r9, r1
 800399a:	f7fd f8c5 	bl	8000b28 <__aeabi_dcmpgt>
 800399e:	2800      	cmp	r0, #0
 80039a0:	f040 8296 	bne.w	8003ed0 <_dtoa_r+0x990>
 80039a4:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80039a8:	4640      	mov	r0, r8
 80039aa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80039ae:	4649      	mov	r1, r9
 80039b0:	f7fd f89c 	bl	8000aec <__aeabi_dcmplt>
 80039b4:	2800      	cmp	r0, #0
 80039b6:	f040 8289 	bne.w	8003ecc <_dtoa_r+0x98c>
 80039ba:	ed8d 8b02 	vstr	d8, [sp, #8]
 80039be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	f2c0 814e 	blt.w	8003c62 <_dtoa_r+0x722>
 80039c6:	f1bb 0f0e 	cmp.w	fp, #14
 80039ca:	f300 814a 	bgt.w	8003c62 <_dtoa_r+0x722>
 80039ce:	4b6b      	ldr	r3, [pc, #428]	; (8003b7c <_dtoa_r+0x63c>)
 80039d0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80039d4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80039d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80039da:	2b00      	cmp	r3, #0
 80039dc:	f280 80dc 	bge.w	8003b98 <_dtoa_r+0x658>
 80039e0:	9b04      	ldr	r3, [sp, #16]
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	f300 80d8 	bgt.w	8003b98 <_dtoa_r+0x658>
 80039e8:	f040 826f 	bne.w	8003eca <_dtoa_r+0x98a>
 80039ec:	4b68      	ldr	r3, [pc, #416]	; (8003b90 <_dtoa_r+0x650>)
 80039ee:	2200      	movs	r2, #0
 80039f0:	4640      	mov	r0, r8
 80039f2:	4649      	mov	r1, r9
 80039f4:	f7fc fe08 	bl	8000608 <__aeabi_dmul>
 80039f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80039fc:	f7fd f88a 	bl	8000b14 <__aeabi_dcmpge>
 8003a00:	9e04      	ldr	r6, [sp, #16]
 8003a02:	4637      	mov	r7, r6
 8003a04:	2800      	cmp	r0, #0
 8003a06:	f040 8245 	bne.w	8003e94 <_dtoa_r+0x954>
 8003a0a:	9d00      	ldr	r5, [sp, #0]
 8003a0c:	2331      	movs	r3, #49	; 0x31
 8003a0e:	f805 3b01 	strb.w	r3, [r5], #1
 8003a12:	f10b 0b01 	add.w	fp, fp, #1
 8003a16:	e241      	b.n	8003e9c <_dtoa_r+0x95c>
 8003a18:	07f2      	lsls	r2, r6, #31
 8003a1a:	d505      	bpl.n	8003a28 <_dtoa_r+0x4e8>
 8003a1c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003a20:	f7fc fdf2 	bl	8000608 <__aeabi_dmul>
 8003a24:	3501      	adds	r5, #1
 8003a26:	2301      	movs	r3, #1
 8003a28:	1076      	asrs	r6, r6, #1
 8003a2a:	3708      	adds	r7, #8
 8003a2c:	e773      	b.n	8003916 <_dtoa_r+0x3d6>
 8003a2e:	2502      	movs	r5, #2
 8003a30:	e775      	b.n	800391e <_dtoa_r+0x3de>
 8003a32:	9e04      	ldr	r6, [sp, #16]
 8003a34:	465f      	mov	r7, fp
 8003a36:	e792      	b.n	800395e <_dtoa_r+0x41e>
 8003a38:	9900      	ldr	r1, [sp, #0]
 8003a3a:	4b50      	ldr	r3, [pc, #320]	; (8003b7c <_dtoa_r+0x63c>)
 8003a3c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8003a40:	4431      	add	r1, r6
 8003a42:	9102      	str	r1, [sp, #8]
 8003a44:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003a46:	eeb0 9a47 	vmov.f32	s18, s14
 8003a4a:	eef0 9a67 	vmov.f32	s19, s15
 8003a4e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003a52:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003a56:	2900      	cmp	r1, #0
 8003a58:	d044      	beq.n	8003ae4 <_dtoa_r+0x5a4>
 8003a5a:	494e      	ldr	r1, [pc, #312]	; (8003b94 <_dtoa_r+0x654>)
 8003a5c:	2000      	movs	r0, #0
 8003a5e:	f7fc fefd 	bl	800085c <__aeabi_ddiv>
 8003a62:	ec53 2b19 	vmov	r2, r3, d9
 8003a66:	f7fc fc17 	bl	8000298 <__aeabi_dsub>
 8003a6a:	9d00      	ldr	r5, [sp, #0]
 8003a6c:	ec41 0b19 	vmov	d9, r0, r1
 8003a70:	4649      	mov	r1, r9
 8003a72:	4640      	mov	r0, r8
 8003a74:	f7fd f878 	bl	8000b68 <__aeabi_d2iz>
 8003a78:	4606      	mov	r6, r0
 8003a7a:	f7fc fd5b 	bl	8000534 <__aeabi_i2d>
 8003a7e:	4602      	mov	r2, r0
 8003a80:	460b      	mov	r3, r1
 8003a82:	4640      	mov	r0, r8
 8003a84:	4649      	mov	r1, r9
 8003a86:	f7fc fc07 	bl	8000298 <__aeabi_dsub>
 8003a8a:	3630      	adds	r6, #48	; 0x30
 8003a8c:	f805 6b01 	strb.w	r6, [r5], #1
 8003a90:	ec53 2b19 	vmov	r2, r3, d9
 8003a94:	4680      	mov	r8, r0
 8003a96:	4689      	mov	r9, r1
 8003a98:	f7fd f828 	bl	8000aec <__aeabi_dcmplt>
 8003a9c:	2800      	cmp	r0, #0
 8003a9e:	d164      	bne.n	8003b6a <_dtoa_r+0x62a>
 8003aa0:	4642      	mov	r2, r8
 8003aa2:	464b      	mov	r3, r9
 8003aa4:	4937      	ldr	r1, [pc, #220]	; (8003b84 <_dtoa_r+0x644>)
 8003aa6:	2000      	movs	r0, #0
 8003aa8:	f7fc fbf6 	bl	8000298 <__aeabi_dsub>
 8003aac:	ec53 2b19 	vmov	r2, r3, d9
 8003ab0:	f7fd f81c 	bl	8000aec <__aeabi_dcmplt>
 8003ab4:	2800      	cmp	r0, #0
 8003ab6:	f040 80b6 	bne.w	8003c26 <_dtoa_r+0x6e6>
 8003aba:	9b02      	ldr	r3, [sp, #8]
 8003abc:	429d      	cmp	r5, r3
 8003abe:	f43f af7c 	beq.w	80039ba <_dtoa_r+0x47a>
 8003ac2:	4b31      	ldr	r3, [pc, #196]	; (8003b88 <_dtoa_r+0x648>)
 8003ac4:	ec51 0b19 	vmov	r0, r1, d9
 8003ac8:	2200      	movs	r2, #0
 8003aca:	f7fc fd9d 	bl	8000608 <__aeabi_dmul>
 8003ace:	4b2e      	ldr	r3, [pc, #184]	; (8003b88 <_dtoa_r+0x648>)
 8003ad0:	ec41 0b19 	vmov	d9, r0, r1
 8003ad4:	2200      	movs	r2, #0
 8003ad6:	4640      	mov	r0, r8
 8003ad8:	4649      	mov	r1, r9
 8003ada:	f7fc fd95 	bl	8000608 <__aeabi_dmul>
 8003ade:	4680      	mov	r8, r0
 8003ae0:	4689      	mov	r9, r1
 8003ae2:	e7c5      	b.n	8003a70 <_dtoa_r+0x530>
 8003ae4:	ec51 0b17 	vmov	r0, r1, d7
 8003ae8:	f7fc fd8e 	bl	8000608 <__aeabi_dmul>
 8003aec:	9b02      	ldr	r3, [sp, #8]
 8003aee:	9d00      	ldr	r5, [sp, #0]
 8003af0:	930f      	str	r3, [sp, #60]	; 0x3c
 8003af2:	ec41 0b19 	vmov	d9, r0, r1
 8003af6:	4649      	mov	r1, r9
 8003af8:	4640      	mov	r0, r8
 8003afa:	f7fd f835 	bl	8000b68 <__aeabi_d2iz>
 8003afe:	4606      	mov	r6, r0
 8003b00:	f7fc fd18 	bl	8000534 <__aeabi_i2d>
 8003b04:	3630      	adds	r6, #48	; 0x30
 8003b06:	4602      	mov	r2, r0
 8003b08:	460b      	mov	r3, r1
 8003b0a:	4640      	mov	r0, r8
 8003b0c:	4649      	mov	r1, r9
 8003b0e:	f7fc fbc3 	bl	8000298 <__aeabi_dsub>
 8003b12:	f805 6b01 	strb.w	r6, [r5], #1
 8003b16:	9b02      	ldr	r3, [sp, #8]
 8003b18:	429d      	cmp	r5, r3
 8003b1a:	4680      	mov	r8, r0
 8003b1c:	4689      	mov	r9, r1
 8003b1e:	f04f 0200 	mov.w	r2, #0
 8003b22:	d124      	bne.n	8003b6e <_dtoa_r+0x62e>
 8003b24:	4b1b      	ldr	r3, [pc, #108]	; (8003b94 <_dtoa_r+0x654>)
 8003b26:	ec51 0b19 	vmov	r0, r1, d9
 8003b2a:	f7fc fbb7 	bl	800029c <__adddf3>
 8003b2e:	4602      	mov	r2, r0
 8003b30:	460b      	mov	r3, r1
 8003b32:	4640      	mov	r0, r8
 8003b34:	4649      	mov	r1, r9
 8003b36:	f7fc fff7 	bl	8000b28 <__aeabi_dcmpgt>
 8003b3a:	2800      	cmp	r0, #0
 8003b3c:	d173      	bne.n	8003c26 <_dtoa_r+0x6e6>
 8003b3e:	ec53 2b19 	vmov	r2, r3, d9
 8003b42:	4914      	ldr	r1, [pc, #80]	; (8003b94 <_dtoa_r+0x654>)
 8003b44:	2000      	movs	r0, #0
 8003b46:	f7fc fba7 	bl	8000298 <__aeabi_dsub>
 8003b4a:	4602      	mov	r2, r0
 8003b4c:	460b      	mov	r3, r1
 8003b4e:	4640      	mov	r0, r8
 8003b50:	4649      	mov	r1, r9
 8003b52:	f7fc ffcb 	bl	8000aec <__aeabi_dcmplt>
 8003b56:	2800      	cmp	r0, #0
 8003b58:	f43f af2f 	beq.w	80039ba <_dtoa_r+0x47a>
 8003b5c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8003b5e:	1e6b      	subs	r3, r5, #1
 8003b60:	930f      	str	r3, [sp, #60]	; 0x3c
 8003b62:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003b66:	2b30      	cmp	r3, #48	; 0x30
 8003b68:	d0f8      	beq.n	8003b5c <_dtoa_r+0x61c>
 8003b6a:	46bb      	mov	fp, r7
 8003b6c:	e04a      	b.n	8003c04 <_dtoa_r+0x6c4>
 8003b6e:	4b06      	ldr	r3, [pc, #24]	; (8003b88 <_dtoa_r+0x648>)
 8003b70:	f7fc fd4a 	bl	8000608 <__aeabi_dmul>
 8003b74:	4680      	mov	r8, r0
 8003b76:	4689      	mov	r9, r1
 8003b78:	e7bd      	b.n	8003af6 <_dtoa_r+0x5b6>
 8003b7a:	bf00      	nop
 8003b7c:	08006f08 	.word	0x08006f08
 8003b80:	08006ee0 	.word	0x08006ee0
 8003b84:	3ff00000 	.word	0x3ff00000
 8003b88:	40240000 	.word	0x40240000
 8003b8c:	401c0000 	.word	0x401c0000
 8003b90:	40140000 	.word	0x40140000
 8003b94:	3fe00000 	.word	0x3fe00000
 8003b98:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003b9c:	9d00      	ldr	r5, [sp, #0]
 8003b9e:	4642      	mov	r2, r8
 8003ba0:	464b      	mov	r3, r9
 8003ba2:	4630      	mov	r0, r6
 8003ba4:	4639      	mov	r1, r7
 8003ba6:	f7fc fe59 	bl	800085c <__aeabi_ddiv>
 8003baa:	f7fc ffdd 	bl	8000b68 <__aeabi_d2iz>
 8003bae:	9001      	str	r0, [sp, #4]
 8003bb0:	f7fc fcc0 	bl	8000534 <__aeabi_i2d>
 8003bb4:	4642      	mov	r2, r8
 8003bb6:	464b      	mov	r3, r9
 8003bb8:	f7fc fd26 	bl	8000608 <__aeabi_dmul>
 8003bbc:	4602      	mov	r2, r0
 8003bbe:	460b      	mov	r3, r1
 8003bc0:	4630      	mov	r0, r6
 8003bc2:	4639      	mov	r1, r7
 8003bc4:	f7fc fb68 	bl	8000298 <__aeabi_dsub>
 8003bc8:	9e01      	ldr	r6, [sp, #4]
 8003bca:	9f04      	ldr	r7, [sp, #16]
 8003bcc:	3630      	adds	r6, #48	; 0x30
 8003bce:	f805 6b01 	strb.w	r6, [r5], #1
 8003bd2:	9e00      	ldr	r6, [sp, #0]
 8003bd4:	1bae      	subs	r6, r5, r6
 8003bd6:	42b7      	cmp	r7, r6
 8003bd8:	4602      	mov	r2, r0
 8003bda:	460b      	mov	r3, r1
 8003bdc:	d134      	bne.n	8003c48 <_dtoa_r+0x708>
 8003bde:	f7fc fb5d 	bl	800029c <__adddf3>
 8003be2:	4642      	mov	r2, r8
 8003be4:	464b      	mov	r3, r9
 8003be6:	4606      	mov	r6, r0
 8003be8:	460f      	mov	r7, r1
 8003bea:	f7fc ff9d 	bl	8000b28 <__aeabi_dcmpgt>
 8003bee:	b9c8      	cbnz	r0, 8003c24 <_dtoa_r+0x6e4>
 8003bf0:	4642      	mov	r2, r8
 8003bf2:	464b      	mov	r3, r9
 8003bf4:	4630      	mov	r0, r6
 8003bf6:	4639      	mov	r1, r7
 8003bf8:	f7fc ff6e 	bl	8000ad8 <__aeabi_dcmpeq>
 8003bfc:	b110      	cbz	r0, 8003c04 <_dtoa_r+0x6c4>
 8003bfe:	9b01      	ldr	r3, [sp, #4]
 8003c00:	07db      	lsls	r3, r3, #31
 8003c02:	d40f      	bmi.n	8003c24 <_dtoa_r+0x6e4>
 8003c04:	4651      	mov	r1, sl
 8003c06:	4620      	mov	r0, r4
 8003c08:	f000 fbcc 	bl	80043a4 <_Bfree>
 8003c0c:	2300      	movs	r3, #0
 8003c0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003c10:	702b      	strb	r3, [r5, #0]
 8003c12:	f10b 0301 	add.w	r3, fp, #1
 8003c16:	6013      	str	r3, [r2, #0]
 8003c18:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003c1a:	2b00      	cmp	r3, #0
 8003c1c:	f43f ace2 	beq.w	80035e4 <_dtoa_r+0xa4>
 8003c20:	601d      	str	r5, [r3, #0]
 8003c22:	e4df      	b.n	80035e4 <_dtoa_r+0xa4>
 8003c24:	465f      	mov	r7, fp
 8003c26:	462b      	mov	r3, r5
 8003c28:	461d      	mov	r5, r3
 8003c2a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003c2e:	2a39      	cmp	r2, #57	; 0x39
 8003c30:	d106      	bne.n	8003c40 <_dtoa_r+0x700>
 8003c32:	9a00      	ldr	r2, [sp, #0]
 8003c34:	429a      	cmp	r2, r3
 8003c36:	d1f7      	bne.n	8003c28 <_dtoa_r+0x6e8>
 8003c38:	9900      	ldr	r1, [sp, #0]
 8003c3a:	2230      	movs	r2, #48	; 0x30
 8003c3c:	3701      	adds	r7, #1
 8003c3e:	700a      	strb	r2, [r1, #0]
 8003c40:	781a      	ldrb	r2, [r3, #0]
 8003c42:	3201      	adds	r2, #1
 8003c44:	701a      	strb	r2, [r3, #0]
 8003c46:	e790      	b.n	8003b6a <_dtoa_r+0x62a>
 8003c48:	4ba3      	ldr	r3, [pc, #652]	; (8003ed8 <_dtoa_r+0x998>)
 8003c4a:	2200      	movs	r2, #0
 8003c4c:	f7fc fcdc 	bl	8000608 <__aeabi_dmul>
 8003c50:	2200      	movs	r2, #0
 8003c52:	2300      	movs	r3, #0
 8003c54:	4606      	mov	r6, r0
 8003c56:	460f      	mov	r7, r1
 8003c58:	f7fc ff3e 	bl	8000ad8 <__aeabi_dcmpeq>
 8003c5c:	2800      	cmp	r0, #0
 8003c5e:	d09e      	beq.n	8003b9e <_dtoa_r+0x65e>
 8003c60:	e7d0      	b.n	8003c04 <_dtoa_r+0x6c4>
 8003c62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003c64:	2a00      	cmp	r2, #0
 8003c66:	f000 80ca 	beq.w	8003dfe <_dtoa_r+0x8be>
 8003c6a:	9a07      	ldr	r2, [sp, #28]
 8003c6c:	2a01      	cmp	r2, #1
 8003c6e:	f300 80ad 	bgt.w	8003dcc <_dtoa_r+0x88c>
 8003c72:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003c74:	2a00      	cmp	r2, #0
 8003c76:	f000 80a5 	beq.w	8003dc4 <_dtoa_r+0x884>
 8003c7a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003c7e:	9e08      	ldr	r6, [sp, #32]
 8003c80:	9d05      	ldr	r5, [sp, #20]
 8003c82:	9a05      	ldr	r2, [sp, #20]
 8003c84:	441a      	add	r2, r3
 8003c86:	9205      	str	r2, [sp, #20]
 8003c88:	9a06      	ldr	r2, [sp, #24]
 8003c8a:	2101      	movs	r1, #1
 8003c8c:	441a      	add	r2, r3
 8003c8e:	4620      	mov	r0, r4
 8003c90:	9206      	str	r2, [sp, #24]
 8003c92:	f000 fc87 	bl	80045a4 <__i2b>
 8003c96:	4607      	mov	r7, r0
 8003c98:	b165      	cbz	r5, 8003cb4 <_dtoa_r+0x774>
 8003c9a:	9b06      	ldr	r3, [sp, #24]
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	dd09      	ble.n	8003cb4 <_dtoa_r+0x774>
 8003ca0:	42ab      	cmp	r3, r5
 8003ca2:	9a05      	ldr	r2, [sp, #20]
 8003ca4:	bfa8      	it	ge
 8003ca6:	462b      	movge	r3, r5
 8003ca8:	1ad2      	subs	r2, r2, r3
 8003caa:	9205      	str	r2, [sp, #20]
 8003cac:	9a06      	ldr	r2, [sp, #24]
 8003cae:	1aed      	subs	r5, r5, r3
 8003cb0:	1ad3      	subs	r3, r2, r3
 8003cb2:	9306      	str	r3, [sp, #24]
 8003cb4:	9b08      	ldr	r3, [sp, #32]
 8003cb6:	b1f3      	cbz	r3, 8003cf6 <_dtoa_r+0x7b6>
 8003cb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cba:	2b00      	cmp	r3, #0
 8003cbc:	f000 80a3 	beq.w	8003e06 <_dtoa_r+0x8c6>
 8003cc0:	2e00      	cmp	r6, #0
 8003cc2:	dd10      	ble.n	8003ce6 <_dtoa_r+0x7a6>
 8003cc4:	4639      	mov	r1, r7
 8003cc6:	4632      	mov	r2, r6
 8003cc8:	4620      	mov	r0, r4
 8003cca:	f000 fd2b 	bl	8004724 <__pow5mult>
 8003cce:	4652      	mov	r2, sl
 8003cd0:	4601      	mov	r1, r0
 8003cd2:	4607      	mov	r7, r0
 8003cd4:	4620      	mov	r0, r4
 8003cd6:	f000 fc7b 	bl	80045d0 <__multiply>
 8003cda:	4651      	mov	r1, sl
 8003cdc:	4680      	mov	r8, r0
 8003cde:	4620      	mov	r0, r4
 8003ce0:	f000 fb60 	bl	80043a4 <_Bfree>
 8003ce4:	46c2      	mov	sl, r8
 8003ce6:	9b08      	ldr	r3, [sp, #32]
 8003ce8:	1b9a      	subs	r2, r3, r6
 8003cea:	d004      	beq.n	8003cf6 <_dtoa_r+0x7b6>
 8003cec:	4651      	mov	r1, sl
 8003cee:	4620      	mov	r0, r4
 8003cf0:	f000 fd18 	bl	8004724 <__pow5mult>
 8003cf4:	4682      	mov	sl, r0
 8003cf6:	2101      	movs	r1, #1
 8003cf8:	4620      	mov	r0, r4
 8003cfa:	f000 fc53 	bl	80045a4 <__i2b>
 8003cfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	4606      	mov	r6, r0
 8003d04:	f340 8081 	ble.w	8003e0a <_dtoa_r+0x8ca>
 8003d08:	461a      	mov	r2, r3
 8003d0a:	4601      	mov	r1, r0
 8003d0c:	4620      	mov	r0, r4
 8003d0e:	f000 fd09 	bl	8004724 <__pow5mult>
 8003d12:	9b07      	ldr	r3, [sp, #28]
 8003d14:	2b01      	cmp	r3, #1
 8003d16:	4606      	mov	r6, r0
 8003d18:	dd7a      	ble.n	8003e10 <_dtoa_r+0x8d0>
 8003d1a:	f04f 0800 	mov.w	r8, #0
 8003d1e:	6933      	ldr	r3, [r6, #16]
 8003d20:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8003d24:	6918      	ldr	r0, [r3, #16]
 8003d26:	f000 fbef 	bl	8004508 <__hi0bits>
 8003d2a:	f1c0 0020 	rsb	r0, r0, #32
 8003d2e:	9b06      	ldr	r3, [sp, #24]
 8003d30:	4418      	add	r0, r3
 8003d32:	f010 001f 	ands.w	r0, r0, #31
 8003d36:	f000 8094 	beq.w	8003e62 <_dtoa_r+0x922>
 8003d3a:	f1c0 0320 	rsb	r3, r0, #32
 8003d3e:	2b04      	cmp	r3, #4
 8003d40:	f340 8085 	ble.w	8003e4e <_dtoa_r+0x90e>
 8003d44:	9b05      	ldr	r3, [sp, #20]
 8003d46:	f1c0 001c 	rsb	r0, r0, #28
 8003d4a:	4403      	add	r3, r0
 8003d4c:	9305      	str	r3, [sp, #20]
 8003d4e:	9b06      	ldr	r3, [sp, #24]
 8003d50:	4403      	add	r3, r0
 8003d52:	4405      	add	r5, r0
 8003d54:	9306      	str	r3, [sp, #24]
 8003d56:	9b05      	ldr	r3, [sp, #20]
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	dd05      	ble.n	8003d68 <_dtoa_r+0x828>
 8003d5c:	4651      	mov	r1, sl
 8003d5e:	461a      	mov	r2, r3
 8003d60:	4620      	mov	r0, r4
 8003d62:	f000 fd39 	bl	80047d8 <__lshift>
 8003d66:	4682      	mov	sl, r0
 8003d68:	9b06      	ldr	r3, [sp, #24]
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	dd05      	ble.n	8003d7a <_dtoa_r+0x83a>
 8003d6e:	4631      	mov	r1, r6
 8003d70:	461a      	mov	r2, r3
 8003d72:	4620      	mov	r0, r4
 8003d74:	f000 fd30 	bl	80047d8 <__lshift>
 8003d78:	4606      	mov	r6, r0
 8003d7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	d072      	beq.n	8003e66 <_dtoa_r+0x926>
 8003d80:	4631      	mov	r1, r6
 8003d82:	4650      	mov	r0, sl
 8003d84:	f000 fd94 	bl	80048b0 <__mcmp>
 8003d88:	2800      	cmp	r0, #0
 8003d8a:	da6c      	bge.n	8003e66 <_dtoa_r+0x926>
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	4651      	mov	r1, sl
 8003d90:	220a      	movs	r2, #10
 8003d92:	4620      	mov	r0, r4
 8003d94:	f000 fb28 	bl	80043e8 <__multadd>
 8003d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003d9e:	4682      	mov	sl, r0
 8003da0:	2b00      	cmp	r3, #0
 8003da2:	f000 81b0 	beq.w	8004106 <_dtoa_r+0xbc6>
 8003da6:	2300      	movs	r3, #0
 8003da8:	4639      	mov	r1, r7
 8003daa:	220a      	movs	r2, #10
 8003dac:	4620      	mov	r0, r4
 8003dae:	f000 fb1b 	bl	80043e8 <__multadd>
 8003db2:	9b01      	ldr	r3, [sp, #4]
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	4607      	mov	r7, r0
 8003db8:	f300 8096 	bgt.w	8003ee8 <_dtoa_r+0x9a8>
 8003dbc:	9b07      	ldr	r3, [sp, #28]
 8003dbe:	2b02      	cmp	r3, #2
 8003dc0:	dc59      	bgt.n	8003e76 <_dtoa_r+0x936>
 8003dc2:	e091      	b.n	8003ee8 <_dtoa_r+0x9a8>
 8003dc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003dc6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003dca:	e758      	b.n	8003c7e <_dtoa_r+0x73e>
 8003dcc:	9b04      	ldr	r3, [sp, #16]
 8003dce:	1e5e      	subs	r6, r3, #1
 8003dd0:	9b08      	ldr	r3, [sp, #32]
 8003dd2:	42b3      	cmp	r3, r6
 8003dd4:	bfbf      	itttt	lt
 8003dd6:	9b08      	ldrlt	r3, [sp, #32]
 8003dd8:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8003dda:	9608      	strlt	r6, [sp, #32]
 8003ddc:	1af3      	sublt	r3, r6, r3
 8003dde:	bfb4      	ite	lt
 8003de0:	18d2      	addlt	r2, r2, r3
 8003de2:	1b9e      	subge	r6, r3, r6
 8003de4:	9b04      	ldr	r3, [sp, #16]
 8003de6:	bfbc      	itt	lt
 8003de8:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8003dea:	2600      	movlt	r6, #0
 8003dec:	2b00      	cmp	r3, #0
 8003dee:	bfb7      	itett	lt
 8003df0:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8003df4:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8003df8:	1a9d      	sublt	r5, r3, r2
 8003dfa:	2300      	movlt	r3, #0
 8003dfc:	e741      	b.n	8003c82 <_dtoa_r+0x742>
 8003dfe:	9e08      	ldr	r6, [sp, #32]
 8003e00:	9d05      	ldr	r5, [sp, #20]
 8003e02:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8003e04:	e748      	b.n	8003c98 <_dtoa_r+0x758>
 8003e06:	9a08      	ldr	r2, [sp, #32]
 8003e08:	e770      	b.n	8003cec <_dtoa_r+0x7ac>
 8003e0a:	9b07      	ldr	r3, [sp, #28]
 8003e0c:	2b01      	cmp	r3, #1
 8003e0e:	dc19      	bgt.n	8003e44 <_dtoa_r+0x904>
 8003e10:	9b02      	ldr	r3, [sp, #8]
 8003e12:	b9bb      	cbnz	r3, 8003e44 <_dtoa_r+0x904>
 8003e14:	9b03      	ldr	r3, [sp, #12]
 8003e16:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003e1a:	b99b      	cbnz	r3, 8003e44 <_dtoa_r+0x904>
 8003e1c:	9b03      	ldr	r3, [sp, #12]
 8003e1e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003e22:	0d1b      	lsrs	r3, r3, #20
 8003e24:	051b      	lsls	r3, r3, #20
 8003e26:	b183      	cbz	r3, 8003e4a <_dtoa_r+0x90a>
 8003e28:	9b05      	ldr	r3, [sp, #20]
 8003e2a:	3301      	adds	r3, #1
 8003e2c:	9305      	str	r3, [sp, #20]
 8003e2e:	9b06      	ldr	r3, [sp, #24]
 8003e30:	3301      	adds	r3, #1
 8003e32:	9306      	str	r3, [sp, #24]
 8003e34:	f04f 0801 	mov.w	r8, #1
 8003e38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003e3a:	2b00      	cmp	r3, #0
 8003e3c:	f47f af6f 	bne.w	8003d1e <_dtoa_r+0x7de>
 8003e40:	2001      	movs	r0, #1
 8003e42:	e774      	b.n	8003d2e <_dtoa_r+0x7ee>
 8003e44:	f04f 0800 	mov.w	r8, #0
 8003e48:	e7f6      	b.n	8003e38 <_dtoa_r+0x8f8>
 8003e4a:	4698      	mov	r8, r3
 8003e4c:	e7f4      	b.n	8003e38 <_dtoa_r+0x8f8>
 8003e4e:	d082      	beq.n	8003d56 <_dtoa_r+0x816>
 8003e50:	9a05      	ldr	r2, [sp, #20]
 8003e52:	331c      	adds	r3, #28
 8003e54:	441a      	add	r2, r3
 8003e56:	9205      	str	r2, [sp, #20]
 8003e58:	9a06      	ldr	r2, [sp, #24]
 8003e5a:	441a      	add	r2, r3
 8003e5c:	441d      	add	r5, r3
 8003e5e:	9206      	str	r2, [sp, #24]
 8003e60:	e779      	b.n	8003d56 <_dtoa_r+0x816>
 8003e62:	4603      	mov	r3, r0
 8003e64:	e7f4      	b.n	8003e50 <_dtoa_r+0x910>
 8003e66:	9b04      	ldr	r3, [sp, #16]
 8003e68:	2b00      	cmp	r3, #0
 8003e6a:	dc37      	bgt.n	8003edc <_dtoa_r+0x99c>
 8003e6c:	9b07      	ldr	r3, [sp, #28]
 8003e6e:	2b02      	cmp	r3, #2
 8003e70:	dd34      	ble.n	8003edc <_dtoa_r+0x99c>
 8003e72:	9b04      	ldr	r3, [sp, #16]
 8003e74:	9301      	str	r3, [sp, #4]
 8003e76:	9b01      	ldr	r3, [sp, #4]
 8003e78:	b963      	cbnz	r3, 8003e94 <_dtoa_r+0x954>
 8003e7a:	4631      	mov	r1, r6
 8003e7c:	2205      	movs	r2, #5
 8003e7e:	4620      	mov	r0, r4
 8003e80:	f000 fab2 	bl	80043e8 <__multadd>
 8003e84:	4601      	mov	r1, r0
 8003e86:	4606      	mov	r6, r0
 8003e88:	4650      	mov	r0, sl
 8003e8a:	f000 fd11 	bl	80048b0 <__mcmp>
 8003e8e:	2800      	cmp	r0, #0
 8003e90:	f73f adbb 	bgt.w	8003a0a <_dtoa_r+0x4ca>
 8003e94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003e96:	9d00      	ldr	r5, [sp, #0]
 8003e98:	ea6f 0b03 	mvn.w	fp, r3
 8003e9c:	f04f 0800 	mov.w	r8, #0
 8003ea0:	4631      	mov	r1, r6
 8003ea2:	4620      	mov	r0, r4
 8003ea4:	f000 fa7e 	bl	80043a4 <_Bfree>
 8003ea8:	2f00      	cmp	r7, #0
 8003eaa:	f43f aeab 	beq.w	8003c04 <_dtoa_r+0x6c4>
 8003eae:	f1b8 0f00 	cmp.w	r8, #0
 8003eb2:	d005      	beq.n	8003ec0 <_dtoa_r+0x980>
 8003eb4:	45b8      	cmp	r8, r7
 8003eb6:	d003      	beq.n	8003ec0 <_dtoa_r+0x980>
 8003eb8:	4641      	mov	r1, r8
 8003eba:	4620      	mov	r0, r4
 8003ebc:	f000 fa72 	bl	80043a4 <_Bfree>
 8003ec0:	4639      	mov	r1, r7
 8003ec2:	4620      	mov	r0, r4
 8003ec4:	f000 fa6e 	bl	80043a4 <_Bfree>
 8003ec8:	e69c      	b.n	8003c04 <_dtoa_r+0x6c4>
 8003eca:	2600      	movs	r6, #0
 8003ecc:	4637      	mov	r7, r6
 8003ece:	e7e1      	b.n	8003e94 <_dtoa_r+0x954>
 8003ed0:	46bb      	mov	fp, r7
 8003ed2:	4637      	mov	r7, r6
 8003ed4:	e599      	b.n	8003a0a <_dtoa_r+0x4ca>
 8003ed6:	bf00      	nop
 8003ed8:	40240000 	.word	0x40240000
 8003edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	f000 80c8 	beq.w	8004074 <_dtoa_r+0xb34>
 8003ee4:	9b04      	ldr	r3, [sp, #16]
 8003ee6:	9301      	str	r3, [sp, #4]
 8003ee8:	2d00      	cmp	r5, #0
 8003eea:	dd05      	ble.n	8003ef8 <_dtoa_r+0x9b8>
 8003eec:	4639      	mov	r1, r7
 8003eee:	462a      	mov	r2, r5
 8003ef0:	4620      	mov	r0, r4
 8003ef2:	f000 fc71 	bl	80047d8 <__lshift>
 8003ef6:	4607      	mov	r7, r0
 8003ef8:	f1b8 0f00 	cmp.w	r8, #0
 8003efc:	d05b      	beq.n	8003fb6 <_dtoa_r+0xa76>
 8003efe:	6879      	ldr	r1, [r7, #4]
 8003f00:	4620      	mov	r0, r4
 8003f02:	f000 fa0f 	bl	8004324 <_Balloc>
 8003f06:	4605      	mov	r5, r0
 8003f08:	b928      	cbnz	r0, 8003f16 <_dtoa_r+0x9d6>
 8003f0a:	4b83      	ldr	r3, [pc, #524]	; (8004118 <_dtoa_r+0xbd8>)
 8003f0c:	4602      	mov	r2, r0
 8003f0e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8003f12:	f7ff bb2e 	b.w	8003572 <_dtoa_r+0x32>
 8003f16:	693a      	ldr	r2, [r7, #16]
 8003f18:	3202      	adds	r2, #2
 8003f1a:	0092      	lsls	r2, r2, #2
 8003f1c:	f107 010c 	add.w	r1, r7, #12
 8003f20:	300c      	adds	r0, #12
 8003f22:	f002 f971 	bl	8006208 <memcpy>
 8003f26:	2201      	movs	r2, #1
 8003f28:	4629      	mov	r1, r5
 8003f2a:	4620      	mov	r0, r4
 8003f2c:	f000 fc54 	bl	80047d8 <__lshift>
 8003f30:	9b00      	ldr	r3, [sp, #0]
 8003f32:	3301      	adds	r3, #1
 8003f34:	9304      	str	r3, [sp, #16]
 8003f36:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003f3a:	4413      	add	r3, r2
 8003f3c:	9308      	str	r3, [sp, #32]
 8003f3e:	9b02      	ldr	r3, [sp, #8]
 8003f40:	f003 0301 	and.w	r3, r3, #1
 8003f44:	46b8      	mov	r8, r7
 8003f46:	9306      	str	r3, [sp, #24]
 8003f48:	4607      	mov	r7, r0
 8003f4a:	9b04      	ldr	r3, [sp, #16]
 8003f4c:	4631      	mov	r1, r6
 8003f4e:	3b01      	subs	r3, #1
 8003f50:	4650      	mov	r0, sl
 8003f52:	9301      	str	r3, [sp, #4]
 8003f54:	f7ff fa6c 	bl	8003430 <quorem>
 8003f58:	4641      	mov	r1, r8
 8003f5a:	9002      	str	r0, [sp, #8]
 8003f5c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003f60:	4650      	mov	r0, sl
 8003f62:	f000 fca5 	bl	80048b0 <__mcmp>
 8003f66:	463a      	mov	r2, r7
 8003f68:	9005      	str	r0, [sp, #20]
 8003f6a:	4631      	mov	r1, r6
 8003f6c:	4620      	mov	r0, r4
 8003f6e:	f000 fcbb 	bl	80048e8 <__mdiff>
 8003f72:	68c2      	ldr	r2, [r0, #12]
 8003f74:	4605      	mov	r5, r0
 8003f76:	bb02      	cbnz	r2, 8003fba <_dtoa_r+0xa7a>
 8003f78:	4601      	mov	r1, r0
 8003f7a:	4650      	mov	r0, sl
 8003f7c:	f000 fc98 	bl	80048b0 <__mcmp>
 8003f80:	4602      	mov	r2, r0
 8003f82:	4629      	mov	r1, r5
 8003f84:	4620      	mov	r0, r4
 8003f86:	9209      	str	r2, [sp, #36]	; 0x24
 8003f88:	f000 fa0c 	bl	80043a4 <_Bfree>
 8003f8c:	9b07      	ldr	r3, [sp, #28]
 8003f8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003f90:	9d04      	ldr	r5, [sp, #16]
 8003f92:	ea43 0102 	orr.w	r1, r3, r2
 8003f96:	9b06      	ldr	r3, [sp, #24]
 8003f98:	4319      	orrs	r1, r3
 8003f9a:	d110      	bne.n	8003fbe <_dtoa_r+0xa7e>
 8003f9c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003fa0:	d029      	beq.n	8003ff6 <_dtoa_r+0xab6>
 8003fa2:	9b05      	ldr	r3, [sp, #20]
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	dd02      	ble.n	8003fae <_dtoa_r+0xa6e>
 8003fa8:	9b02      	ldr	r3, [sp, #8]
 8003faa:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8003fae:	9b01      	ldr	r3, [sp, #4]
 8003fb0:	f883 9000 	strb.w	r9, [r3]
 8003fb4:	e774      	b.n	8003ea0 <_dtoa_r+0x960>
 8003fb6:	4638      	mov	r0, r7
 8003fb8:	e7ba      	b.n	8003f30 <_dtoa_r+0x9f0>
 8003fba:	2201      	movs	r2, #1
 8003fbc:	e7e1      	b.n	8003f82 <_dtoa_r+0xa42>
 8003fbe:	9b05      	ldr	r3, [sp, #20]
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	db04      	blt.n	8003fce <_dtoa_r+0xa8e>
 8003fc4:	9907      	ldr	r1, [sp, #28]
 8003fc6:	430b      	orrs	r3, r1
 8003fc8:	9906      	ldr	r1, [sp, #24]
 8003fca:	430b      	orrs	r3, r1
 8003fcc:	d120      	bne.n	8004010 <_dtoa_r+0xad0>
 8003fce:	2a00      	cmp	r2, #0
 8003fd0:	dded      	ble.n	8003fae <_dtoa_r+0xa6e>
 8003fd2:	4651      	mov	r1, sl
 8003fd4:	2201      	movs	r2, #1
 8003fd6:	4620      	mov	r0, r4
 8003fd8:	f000 fbfe 	bl	80047d8 <__lshift>
 8003fdc:	4631      	mov	r1, r6
 8003fde:	4682      	mov	sl, r0
 8003fe0:	f000 fc66 	bl	80048b0 <__mcmp>
 8003fe4:	2800      	cmp	r0, #0
 8003fe6:	dc03      	bgt.n	8003ff0 <_dtoa_r+0xab0>
 8003fe8:	d1e1      	bne.n	8003fae <_dtoa_r+0xa6e>
 8003fea:	f019 0f01 	tst.w	r9, #1
 8003fee:	d0de      	beq.n	8003fae <_dtoa_r+0xa6e>
 8003ff0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003ff4:	d1d8      	bne.n	8003fa8 <_dtoa_r+0xa68>
 8003ff6:	9a01      	ldr	r2, [sp, #4]
 8003ff8:	2339      	movs	r3, #57	; 0x39
 8003ffa:	7013      	strb	r3, [r2, #0]
 8003ffc:	462b      	mov	r3, r5
 8003ffe:	461d      	mov	r5, r3
 8004000:	3b01      	subs	r3, #1
 8004002:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8004006:	2a39      	cmp	r2, #57	; 0x39
 8004008:	d06c      	beq.n	80040e4 <_dtoa_r+0xba4>
 800400a:	3201      	adds	r2, #1
 800400c:	701a      	strb	r2, [r3, #0]
 800400e:	e747      	b.n	8003ea0 <_dtoa_r+0x960>
 8004010:	2a00      	cmp	r2, #0
 8004012:	dd07      	ble.n	8004024 <_dtoa_r+0xae4>
 8004014:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004018:	d0ed      	beq.n	8003ff6 <_dtoa_r+0xab6>
 800401a:	9a01      	ldr	r2, [sp, #4]
 800401c:	f109 0301 	add.w	r3, r9, #1
 8004020:	7013      	strb	r3, [r2, #0]
 8004022:	e73d      	b.n	8003ea0 <_dtoa_r+0x960>
 8004024:	9b04      	ldr	r3, [sp, #16]
 8004026:	9a08      	ldr	r2, [sp, #32]
 8004028:	f803 9c01 	strb.w	r9, [r3, #-1]
 800402c:	4293      	cmp	r3, r2
 800402e:	d043      	beq.n	80040b8 <_dtoa_r+0xb78>
 8004030:	4651      	mov	r1, sl
 8004032:	2300      	movs	r3, #0
 8004034:	220a      	movs	r2, #10
 8004036:	4620      	mov	r0, r4
 8004038:	f000 f9d6 	bl	80043e8 <__multadd>
 800403c:	45b8      	cmp	r8, r7
 800403e:	4682      	mov	sl, r0
 8004040:	f04f 0300 	mov.w	r3, #0
 8004044:	f04f 020a 	mov.w	r2, #10
 8004048:	4641      	mov	r1, r8
 800404a:	4620      	mov	r0, r4
 800404c:	d107      	bne.n	800405e <_dtoa_r+0xb1e>
 800404e:	f000 f9cb 	bl	80043e8 <__multadd>
 8004052:	4680      	mov	r8, r0
 8004054:	4607      	mov	r7, r0
 8004056:	9b04      	ldr	r3, [sp, #16]
 8004058:	3301      	adds	r3, #1
 800405a:	9304      	str	r3, [sp, #16]
 800405c:	e775      	b.n	8003f4a <_dtoa_r+0xa0a>
 800405e:	f000 f9c3 	bl	80043e8 <__multadd>
 8004062:	4639      	mov	r1, r7
 8004064:	4680      	mov	r8, r0
 8004066:	2300      	movs	r3, #0
 8004068:	220a      	movs	r2, #10
 800406a:	4620      	mov	r0, r4
 800406c:	f000 f9bc 	bl	80043e8 <__multadd>
 8004070:	4607      	mov	r7, r0
 8004072:	e7f0      	b.n	8004056 <_dtoa_r+0xb16>
 8004074:	9b04      	ldr	r3, [sp, #16]
 8004076:	9301      	str	r3, [sp, #4]
 8004078:	9d00      	ldr	r5, [sp, #0]
 800407a:	4631      	mov	r1, r6
 800407c:	4650      	mov	r0, sl
 800407e:	f7ff f9d7 	bl	8003430 <quorem>
 8004082:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8004086:	9b00      	ldr	r3, [sp, #0]
 8004088:	f805 9b01 	strb.w	r9, [r5], #1
 800408c:	1aea      	subs	r2, r5, r3
 800408e:	9b01      	ldr	r3, [sp, #4]
 8004090:	4293      	cmp	r3, r2
 8004092:	dd07      	ble.n	80040a4 <_dtoa_r+0xb64>
 8004094:	4651      	mov	r1, sl
 8004096:	2300      	movs	r3, #0
 8004098:	220a      	movs	r2, #10
 800409a:	4620      	mov	r0, r4
 800409c:	f000 f9a4 	bl	80043e8 <__multadd>
 80040a0:	4682      	mov	sl, r0
 80040a2:	e7ea      	b.n	800407a <_dtoa_r+0xb3a>
 80040a4:	9b01      	ldr	r3, [sp, #4]
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	bfc8      	it	gt
 80040aa:	461d      	movgt	r5, r3
 80040ac:	9b00      	ldr	r3, [sp, #0]
 80040ae:	bfd8      	it	le
 80040b0:	2501      	movle	r5, #1
 80040b2:	441d      	add	r5, r3
 80040b4:	f04f 0800 	mov.w	r8, #0
 80040b8:	4651      	mov	r1, sl
 80040ba:	2201      	movs	r2, #1
 80040bc:	4620      	mov	r0, r4
 80040be:	f000 fb8b 	bl	80047d8 <__lshift>
 80040c2:	4631      	mov	r1, r6
 80040c4:	4682      	mov	sl, r0
 80040c6:	f000 fbf3 	bl	80048b0 <__mcmp>
 80040ca:	2800      	cmp	r0, #0
 80040cc:	dc96      	bgt.n	8003ffc <_dtoa_r+0xabc>
 80040ce:	d102      	bne.n	80040d6 <_dtoa_r+0xb96>
 80040d0:	f019 0f01 	tst.w	r9, #1
 80040d4:	d192      	bne.n	8003ffc <_dtoa_r+0xabc>
 80040d6:	462b      	mov	r3, r5
 80040d8:	461d      	mov	r5, r3
 80040da:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80040de:	2a30      	cmp	r2, #48	; 0x30
 80040e0:	d0fa      	beq.n	80040d8 <_dtoa_r+0xb98>
 80040e2:	e6dd      	b.n	8003ea0 <_dtoa_r+0x960>
 80040e4:	9a00      	ldr	r2, [sp, #0]
 80040e6:	429a      	cmp	r2, r3
 80040e8:	d189      	bne.n	8003ffe <_dtoa_r+0xabe>
 80040ea:	f10b 0b01 	add.w	fp, fp, #1
 80040ee:	2331      	movs	r3, #49	; 0x31
 80040f0:	e796      	b.n	8004020 <_dtoa_r+0xae0>
 80040f2:	4b0a      	ldr	r3, [pc, #40]	; (800411c <_dtoa_r+0xbdc>)
 80040f4:	f7ff ba99 	b.w	800362a <_dtoa_r+0xea>
 80040f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	f47f aa6d 	bne.w	80035da <_dtoa_r+0x9a>
 8004100:	4b07      	ldr	r3, [pc, #28]	; (8004120 <_dtoa_r+0xbe0>)
 8004102:	f7ff ba92 	b.w	800362a <_dtoa_r+0xea>
 8004106:	9b01      	ldr	r3, [sp, #4]
 8004108:	2b00      	cmp	r3, #0
 800410a:	dcb5      	bgt.n	8004078 <_dtoa_r+0xb38>
 800410c:	9b07      	ldr	r3, [sp, #28]
 800410e:	2b02      	cmp	r3, #2
 8004110:	f73f aeb1 	bgt.w	8003e76 <_dtoa_r+0x936>
 8004114:	e7b0      	b.n	8004078 <_dtoa_r+0xb38>
 8004116:	bf00      	nop
 8004118:	08006e71 	.word	0x08006e71
 800411c:	08006d90 	.word	0x08006d90
 8004120:	08006df5 	.word	0x08006df5

08004124 <_free_r>:
 8004124:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004126:	2900      	cmp	r1, #0
 8004128:	d044      	beq.n	80041b4 <_free_r+0x90>
 800412a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800412e:	9001      	str	r0, [sp, #4]
 8004130:	2b00      	cmp	r3, #0
 8004132:	f1a1 0404 	sub.w	r4, r1, #4
 8004136:	bfb8      	it	lt
 8004138:	18e4      	addlt	r4, r4, r3
 800413a:	f000 f8e7 	bl	800430c <__malloc_lock>
 800413e:	4a1e      	ldr	r2, [pc, #120]	; (80041b8 <_free_r+0x94>)
 8004140:	9801      	ldr	r0, [sp, #4]
 8004142:	6813      	ldr	r3, [r2, #0]
 8004144:	b933      	cbnz	r3, 8004154 <_free_r+0x30>
 8004146:	6063      	str	r3, [r4, #4]
 8004148:	6014      	str	r4, [r2, #0]
 800414a:	b003      	add	sp, #12
 800414c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004150:	f000 b8e2 	b.w	8004318 <__malloc_unlock>
 8004154:	42a3      	cmp	r3, r4
 8004156:	d908      	bls.n	800416a <_free_r+0x46>
 8004158:	6825      	ldr	r5, [r4, #0]
 800415a:	1961      	adds	r1, r4, r5
 800415c:	428b      	cmp	r3, r1
 800415e:	bf01      	itttt	eq
 8004160:	6819      	ldreq	r1, [r3, #0]
 8004162:	685b      	ldreq	r3, [r3, #4]
 8004164:	1949      	addeq	r1, r1, r5
 8004166:	6021      	streq	r1, [r4, #0]
 8004168:	e7ed      	b.n	8004146 <_free_r+0x22>
 800416a:	461a      	mov	r2, r3
 800416c:	685b      	ldr	r3, [r3, #4]
 800416e:	b10b      	cbz	r3, 8004174 <_free_r+0x50>
 8004170:	42a3      	cmp	r3, r4
 8004172:	d9fa      	bls.n	800416a <_free_r+0x46>
 8004174:	6811      	ldr	r1, [r2, #0]
 8004176:	1855      	adds	r5, r2, r1
 8004178:	42a5      	cmp	r5, r4
 800417a:	d10b      	bne.n	8004194 <_free_r+0x70>
 800417c:	6824      	ldr	r4, [r4, #0]
 800417e:	4421      	add	r1, r4
 8004180:	1854      	adds	r4, r2, r1
 8004182:	42a3      	cmp	r3, r4
 8004184:	6011      	str	r1, [r2, #0]
 8004186:	d1e0      	bne.n	800414a <_free_r+0x26>
 8004188:	681c      	ldr	r4, [r3, #0]
 800418a:	685b      	ldr	r3, [r3, #4]
 800418c:	6053      	str	r3, [r2, #4]
 800418e:	440c      	add	r4, r1
 8004190:	6014      	str	r4, [r2, #0]
 8004192:	e7da      	b.n	800414a <_free_r+0x26>
 8004194:	d902      	bls.n	800419c <_free_r+0x78>
 8004196:	230c      	movs	r3, #12
 8004198:	6003      	str	r3, [r0, #0]
 800419a:	e7d6      	b.n	800414a <_free_r+0x26>
 800419c:	6825      	ldr	r5, [r4, #0]
 800419e:	1961      	adds	r1, r4, r5
 80041a0:	428b      	cmp	r3, r1
 80041a2:	bf04      	itt	eq
 80041a4:	6819      	ldreq	r1, [r3, #0]
 80041a6:	685b      	ldreq	r3, [r3, #4]
 80041a8:	6063      	str	r3, [r4, #4]
 80041aa:	bf04      	itt	eq
 80041ac:	1949      	addeq	r1, r1, r5
 80041ae:	6021      	streq	r1, [r4, #0]
 80041b0:	6054      	str	r4, [r2, #4]
 80041b2:	e7ca      	b.n	800414a <_free_r+0x26>
 80041b4:	b003      	add	sp, #12
 80041b6:	bd30      	pop	{r4, r5, pc}
 80041b8:	20001b48 	.word	0x20001b48

080041bc <malloc>:
 80041bc:	4b02      	ldr	r3, [pc, #8]	; (80041c8 <malloc+0xc>)
 80041be:	4601      	mov	r1, r0
 80041c0:	6818      	ldr	r0, [r3, #0]
 80041c2:	f000 b823 	b.w	800420c <_malloc_r>
 80041c6:	bf00      	nop
 80041c8:	20000084 	.word	0x20000084

080041cc <sbrk_aligned>:
 80041cc:	b570      	push	{r4, r5, r6, lr}
 80041ce:	4e0e      	ldr	r6, [pc, #56]	; (8004208 <sbrk_aligned+0x3c>)
 80041d0:	460c      	mov	r4, r1
 80041d2:	6831      	ldr	r1, [r6, #0]
 80041d4:	4605      	mov	r5, r0
 80041d6:	b911      	cbnz	r1, 80041de <sbrk_aligned+0x12>
 80041d8:	f002 f806 	bl	80061e8 <_sbrk_r>
 80041dc:	6030      	str	r0, [r6, #0]
 80041de:	4621      	mov	r1, r4
 80041e0:	4628      	mov	r0, r5
 80041e2:	f002 f801 	bl	80061e8 <_sbrk_r>
 80041e6:	1c43      	adds	r3, r0, #1
 80041e8:	d00a      	beq.n	8004200 <sbrk_aligned+0x34>
 80041ea:	1cc4      	adds	r4, r0, #3
 80041ec:	f024 0403 	bic.w	r4, r4, #3
 80041f0:	42a0      	cmp	r0, r4
 80041f2:	d007      	beq.n	8004204 <sbrk_aligned+0x38>
 80041f4:	1a21      	subs	r1, r4, r0
 80041f6:	4628      	mov	r0, r5
 80041f8:	f001 fff6 	bl	80061e8 <_sbrk_r>
 80041fc:	3001      	adds	r0, #1
 80041fe:	d101      	bne.n	8004204 <sbrk_aligned+0x38>
 8004200:	f04f 34ff 	mov.w	r4, #4294967295
 8004204:	4620      	mov	r0, r4
 8004206:	bd70      	pop	{r4, r5, r6, pc}
 8004208:	20001b4c 	.word	0x20001b4c

0800420c <_malloc_r>:
 800420c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004210:	1ccd      	adds	r5, r1, #3
 8004212:	f025 0503 	bic.w	r5, r5, #3
 8004216:	3508      	adds	r5, #8
 8004218:	2d0c      	cmp	r5, #12
 800421a:	bf38      	it	cc
 800421c:	250c      	movcc	r5, #12
 800421e:	2d00      	cmp	r5, #0
 8004220:	4607      	mov	r7, r0
 8004222:	db01      	blt.n	8004228 <_malloc_r+0x1c>
 8004224:	42a9      	cmp	r1, r5
 8004226:	d905      	bls.n	8004234 <_malloc_r+0x28>
 8004228:	230c      	movs	r3, #12
 800422a:	603b      	str	r3, [r7, #0]
 800422c:	2600      	movs	r6, #0
 800422e:	4630      	mov	r0, r6
 8004230:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004234:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8004308 <_malloc_r+0xfc>
 8004238:	f000 f868 	bl	800430c <__malloc_lock>
 800423c:	f8d8 3000 	ldr.w	r3, [r8]
 8004240:	461c      	mov	r4, r3
 8004242:	bb5c      	cbnz	r4, 800429c <_malloc_r+0x90>
 8004244:	4629      	mov	r1, r5
 8004246:	4638      	mov	r0, r7
 8004248:	f7ff ffc0 	bl	80041cc <sbrk_aligned>
 800424c:	1c43      	adds	r3, r0, #1
 800424e:	4604      	mov	r4, r0
 8004250:	d155      	bne.n	80042fe <_malloc_r+0xf2>
 8004252:	f8d8 4000 	ldr.w	r4, [r8]
 8004256:	4626      	mov	r6, r4
 8004258:	2e00      	cmp	r6, #0
 800425a:	d145      	bne.n	80042e8 <_malloc_r+0xdc>
 800425c:	2c00      	cmp	r4, #0
 800425e:	d048      	beq.n	80042f2 <_malloc_r+0xe6>
 8004260:	6823      	ldr	r3, [r4, #0]
 8004262:	4631      	mov	r1, r6
 8004264:	4638      	mov	r0, r7
 8004266:	eb04 0903 	add.w	r9, r4, r3
 800426a:	f001 ffbd 	bl	80061e8 <_sbrk_r>
 800426e:	4581      	cmp	r9, r0
 8004270:	d13f      	bne.n	80042f2 <_malloc_r+0xe6>
 8004272:	6821      	ldr	r1, [r4, #0]
 8004274:	1a6d      	subs	r5, r5, r1
 8004276:	4629      	mov	r1, r5
 8004278:	4638      	mov	r0, r7
 800427a:	f7ff ffa7 	bl	80041cc <sbrk_aligned>
 800427e:	3001      	adds	r0, #1
 8004280:	d037      	beq.n	80042f2 <_malloc_r+0xe6>
 8004282:	6823      	ldr	r3, [r4, #0]
 8004284:	442b      	add	r3, r5
 8004286:	6023      	str	r3, [r4, #0]
 8004288:	f8d8 3000 	ldr.w	r3, [r8]
 800428c:	2b00      	cmp	r3, #0
 800428e:	d038      	beq.n	8004302 <_malloc_r+0xf6>
 8004290:	685a      	ldr	r2, [r3, #4]
 8004292:	42a2      	cmp	r2, r4
 8004294:	d12b      	bne.n	80042ee <_malloc_r+0xe2>
 8004296:	2200      	movs	r2, #0
 8004298:	605a      	str	r2, [r3, #4]
 800429a:	e00f      	b.n	80042bc <_malloc_r+0xb0>
 800429c:	6822      	ldr	r2, [r4, #0]
 800429e:	1b52      	subs	r2, r2, r5
 80042a0:	d41f      	bmi.n	80042e2 <_malloc_r+0xd6>
 80042a2:	2a0b      	cmp	r2, #11
 80042a4:	d917      	bls.n	80042d6 <_malloc_r+0xca>
 80042a6:	1961      	adds	r1, r4, r5
 80042a8:	42a3      	cmp	r3, r4
 80042aa:	6025      	str	r5, [r4, #0]
 80042ac:	bf18      	it	ne
 80042ae:	6059      	strne	r1, [r3, #4]
 80042b0:	6863      	ldr	r3, [r4, #4]
 80042b2:	bf08      	it	eq
 80042b4:	f8c8 1000 	streq.w	r1, [r8]
 80042b8:	5162      	str	r2, [r4, r5]
 80042ba:	604b      	str	r3, [r1, #4]
 80042bc:	4638      	mov	r0, r7
 80042be:	f104 060b 	add.w	r6, r4, #11
 80042c2:	f000 f829 	bl	8004318 <__malloc_unlock>
 80042c6:	f026 0607 	bic.w	r6, r6, #7
 80042ca:	1d23      	adds	r3, r4, #4
 80042cc:	1af2      	subs	r2, r6, r3
 80042ce:	d0ae      	beq.n	800422e <_malloc_r+0x22>
 80042d0:	1b9b      	subs	r3, r3, r6
 80042d2:	50a3      	str	r3, [r4, r2]
 80042d4:	e7ab      	b.n	800422e <_malloc_r+0x22>
 80042d6:	42a3      	cmp	r3, r4
 80042d8:	6862      	ldr	r2, [r4, #4]
 80042da:	d1dd      	bne.n	8004298 <_malloc_r+0x8c>
 80042dc:	f8c8 2000 	str.w	r2, [r8]
 80042e0:	e7ec      	b.n	80042bc <_malloc_r+0xb0>
 80042e2:	4623      	mov	r3, r4
 80042e4:	6864      	ldr	r4, [r4, #4]
 80042e6:	e7ac      	b.n	8004242 <_malloc_r+0x36>
 80042e8:	4634      	mov	r4, r6
 80042ea:	6876      	ldr	r6, [r6, #4]
 80042ec:	e7b4      	b.n	8004258 <_malloc_r+0x4c>
 80042ee:	4613      	mov	r3, r2
 80042f0:	e7cc      	b.n	800428c <_malloc_r+0x80>
 80042f2:	230c      	movs	r3, #12
 80042f4:	603b      	str	r3, [r7, #0]
 80042f6:	4638      	mov	r0, r7
 80042f8:	f000 f80e 	bl	8004318 <__malloc_unlock>
 80042fc:	e797      	b.n	800422e <_malloc_r+0x22>
 80042fe:	6025      	str	r5, [r4, #0]
 8004300:	e7dc      	b.n	80042bc <_malloc_r+0xb0>
 8004302:	605b      	str	r3, [r3, #4]
 8004304:	deff      	udf	#255	; 0xff
 8004306:	bf00      	nop
 8004308:	20001b48 	.word	0x20001b48

0800430c <__malloc_lock>:
 800430c:	4801      	ldr	r0, [pc, #4]	; (8004314 <__malloc_lock+0x8>)
 800430e:	f7ff b868 	b.w	80033e2 <__retarget_lock_acquire_recursive>
 8004312:	bf00      	nop
 8004314:	20001b44 	.word	0x20001b44

08004318 <__malloc_unlock>:
 8004318:	4801      	ldr	r0, [pc, #4]	; (8004320 <__malloc_unlock+0x8>)
 800431a:	f7ff b863 	b.w	80033e4 <__retarget_lock_release_recursive>
 800431e:	bf00      	nop
 8004320:	20001b44 	.word	0x20001b44

08004324 <_Balloc>:
 8004324:	b570      	push	{r4, r5, r6, lr}
 8004326:	69c6      	ldr	r6, [r0, #28]
 8004328:	4604      	mov	r4, r0
 800432a:	460d      	mov	r5, r1
 800432c:	b976      	cbnz	r6, 800434c <_Balloc+0x28>
 800432e:	2010      	movs	r0, #16
 8004330:	f7ff ff44 	bl	80041bc <malloc>
 8004334:	4602      	mov	r2, r0
 8004336:	61e0      	str	r0, [r4, #28]
 8004338:	b920      	cbnz	r0, 8004344 <_Balloc+0x20>
 800433a:	4b18      	ldr	r3, [pc, #96]	; (800439c <_Balloc+0x78>)
 800433c:	4818      	ldr	r0, [pc, #96]	; (80043a0 <_Balloc+0x7c>)
 800433e:	216b      	movs	r1, #107	; 0x6b
 8004340:	f7ff f858 	bl	80033f4 <__assert_func>
 8004344:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004348:	6006      	str	r6, [r0, #0]
 800434a:	60c6      	str	r6, [r0, #12]
 800434c:	69e6      	ldr	r6, [r4, #28]
 800434e:	68f3      	ldr	r3, [r6, #12]
 8004350:	b183      	cbz	r3, 8004374 <_Balloc+0x50>
 8004352:	69e3      	ldr	r3, [r4, #28]
 8004354:	68db      	ldr	r3, [r3, #12]
 8004356:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800435a:	b9b8      	cbnz	r0, 800438c <_Balloc+0x68>
 800435c:	2101      	movs	r1, #1
 800435e:	fa01 f605 	lsl.w	r6, r1, r5
 8004362:	1d72      	adds	r2, r6, #5
 8004364:	0092      	lsls	r2, r2, #2
 8004366:	4620      	mov	r0, r4
 8004368:	f001 ff6d 	bl	8006246 <_calloc_r>
 800436c:	b160      	cbz	r0, 8004388 <_Balloc+0x64>
 800436e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004372:	e00e      	b.n	8004392 <_Balloc+0x6e>
 8004374:	2221      	movs	r2, #33	; 0x21
 8004376:	2104      	movs	r1, #4
 8004378:	4620      	mov	r0, r4
 800437a:	f001 ff64 	bl	8006246 <_calloc_r>
 800437e:	69e3      	ldr	r3, [r4, #28]
 8004380:	60f0      	str	r0, [r6, #12]
 8004382:	68db      	ldr	r3, [r3, #12]
 8004384:	2b00      	cmp	r3, #0
 8004386:	d1e4      	bne.n	8004352 <_Balloc+0x2e>
 8004388:	2000      	movs	r0, #0
 800438a:	bd70      	pop	{r4, r5, r6, pc}
 800438c:	6802      	ldr	r2, [r0, #0]
 800438e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004392:	2300      	movs	r3, #0
 8004394:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004398:	e7f7      	b.n	800438a <_Balloc+0x66>
 800439a:	bf00      	nop
 800439c:	08006e02 	.word	0x08006e02
 80043a0:	08006e82 	.word	0x08006e82

080043a4 <_Bfree>:
 80043a4:	b570      	push	{r4, r5, r6, lr}
 80043a6:	69c6      	ldr	r6, [r0, #28]
 80043a8:	4605      	mov	r5, r0
 80043aa:	460c      	mov	r4, r1
 80043ac:	b976      	cbnz	r6, 80043cc <_Bfree+0x28>
 80043ae:	2010      	movs	r0, #16
 80043b0:	f7ff ff04 	bl	80041bc <malloc>
 80043b4:	4602      	mov	r2, r0
 80043b6:	61e8      	str	r0, [r5, #28]
 80043b8:	b920      	cbnz	r0, 80043c4 <_Bfree+0x20>
 80043ba:	4b09      	ldr	r3, [pc, #36]	; (80043e0 <_Bfree+0x3c>)
 80043bc:	4809      	ldr	r0, [pc, #36]	; (80043e4 <_Bfree+0x40>)
 80043be:	218f      	movs	r1, #143	; 0x8f
 80043c0:	f7ff f818 	bl	80033f4 <__assert_func>
 80043c4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80043c8:	6006      	str	r6, [r0, #0]
 80043ca:	60c6      	str	r6, [r0, #12]
 80043cc:	b13c      	cbz	r4, 80043de <_Bfree+0x3a>
 80043ce:	69eb      	ldr	r3, [r5, #28]
 80043d0:	6862      	ldr	r2, [r4, #4]
 80043d2:	68db      	ldr	r3, [r3, #12]
 80043d4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80043d8:	6021      	str	r1, [r4, #0]
 80043da:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80043de:	bd70      	pop	{r4, r5, r6, pc}
 80043e0:	08006e02 	.word	0x08006e02
 80043e4:	08006e82 	.word	0x08006e82

080043e8 <__multadd>:
 80043e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043ec:	690d      	ldr	r5, [r1, #16]
 80043ee:	4607      	mov	r7, r0
 80043f0:	460c      	mov	r4, r1
 80043f2:	461e      	mov	r6, r3
 80043f4:	f101 0c14 	add.w	ip, r1, #20
 80043f8:	2000      	movs	r0, #0
 80043fa:	f8dc 3000 	ldr.w	r3, [ip]
 80043fe:	b299      	uxth	r1, r3
 8004400:	fb02 6101 	mla	r1, r2, r1, r6
 8004404:	0c1e      	lsrs	r6, r3, #16
 8004406:	0c0b      	lsrs	r3, r1, #16
 8004408:	fb02 3306 	mla	r3, r2, r6, r3
 800440c:	b289      	uxth	r1, r1
 800440e:	3001      	adds	r0, #1
 8004410:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004414:	4285      	cmp	r5, r0
 8004416:	f84c 1b04 	str.w	r1, [ip], #4
 800441a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800441e:	dcec      	bgt.n	80043fa <__multadd+0x12>
 8004420:	b30e      	cbz	r6, 8004466 <__multadd+0x7e>
 8004422:	68a3      	ldr	r3, [r4, #8]
 8004424:	42ab      	cmp	r3, r5
 8004426:	dc19      	bgt.n	800445c <__multadd+0x74>
 8004428:	6861      	ldr	r1, [r4, #4]
 800442a:	4638      	mov	r0, r7
 800442c:	3101      	adds	r1, #1
 800442e:	f7ff ff79 	bl	8004324 <_Balloc>
 8004432:	4680      	mov	r8, r0
 8004434:	b928      	cbnz	r0, 8004442 <__multadd+0x5a>
 8004436:	4602      	mov	r2, r0
 8004438:	4b0c      	ldr	r3, [pc, #48]	; (800446c <__multadd+0x84>)
 800443a:	480d      	ldr	r0, [pc, #52]	; (8004470 <__multadd+0x88>)
 800443c:	21ba      	movs	r1, #186	; 0xba
 800443e:	f7fe ffd9 	bl	80033f4 <__assert_func>
 8004442:	6922      	ldr	r2, [r4, #16]
 8004444:	3202      	adds	r2, #2
 8004446:	f104 010c 	add.w	r1, r4, #12
 800444a:	0092      	lsls	r2, r2, #2
 800444c:	300c      	adds	r0, #12
 800444e:	f001 fedb 	bl	8006208 <memcpy>
 8004452:	4621      	mov	r1, r4
 8004454:	4638      	mov	r0, r7
 8004456:	f7ff ffa5 	bl	80043a4 <_Bfree>
 800445a:	4644      	mov	r4, r8
 800445c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004460:	3501      	adds	r5, #1
 8004462:	615e      	str	r6, [r3, #20]
 8004464:	6125      	str	r5, [r4, #16]
 8004466:	4620      	mov	r0, r4
 8004468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800446c:	08006e71 	.word	0x08006e71
 8004470:	08006e82 	.word	0x08006e82

08004474 <__s2b>:
 8004474:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004478:	460c      	mov	r4, r1
 800447a:	4615      	mov	r5, r2
 800447c:	461f      	mov	r7, r3
 800447e:	2209      	movs	r2, #9
 8004480:	3308      	adds	r3, #8
 8004482:	4606      	mov	r6, r0
 8004484:	fb93 f3f2 	sdiv	r3, r3, r2
 8004488:	2100      	movs	r1, #0
 800448a:	2201      	movs	r2, #1
 800448c:	429a      	cmp	r2, r3
 800448e:	db09      	blt.n	80044a4 <__s2b+0x30>
 8004490:	4630      	mov	r0, r6
 8004492:	f7ff ff47 	bl	8004324 <_Balloc>
 8004496:	b940      	cbnz	r0, 80044aa <__s2b+0x36>
 8004498:	4602      	mov	r2, r0
 800449a:	4b19      	ldr	r3, [pc, #100]	; (8004500 <__s2b+0x8c>)
 800449c:	4819      	ldr	r0, [pc, #100]	; (8004504 <__s2b+0x90>)
 800449e:	21d3      	movs	r1, #211	; 0xd3
 80044a0:	f7fe ffa8 	bl	80033f4 <__assert_func>
 80044a4:	0052      	lsls	r2, r2, #1
 80044a6:	3101      	adds	r1, #1
 80044a8:	e7f0      	b.n	800448c <__s2b+0x18>
 80044aa:	9b08      	ldr	r3, [sp, #32]
 80044ac:	6143      	str	r3, [r0, #20]
 80044ae:	2d09      	cmp	r5, #9
 80044b0:	f04f 0301 	mov.w	r3, #1
 80044b4:	6103      	str	r3, [r0, #16]
 80044b6:	dd16      	ble.n	80044e6 <__s2b+0x72>
 80044b8:	f104 0909 	add.w	r9, r4, #9
 80044bc:	46c8      	mov	r8, r9
 80044be:	442c      	add	r4, r5
 80044c0:	f818 3b01 	ldrb.w	r3, [r8], #1
 80044c4:	4601      	mov	r1, r0
 80044c6:	3b30      	subs	r3, #48	; 0x30
 80044c8:	220a      	movs	r2, #10
 80044ca:	4630      	mov	r0, r6
 80044cc:	f7ff ff8c 	bl	80043e8 <__multadd>
 80044d0:	45a0      	cmp	r8, r4
 80044d2:	d1f5      	bne.n	80044c0 <__s2b+0x4c>
 80044d4:	f1a5 0408 	sub.w	r4, r5, #8
 80044d8:	444c      	add	r4, r9
 80044da:	1b2d      	subs	r5, r5, r4
 80044dc:	1963      	adds	r3, r4, r5
 80044de:	42bb      	cmp	r3, r7
 80044e0:	db04      	blt.n	80044ec <__s2b+0x78>
 80044e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80044e6:	340a      	adds	r4, #10
 80044e8:	2509      	movs	r5, #9
 80044ea:	e7f6      	b.n	80044da <__s2b+0x66>
 80044ec:	f814 3b01 	ldrb.w	r3, [r4], #1
 80044f0:	4601      	mov	r1, r0
 80044f2:	3b30      	subs	r3, #48	; 0x30
 80044f4:	220a      	movs	r2, #10
 80044f6:	4630      	mov	r0, r6
 80044f8:	f7ff ff76 	bl	80043e8 <__multadd>
 80044fc:	e7ee      	b.n	80044dc <__s2b+0x68>
 80044fe:	bf00      	nop
 8004500:	08006e71 	.word	0x08006e71
 8004504:	08006e82 	.word	0x08006e82

08004508 <__hi0bits>:
 8004508:	0c03      	lsrs	r3, r0, #16
 800450a:	041b      	lsls	r3, r3, #16
 800450c:	b9d3      	cbnz	r3, 8004544 <__hi0bits+0x3c>
 800450e:	0400      	lsls	r0, r0, #16
 8004510:	2310      	movs	r3, #16
 8004512:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8004516:	bf04      	itt	eq
 8004518:	0200      	lsleq	r0, r0, #8
 800451a:	3308      	addeq	r3, #8
 800451c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8004520:	bf04      	itt	eq
 8004522:	0100      	lsleq	r0, r0, #4
 8004524:	3304      	addeq	r3, #4
 8004526:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800452a:	bf04      	itt	eq
 800452c:	0080      	lsleq	r0, r0, #2
 800452e:	3302      	addeq	r3, #2
 8004530:	2800      	cmp	r0, #0
 8004532:	db05      	blt.n	8004540 <__hi0bits+0x38>
 8004534:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8004538:	f103 0301 	add.w	r3, r3, #1
 800453c:	bf08      	it	eq
 800453e:	2320      	moveq	r3, #32
 8004540:	4618      	mov	r0, r3
 8004542:	4770      	bx	lr
 8004544:	2300      	movs	r3, #0
 8004546:	e7e4      	b.n	8004512 <__hi0bits+0xa>

08004548 <__lo0bits>:
 8004548:	6803      	ldr	r3, [r0, #0]
 800454a:	f013 0207 	ands.w	r2, r3, #7
 800454e:	d00c      	beq.n	800456a <__lo0bits+0x22>
 8004550:	07d9      	lsls	r1, r3, #31
 8004552:	d422      	bmi.n	800459a <__lo0bits+0x52>
 8004554:	079a      	lsls	r2, r3, #30
 8004556:	bf49      	itett	mi
 8004558:	085b      	lsrmi	r3, r3, #1
 800455a:	089b      	lsrpl	r3, r3, #2
 800455c:	6003      	strmi	r3, [r0, #0]
 800455e:	2201      	movmi	r2, #1
 8004560:	bf5c      	itt	pl
 8004562:	6003      	strpl	r3, [r0, #0]
 8004564:	2202      	movpl	r2, #2
 8004566:	4610      	mov	r0, r2
 8004568:	4770      	bx	lr
 800456a:	b299      	uxth	r1, r3
 800456c:	b909      	cbnz	r1, 8004572 <__lo0bits+0x2a>
 800456e:	0c1b      	lsrs	r3, r3, #16
 8004570:	2210      	movs	r2, #16
 8004572:	b2d9      	uxtb	r1, r3
 8004574:	b909      	cbnz	r1, 800457a <__lo0bits+0x32>
 8004576:	3208      	adds	r2, #8
 8004578:	0a1b      	lsrs	r3, r3, #8
 800457a:	0719      	lsls	r1, r3, #28
 800457c:	bf04      	itt	eq
 800457e:	091b      	lsreq	r3, r3, #4
 8004580:	3204      	addeq	r2, #4
 8004582:	0799      	lsls	r1, r3, #30
 8004584:	bf04      	itt	eq
 8004586:	089b      	lsreq	r3, r3, #2
 8004588:	3202      	addeq	r2, #2
 800458a:	07d9      	lsls	r1, r3, #31
 800458c:	d403      	bmi.n	8004596 <__lo0bits+0x4e>
 800458e:	085b      	lsrs	r3, r3, #1
 8004590:	f102 0201 	add.w	r2, r2, #1
 8004594:	d003      	beq.n	800459e <__lo0bits+0x56>
 8004596:	6003      	str	r3, [r0, #0]
 8004598:	e7e5      	b.n	8004566 <__lo0bits+0x1e>
 800459a:	2200      	movs	r2, #0
 800459c:	e7e3      	b.n	8004566 <__lo0bits+0x1e>
 800459e:	2220      	movs	r2, #32
 80045a0:	e7e1      	b.n	8004566 <__lo0bits+0x1e>
	...

080045a4 <__i2b>:
 80045a4:	b510      	push	{r4, lr}
 80045a6:	460c      	mov	r4, r1
 80045a8:	2101      	movs	r1, #1
 80045aa:	f7ff febb 	bl	8004324 <_Balloc>
 80045ae:	4602      	mov	r2, r0
 80045b0:	b928      	cbnz	r0, 80045be <__i2b+0x1a>
 80045b2:	4b05      	ldr	r3, [pc, #20]	; (80045c8 <__i2b+0x24>)
 80045b4:	4805      	ldr	r0, [pc, #20]	; (80045cc <__i2b+0x28>)
 80045b6:	f240 1145 	movw	r1, #325	; 0x145
 80045ba:	f7fe ff1b 	bl	80033f4 <__assert_func>
 80045be:	2301      	movs	r3, #1
 80045c0:	6144      	str	r4, [r0, #20]
 80045c2:	6103      	str	r3, [r0, #16]
 80045c4:	bd10      	pop	{r4, pc}
 80045c6:	bf00      	nop
 80045c8:	08006e71 	.word	0x08006e71
 80045cc:	08006e82 	.word	0x08006e82

080045d0 <__multiply>:
 80045d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045d4:	4691      	mov	r9, r2
 80045d6:	690a      	ldr	r2, [r1, #16]
 80045d8:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80045dc:	429a      	cmp	r2, r3
 80045de:	bfb8      	it	lt
 80045e0:	460b      	movlt	r3, r1
 80045e2:	460c      	mov	r4, r1
 80045e4:	bfbc      	itt	lt
 80045e6:	464c      	movlt	r4, r9
 80045e8:	4699      	movlt	r9, r3
 80045ea:	6927      	ldr	r7, [r4, #16]
 80045ec:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80045f0:	68a3      	ldr	r3, [r4, #8]
 80045f2:	6861      	ldr	r1, [r4, #4]
 80045f4:	eb07 060a 	add.w	r6, r7, sl
 80045f8:	42b3      	cmp	r3, r6
 80045fa:	b085      	sub	sp, #20
 80045fc:	bfb8      	it	lt
 80045fe:	3101      	addlt	r1, #1
 8004600:	f7ff fe90 	bl	8004324 <_Balloc>
 8004604:	b930      	cbnz	r0, 8004614 <__multiply+0x44>
 8004606:	4602      	mov	r2, r0
 8004608:	4b44      	ldr	r3, [pc, #272]	; (800471c <__multiply+0x14c>)
 800460a:	4845      	ldr	r0, [pc, #276]	; (8004720 <__multiply+0x150>)
 800460c:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8004610:	f7fe fef0 	bl	80033f4 <__assert_func>
 8004614:	f100 0514 	add.w	r5, r0, #20
 8004618:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800461c:	462b      	mov	r3, r5
 800461e:	2200      	movs	r2, #0
 8004620:	4543      	cmp	r3, r8
 8004622:	d321      	bcc.n	8004668 <__multiply+0x98>
 8004624:	f104 0314 	add.w	r3, r4, #20
 8004628:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800462c:	f109 0314 	add.w	r3, r9, #20
 8004630:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8004634:	9202      	str	r2, [sp, #8]
 8004636:	1b3a      	subs	r2, r7, r4
 8004638:	3a15      	subs	r2, #21
 800463a:	f022 0203 	bic.w	r2, r2, #3
 800463e:	3204      	adds	r2, #4
 8004640:	f104 0115 	add.w	r1, r4, #21
 8004644:	428f      	cmp	r7, r1
 8004646:	bf38      	it	cc
 8004648:	2204      	movcc	r2, #4
 800464a:	9201      	str	r2, [sp, #4]
 800464c:	9a02      	ldr	r2, [sp, #8]
 800464e:	9303      	str	r3, [sp, #12]
 8004650:	429a      	cmp	r2, r3
 8004652:	d80c      	bhi.n	800466e <__multiply+0x9e>
 8004654:	2e00      	cmp	r6, #0
 8004656:	dd03      	ble.n	8004660 <__multiply+0x90>
 8004658:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800465c:	2b00      	cmp	r3, #0
 800465e:	d05b      	beq.n	8004718 <__multiply+0x148>
 8004660:	6106      	str	r6, [r0, #16]
 8004662:	b005      	add	sp, #20
 8004664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004668:	f843 2b04 	str.w	r2, [r3], #4
 800466c:	e7d8      	b.n	8004620 <__multiply+0x50>
 800466e:	f8b3 a000 	ldrh.w	sl, [r3]
 8004672:	f1ba 0f00 	cmp.w	sl, #0
 8004676:	d024      	beq.n	80046c2 <__multiply+0xf2>
 8004678:	f104 0e14 	add.w	lr, r4, #20
 800467c:	46a9      	mov	r9, r5
 800467e:	f04f 0c00 	mov.w	ip, #0
 8004682:	f85e 2b04 	ldr.w	r2, [lr], #4
 8004686:	f8d9 1000 	ldr.w	r1, [r9]
 800468a:	fa1f fb82 	uxth.w	fp, r2
 800468e:	b289      	uxth	r1, r1
 8004690:	fb0a 110b 	mla	r1, sl, fp, r1
 8004694:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8004698:	f8d9 2000 	ldr.w	r2, [r9]
 800469c:	4461      	add	r1, ip
 800469e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80046a2:	fb0a c20b 	mla	r2, sl, fp, ip
 80046a6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80046aa:	b289      	uxth	r1, r1
 80046ac:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80046b0:	4577      	cmp	r7, lr
 80046b2:	f849 1b04 	str.w	r1, [r9], #4
 80046b6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80046ba:	d8e2      	bhi.n	8004682 <__multiply+0xb2>
 80046bc:	9a01      	ldr	r2, [sp, #4]
 80046be:	f845 c002 	str.w	ip, [r5, r2]
 80046c2:	9a03      	ldr	r2, [sp, #12]
 80046c4:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80046c8:	3304      	adds	r3, #4
 80046ca:	f1b9 0f00 	cmp.w	r9, #0
 80046ce:	d021      	beq.n	8004714 <__multiply+0x144>
 80046d0:	6829      	ldr	r1, [r5, #0]
 80046d2:	f104 0c14 	add.w	ip, r4, #20
 80046d6:	46ae      	mov	lr, r5
 80046d8:	f04f 0a00 	mov.w	sl, #0
 80046dc:	f8bc b000 	ldrh.w	fp, [ip]
 80046e0:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80046e4:	fb09 220b 	mla	r2, r9, fp, r2
 80046e8:	4452      	add	r2, sl
 80046ea:	b289      	uxth	r1, r1
 80046ec:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80046f0:	f84e 1b04 	str.w	r1, [lr], #4
 80046f4:	f85c 1b04 	ldr.w	r1, [ip], #4
 80046f8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80046fc:	f8be 1000 	ldrh.w	r1, [lr]
 8004700:	fb09 110a 	mla	r1, r9, sl, r1
 8004704:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8004708:	4567      	cmp	r7, ip
 800470a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800470e:	d8e5      	bhi.n	80046dc <__multiply+0x10c>
 8004710:	9a01      	ldr	r2, [sp, #4]
 8004712:	50a9      	str	r1, [r5, r2]
 8004714:	3504      	adds	r5, #4
 8004716:	e799      	b.n	800464c <__multiply+0x7c>
 8004718:	3e01      	subs	r6, #1
 800471a:	e79b      	b.n	8004654 <__multiply+0x84>
 800471c:	08006e71 	.word	0x08006e71
 8004720:	08006e82 	.word	0x08006e82

08004724 <__pow5mult>:
 8004724:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004728:	4615      	mov	r5, r2
 800472a:	f012 0203 	ands.w	r2, r2, #3
 800472e:	4606      	mov	r6, r0
 8004730:	460f      	mov	r7, r1
 8004732:	d007      	beq.n	8004744 <__pow5mult+0x20>
 8004734:	4c25      	ldr	r4, [pc, #148]	; (80047cc <__pow5mult+0xa8>)
 8004736:	3a01      	subs	r2, #1
 8004738:	2300      	movs	r3, #0
 800473a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800473e:	f7ff fe53 	bl	80043e8 <__multadd>
 8004742:	4607      	mov	r7, r0
 8004744:	10ad      	asrs	r5, r5, #2
 8004746:	d03d      	beq.n	80047c4 <__pow5mult+0xa0>
 8004748:	69f4      	ldr	r4, [r6, #28]
 800474a:	b97c      	cbnz	r4, 800476c <__pow5mult+0x48>
 800474c:	2010      	movs	r0, #16
 800474e:	f7ff fd35 	bl	80041bc <malloc>
 8004752:	4602      	mov	r2, r0
 8004754:	61f0      	str	r0, [r6, #28]
 8004756:	b928      	cbnz	r0, 8004764 <__pow5mult+0x40>
 8004758:	4b1d      	ldr	r3, [pc, #116]	; (80047d0 <__pow5mult+0xac>)
 800475a:	481e      	ldr	r0, [pc, #120]	; (80047d4 <__pow5mult+0xb0>)
 800475c:	f240 11b3 	movw	r1, #435	; 0x1b3
 8004760:	f7fe fe48 	bl	80033f4 <__assert_func>
 8004764:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004768:	6004      	str	r4, [r0, #0]
 800476a:	60c4      	str	r4, [r0, #12]
 800476c:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8004770:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004774:	b94c      	cbnz	r4, 800478a <__pow5mult+0x66>
 8004776:	f240 2171 	movw	r1, #625	; 0x271
 800477a:	4630      	mov	r0, r6
 800477c:	f7ff ff12 	bl	80045a4 <__i2b>
 8004780:	2300      	movs	r3, #0
 8004782:	f8c8 0008 	str.w	r0, [r8, #8]
 8004786:	4604      	mov	r4, r0
 8004788:	6003      	str	r3, [r0, #0]
 800478a:	f04f 0900 	mov.w	r9, #0
 800478e:	07eb      	lsls	r3, r5, #31
 8004790:	d50a      	bpl.n	80047a8 <__pow5mult+0x84>
 8004792:	4639      	mov	r1, r7
 8004794:	4622      	mov	r2, r4
 8004796:	4630      	mov	r0, r6
 8004798:	f7ff ff1a 	bl	80045d0 <__multiply>
 800479c:	4639      	mov	r1, r7
 800479e:	4680      	mov	r8, r0
 80047a0:	4630      	mov	r0, r6
 80047a2:	f7ff fdff 	bl	80043a4 <_Bfree>
 80047a6:	4647      	mov	r7, r8
 80047a8:	106d      	asrs	r5, r5, #1
 80047aa:	d00b      	beq.n	80047c4 <__pow5mult+0xa0>
 80047ac:	6820      	ldr	r0, [r4, #0]
 80047ae:	b938      	cbnz	r0, 80047c0 <__pow5mult+0x9c>
 80047b0:	4622      	mov	r2, r4
 80047b2:	4621      	mov	r1, r4
 80047b4:	4630      	mov	r0, r6
 80047b6:	f7ff ff0b 	bl	80045d0 <__multiply>
 80047ba:	6020      	str	r0, [r4, #0]
 80047bc:	f8c0 9000 	str.w	r9, [r0]
 80047c0:	4604      	mov	r4, r0
 80047c2:	e7e4      	b.n	800478e <__pow5mult+0x6a>
 80047c4:	4638      	mov	r0, r7
 80047c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80047ca:	bf00      	nop
 80047cc:	08006fd0 	.word	0x08006fd0
 80047d0:	08006e02 	.word	0x08006e02
 80047d4:	08006e82 	.word	0x08006e82

080047d8 <__lshift>:
 80047d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047dc:	460c      	mov	r4, r1
 80047de:	6849      	ldr	r1, [r1, #4]
 80047e0:	6923      	ldr	r3, [r4, #16]
 80047e2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80047e6:	68a3      	ldr	r3, [r4, #8]
 80047e8:	4607      	mov	r7, r0
 80047ea:	4691      	mov	r9, r2
 80047ec:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80047f0:	f108 0601 	add.w	r6, r8, #1
 80047f4:	42b3      	cmp	r3, r6
 80047f6:	db0b      	blt.n	8004810 <__lshift+0x38>
 80047f8:	4638      	mov	r0, r7
 80047fa:	f7ff fd93 	bl	8004324 <_Balloc>
 80047fe:	4605      	mov	r5, r0
 8004800:	b948      	cbnz	r0, 8004816 <__lshift+0x3e>
 8004802:	4602      	mov	r2, r0
 8004804:	4b28      	ldr	r3, [pc, #160]	; (80048a8 <__lshift+0xd0>)
 8004806:	4829      	ldr	r0, [pc, #164]	; (80048ac <__lshift+0xd4>)
 8004808:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800480c:	f7fe fdf2 	bl	80033f4 <__assert_func>
 8004810:	3101      	adds	r1, #1
 8004812:	005b      	lsls	r3, r3, #1
 8004814:	e7ee      	b.n	80047f4 <__lshift+0x1c>
 8004816:	2300      	movs	r3, #0
 8004818:	f100 0114 	add.w	r1, r0, #20
 800481c:	f100 0210 	add.w	r2, r0, #16
 8004820:	4618      	mov	r0, r3
 8004822:	4553      	cmp	r3, sl
 8004824:	db33      	blt.n	800488e <__lshift+0xb6>
 8004826:	6920      	ldr	r0, [r4, #16]
 8004828:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800482c:	f104 0314 	add.w	r3, r4, #20
 8004830:	f019 091f 	ands.w	r9, r9, #31
 8004834:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004838:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800483c:	d02b      	beq.n	8004896 <__lshift+0xbe>
 800483e:	f1c9 0e20 	rsb	lr, r9, #32
 8004842:	468a      	mov	sl, r1
 8004844:	2200      	movs	r2, #0
 8004846:	6818      	ldr	r0, [r3, #0]
 8004848:	fa00 f009 	lsl.w	r0, r0, r9
 800484c:	4310      	orrs	r0, r2
 800484e:	f84a 0b04 	str.w	r0, [sl], #4
 8004852:	f853 2b04 	ldr.w	r2, [r3], #4
 8004856:	459c      	cmp	ip, r3
 8004858:	fa22 f20e 	lsr.w	r2, r2, lr
 800485c:	d8f3      	bhi.n	8004846 <__lshift+0x6e>
 800485e:	ebac 0304 	sub.w	r3, ip, r4
 8004862:	3b15      	subs	r3, #21
 8004864:	f023 0303 	bic.w	r3, r3, #3
 8004868:	3304      	adds	r3, #4
 800486a:	f104 0015 	add.w	r0, r4, #21
 800486e:	4584      	cmp	ip, r0
 8004870:	bf38      	it	cc
 8004872:	2304      	movcc	r3, #4
 8004874:	50ca      	str	r2, [r1, r3]
 8004876:	b10a      	cbz	r2, 800487c <__lshift+0xa4>
 8004878:	f108 0602 	add.w	r6, r8, #2
 800487c:	3e01      	subs	r6, #1
 800487e:	4638      	mov	r0, r7
 8004880:	612e      	str	r6, [r5, #16]
 8004882:	4621      	mov	r1, r4
 8004884:	f7ff fd8e 	bl	80043a4 <_Bfree>
 8004888:	4628      	mov	r0, r5
 800488a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800488e:	f842 0f04 	str.w	r0, [r2, #4]!
 8004892:	3301      	adds	r3, #1
 8004894:	e7c5      	b.n	8004822 <__lshift+0x4a>
 8004896:	3904      	subs	r1, #4
 8004898:	f853 2b04 	ldr.w	r2, [r3], #4
 800489c:	f841 2f04 	str.w	r2, [r1, #4]!
 80048a0:	459c      	cmp	ip, r3
 80048a2:	d8f9      	bhi.n	8004898 <__lshift+0xc0>
 80048a4:	e7ea      	b.n	800487c <__lshift+0xa4>
 80048a6:	bf00      	nop
 80048a8:	08006e71 	.word	0x08006e71
 80048ac:	08006e82 	.word	0x08006e82

080048b0 <__mcmp>:
 80048b0:	b530      	push	{r4, r5, lr}
 80048b2:	6902      	ldr	r2, [r0, #16]
 80048b4:	690c      	ldr	r4, [r1, #16]
 80048b6:	1b12      	subs	r2, r2, r4
 80048b8:	d10e      	bne.n	80048d8 <__mcmp+0x28>
 80048ba:	f100 0314 	add.w	r3, r0, #20
 80048be:	3114      	adds	r1, #20
 80048c0:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80048c4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80048c8:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80048cc:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80048d0:	42a5      	cmp	r5, r4
 80048d2:	d003      	beq.n	80048dc <__mcmp+0x2c>
 80048d4:	d305      	bcc.n	80048e2 <__mcmp+0x32>
 80048d6:	2201      	movs	r2, #1
 80048d8:	4610      	mov	r0, r2
 80048da:	bd30      	pop	{r4, r5, pc}
 80048dc:	4283      	cmp	r3, r0
 80048de:	d3f3      	bcc.n	80048c8 <__mcmp+0x18>
 80048e0:	e7fa      	b.n	80048d8 <__mcmp+0x28>
 80048e2:	f04f 32ff 	mov.w	r2, #4294967295
 80048e6:	e7f7      	b.n	80048d8 <__mcmp+0x28>

080048e8 <__mdiff>:
 80048e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048ec:	460c      	mov	r4, r1
 80048ee:	4606      	mov	r6, r0
 80048f0:	4611      	mov	r1, r2
 80048f2:	4620      	mov	r0, r4
 80048f4:	4690      	mov	r8, r2
 80048f6:	f7ff ffdb 	bl	80048b0 <__mcmp>
 80048fa:	1e05      	subs	r5, r0, #0
 80048fc:	d110      	bne.n	8004920 <__mdiff+0x38>
 80048fe:	4629      	mov	r1, r5
 8004900:	4630      	mov	r0, r6
 8004902:	f7ff fd0f 	bl	8004324 <_Balloc>
 8004906:	b930      	cbnz	r0, 8004916 <__mdiff+0x2e>
 8004908:	4b3a      	ldr	r3, [pc, #232]	; (80049f4 <__mdiff+0x10c>)
 800490a:	4602      	mov	r2, r0
 800490c:	f240 2137 	movw	r1, #567	; 0x237
 8004910:	4839      	ldr	r0, [pc, #228]	; (80049f8 <__mdiff+0x110>)
 8004912:	f7fe fd6f 	bl	80033f4 <__assert_func>
 8004916:	2301      	movs	r3, #1
 8004918:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800491c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004920:	bfa4      	itt	ge
 8004922:	4643      	movge	r3, r8
 8004924:	46a0      	movge	r8, r4
 8004926:	4630      	mov	r0, r6
 8004928:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800492c:	bfa6      	itte	ge
 800492e:	461c      	movge	r4, r3
 8004930:	2500      	movge	r5, #0
 8004932:	2501      	movlt	r5, #1
 8004934:	f7ff fcf6 	bl	8004324 <_Balloc>
 8004938:	b920      	cbnz	r0, 8004944 <__mdiff+0x5c>
 800493a:	4b2e      	ldr	r3, [pc, #184]	; (80049f4 <__mdiff+0x10c>)
 800493c:	4602      	mov	r2, r0
 800493e:	f240 2145 	movw	r1, #581	; 0x245
 8004942:	e7e5      	b.n	8004910 <__mdiff+0x28>
 8004944:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8004948:	6926      	ldr	r6, [r4, #16]
 800494a:	60c5      	str	r5, [r0, #12]
 800494c:	f104 0914 	add.w	r9, r4, #20
 8004950:	f108 0514 	add.w	r5, r8, #20
 8004954:	f100 0e14 	add.w	lr, r0, #20
 8004958:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800495c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8004960:	f108 0210 	add.w	r2, r8, #16
 8004964:	46f2      	mov	sl, lr
 8004966:	2100      	movs	r1, #0
 8004968:	f859 3b04 	ldr.w	r3, [r9], #4
 800496c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8004970:	fa11 f88b 	uxtah	r8, r1, fp
 8004974:	b299      	uxth	r1, r3
 8004976:	0c1b      	lsrs	r3, r3, #16
 8004978:	eba8 0801 	sub.w	r8, r8, r1
 800497c:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004980:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8004984:	fa1f f888 	uxth.w	r8, r8
 8004988:	1419      	asrs	r1, r3, #16
 800498a:	454e      	cmp	r6, r9
 800498c:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8004990:	f84a 3b04 	str.w	r3, [sl], #4
 8004994:	d8e8      	bhi.n	8004968 <__mdiff+0x80>
 8004996:	1b33      	subs	r3, r6, r4
 8004998:	3b15      	subs	r3, #21
 800499a:	f023 0303 	bic.w	r3, r3, #3
 800499e:	3304      	adds	r3, #4
 80049a0:	3415      	adds	r4, #21
 80049a2:	42a6      	cmp	r6, r4
 80049a4:	bf38      	it	cc
 80049a6:	2304      	movcc	r3, #4
 80049a8:	441d      	add	r5, r3
 80049aa:	4473      	add	r3, lr
 80049ac:	469e      	mov	lr, r3
 80049ae:	462e      	mov	r6, r5
 80049b0:	4566      	cmp	r6, ip
 80049b2:	d30e      	bcc.n	80049d2 <__mdiff+0xea>
 80049b4:	f10c 0203 	add.w	r2, ip, #3
 80049b8:	1b52      	subs	r2, r2, r5
 80049ba:	f022 0203 	bic.w	r2, r2, #3
 80049be:	3d03      	subs	r5, #3
 80049c0:	45ac      	cmp	ip, r5
 80049c2:	bf38      	it	cc
 80049c4:	2200      	movcc	r2, #0
 80049c6:	4413      	add	r3, r2
 80049c8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80049cc:	b17a      	cbz	r2, 80049ee <__mdiff+0x106>
 80049ce:	6107      	str	r7, [r0, #16]
 80049d0:	e7a4      	b.n	800491c <__mdiff+0x34>
 80049d2:	f856 8b04 	ldr.w	r8, [r6], #4
 80049d6:	fa11 f288 	uxtah	r2, r1, r8
 80049da:	1414      	asrs	r4, r2, #16
 80049dc:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80049e0:	b292      	uxth	r2, r2
 80049e2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80049e6:	f84e 2b04 	str.w	r2, [lr], #4
 80049ea:	1421      	asrs	r1, r4, #16
 80049ec:	e7e0      	b.n	80049b0 <__mdiff+0xc8>
 80049ee:	3f01      	subs	r7, #1
 80049f0:	e7ea      	b.n	80049c8 <__mdiff+0xe0>
 80049f2:	bf00      	nop
 80049f4:	08006e71 	.word	0x08006e71
 80049f8:	08006e82 	.word	0x08006e82

080049fc <__ulp>:
 80049fc:	b082      	sub	sp, #8
 80049fe:	ed8d 0b00 	vstr	d0, [sp]
 8004a02:	9a01      	ldr	r2, [sp, #4]
 8004a04:	4b0f      	ldr	r3, [pc, #60]	; (8004a44 <__ulp+0x48>)
 8004a06:	4013      	ands	r3, r2
 8004a08:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8004a0c:	2b00      	cmp	r3, #0
 8004a0e:	dc08      	bgt.n	8004a22 <__ulp+0x26>
 8004a10:	425b      	negs	r3, r3
 8004a12:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8004a16:	ea4f 5223 	mov.w	r2, r3, asr #20
 8004a1a:	da04      	bge.n	8004a26 <__ulp+0x2a>
 8004a1c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8004a20:	4113      	asrs	r3, r2
 8004a22:	2200      	movs	r2, #0
 8004a24:	e008      	b.n	8004a38 <__ulp+0x3c>
 8004a26:	f1a2 0314 	sub.w	r3, r2, #20
 8004a2a:	2b1e      	cmp	r3, #30
 8004a2c:	bfda      	itte	le
 8004a2e:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8004a32:	40da      	lsrle	r2, r3
 8004a34:	2201      	movgt	r2, #1
 8004a36:	2300      	movs	r3, #0
 8004a38:	4619      	mov	r1, r3
 8004a3a:	4610      	mov	r0, r2
 8004a3c:	ec41 0b10 	vmov	d0, r0, r1
 8004a40:	b002      	add	sp, #8
 8004a42:	4770      	bx	lr
 8004a44:	7ff00000 	.word	0x7ff00000

08004a48 <__b2d>:
 8004a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a4c:	6906      	ldr	r6, [r0, #16]
 8004a4e:	f100 0814 	add.w	r8, r0, #20
 8004a52:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8004a56:	1f37      	subs	r7, r6, #4
 8004a58:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004a5c:	4610      	mov	r0, r2
 8004a5e:	f7ff fd53 	bl	8004508 <__hi0bits>
 8004a62:	f1c0 0320 	rsb	r3, r0, #32
 8004a66:	280a      	cmp	r0, #10
 8004a68:	600b      	str	r3, [r1, #0]
 8004a6a:	491b      	ldr	r1, [pc, #108]	; (8004ad8 <__b2d+0x90>)
 8004a6c:	dc15      	bgt.n	8004a9a <__b2d+0x52>
 8004a6e:	f1c0 0c0b 	rsb	ip, r0, #11
 8004a72:	fa22 f30c 	lsr.w	r3, r2, ip
 8004a76:	45b8      	cmp	r8, r7
 8004a78:	ea43 0501 	orr.w	r5, r3, r1
 8004a7c:	bf34      	ite	cc
 8004a7e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004a82:	2300      	movcs	r3, #0
 8004a84:	3015      	adds	r0, #21
 8004a86:	fa02 f000 	lsl.w	r0, r2, r0
 8004a8a:	fa23 f30c 	lsr.w	r3, r3, ip
 8004a8e:	4303      	orrs	r3, r0
 8004a90:	461c      	mov	r4, r3
 8004a92:	ec45 4b10 	vmov	d0, r4, r5
 8004a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004a9a:	45b8      	cmp	r8, r7
 8004a9c:	bf3a      	itte	cc
 8004a9e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004aa2:	f1a6 0708 	subcc.w	r7, r6, #8
 8004aa6:	2300      	movcs	r3, #0
 8004aa8:	380b      	subs	r0, #11
 8004aaa:	d012      	beq.n	8004ad2 <__b2d+0x8a>
 8004aac:	f1c0 0120 	rsb	r1, r0, #32
 8004ab0:	fa23 f401 	lsr.w	r4, r3, r1
 8004ab4:	4082      	lsls	r2, r0
 8004ab6:	4322      	orrs	r2, r4
 8004ab8:	4547      	cmp	r7, r8
 8004aba:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8004abe:	bf8c      	ite	hi
 8004ac0:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8004ac4:	2200      	movls	r2, #0
 8004ac6:	4083      	lsls	r3, r0
 8004ac8:	40ca      	lsrs	r2, r1
 8004aca:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8004ace:	4313      	orrs	r3, r2
 8004ad0:	e7de      	b.n	8004a90 <__b2d+0x48>
 8004ad2:	ea42 0501 	orr.w	r5, r2, r1
 8004ad6:	e7db      	b.n	8004a90 <__b2d+0x48>
 8004ad8:	3ff00000 	.word	0x3ff00000

08004adc <__d2b>:
 8004adc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004ae0:	460f      	mov	r7, r1
 8004ae2:	2101      	movs	r1, #1
 8004ae4:	ec59 8b10 	vmov	r8, r9, d0
 8004ae8:	4616      	mov	r6, r2
 8004aea:	f7ff fc1b 	bl	8004324 <_Balloc>
 8004aee:	4604      	mov	r4, r0
 8004af0:	b930      	cbnz	r0, 8004b00 <__d2b+0x24>
 8004af2:	4602      	mov	r2, r0
 8004af4:	4b24      	ldr	r3, [pc, #144]	; (8004b88 <__d2b+0xac>)
 8004af6:	4825      	ldr	r0, [pc, #148]	; (8004b8c <__d2b+0xb0>)
 8004af8:	f240 310f 	movw	r1, #783	; 0x30f
 8004afc:	f7fe fc7a 	bl	80033f4 <__assert_func>
 8004b00:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004b04:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004b08:	bb2d      	cbnz	r5, 8004b56 <__d2b+0x7a>
 8004b0a:	9301      	str	r3, [sp, #4]
 8004b0c:	f1b8 0300 	subs.w	r3, r8, #0
 8004b10:	d026      	beq.n	8004b60 <__d2b+0x84>
 8004b12:	4668      	mov	r0, sp
 8004b14:	9300      	str	r3, [sp, #0]
 8004b16:	f7ff fd17 	bl	8004548 <__lo0bits>
 8004b1a:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004b1e:	b1e8      	cbz	r0, 8004b5c <__d2b+0x80>
 8004b20:	f1c0 0320 	rsb	r3, r0, #32
 8004b24:	fa02 f303 	lsl.w	r3, r2, r3
 8004b28:	430b      	orrs	r3, r1
 8004b2a:	40c2      	lsrs	r2, r0
 8004b2c:	6163      	str	r3, [r4, #20]
 8004b2e:	9201      	str	r2, [sp, #4]
 8004b30:	9b01      	ldr	r3, [sp, #4]
 8004b32:	61a3      	str	r3, [r4, #24]
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	bf14      	ite	ne
 8004b38:	2202      	movne	r2, #2
 8004b3a:	2201      	moveq	r2, #1
 8004b3c:	6122      	str	r2, [r4, #16]
 8004b3e:	b1bd      	cbz	r5, 8004b70 <__d2b+0x94>
 8004b40:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8004b44:	4405      	add	r5, r0
 8004b46:	603d      	str	r5, [r7, #0]
 8004b48:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004b4c:	6030      	str	r0, [r6, #0]
 8004b4e:	4620      	mov	r0, r4
 8004b50:	b003      	add	sp, #12
 8004b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004b56:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004b5a:	e7d6      	b.n	8004b0a <__d2b+0x2e>
 8004b5c:	6161      	str	r1, [r4, #20]
 8004b5e:	e7e7      	b.n	8004b30 <__d2b+0x54>
 8004b60:	a801      	add	r0, sp, #4
 8004b62:	f7ff fcf1 	bl	8004548 <__lo0bits>
 8004b66:	9b01      	ldr	r3, [sp, #4]
 8004b68:	6163      	str	r3, [r4, #20]
 8004b6a:	3020      	adds	r0, #32
 8004b6c:	2201      	movs	r2, #1
 8004b6e:	e7e5      	b.n	8004b3c <__d2b+0x60>
 8004b70:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004b74:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004b78:	6038      	str	r0, [r7, #0]
 8004b7a:	6918      	ldr	r0, [r3, #16]
 8004b7c:	f7ff fcc4 	bl	8004508 <__hi0bits>
 8004b80:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004b84:	e7e2      	b.n	8004b4c <__d2b+0x70>
 8004b86:	bf00      	nop
 8004b88:	08006e71 	.word	0x08006e71
 8004b8c:	08006e82 	.word	0x08006e82

08004b90 <__ratio>:
 8004b90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b94:	4688      	mov	r8, r1
 8004b96:	4669      	mov	r1, sp
 8004b98:	4681      	mov	r9, r0
 8004b9a:	f7ff ff55 	bl	8004a48 <__b2d>
 8004b9e:	a901      	add	r1, sp, #4
 8004ba0:	4640      	mov	r0, r8
 8004ba2:	ec55 4b10 	vmov	r4, r5, d0
 8004ba6:	f7ff ff4f 	bl	8004a48 <__b2d>
 8004baa:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004bae:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8004bb2:	eba3 0c02 	sub.w	ip, r3, r2
 8004bb6:	e9dd 3200 	ldrd	r3, r2, [sp]
 8004bba:	1a9b      	subs	r3, r3, r2
 8004bbc:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8004bc0:	ec51 0b10 	vmov	r0, r1, d0
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	bfd6      	itet	le
 8004bc8:	460a      	movle	r2, r1
 8004bca:	462a      	movgt	r2, r5
 8004bcc:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004bd0:	468b      	mov	fp, r1
 8004bd2:	462f      	mov	r7, r5
 8004bd4:	bfd4      	ite	le
 8004bd6:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8004bda:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8004bde:	4620      	mov	r0, r4
 8004be0:	ee10 2a10 	vmov	r2, s0
 8004be4:	465b      	mov	r3, fp
 8004be6:	4639      	mov	r1, r7
 8004be8:	f7fb fe38 	bl	800085c <__aeabi_ddiv>
 8004bec:	ec41 0b10 	vmov	d0, r0, r1
 8004bf0:	b003      	add	sp, #12
 8004bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004bf6 <__copybits>:
 8004bf6:	3901      	subs	r1, #1
 8004bf8:	b570      	push	{r4, r5, r6, lr}
 8004bfa:	1149      	asrs	r1, r1, #5
 8004bfc:	6914      	ldr	r4, [r2, #16]
 8004bfe:	3101      	adds	r1, #1
 8004c00:	f102 0314 	add.w	r3, r2, #20
 8004c04:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004c08:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004c0c:	1f05      	subs	r5, r0, #4
 8004c0e:	42a3      	cmp	r3, r4
 8004c10:	d30c      	bcc.n	8004c2c <__copybits+0x36>
 8004c12:	1aa3      	subs	r3, r4, r2
 8004c14:	3b11      	subs	r3, #17
 8004c16:	f023 0303 	bic.w	r3, r3, #3
 8004c1a:	3211      	adds	r2, #17
 8004c1c:	42a2      	cmp	r2, r4
 8004c1e:	bf88      	it	hi
 8004c20:	2300      	movhi	r3, #0
 8004c22:	4418      	add	r0, r3
 8004c24:	2300      	movs	r3, #0
 8004c26:	4288      	cmp	r0, r1
 8004c28:	d305      	bcc.n	8004c36 <__copybits+0x40>
 8004c2a:	bd70      	pop	{r4, r5, r6, pc}
 8004c2c:	f853 6b04 	ldr.w	r6, [r3], #4
 8004c30:	f845 6f04 	str.w	r6, [r5, #4]!
 8004c34:	e7eb      	b.n	8004c0e <__copybits+0x18>
 8004c36:	f840 3b04 	str.w	r3, [r0], #4
 8004c3a:	e7f4      	b.n	8004c26 <__copybits+0x30>

08004c3c <__any_on>:
 8004c3c:	f100 0214 	add.w	r2, r0, #20
 8004c40:	6900      	ldr	r0, [r0, #16]
 8004c42:	114b      	asrs	r3, r1, #5
 8004c44:	4298      	cmp	r0, r3
 8004c46:	b510      	push	{r4, lr}
 8004c48:	db11      	blt.n	8004c6e <__any_on+0x32>
 8004c4a:	dd0a      	ble.n	8004c62 <__any_on+0x26>
 8004c4c:	f011 011f 	ands.w	r1, r1, #31
 8004c50:	d007      	beq.n	8004c62 <__any_on+0x26>
 8004c52:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004c56:	fa24 f001 	lsr.w	r0, r4, r1
 8004c5a:	fa00 f101 	lsl.w	r1, r0, r1
 8004c5e:	428c      	cmp	r4, r1
 8004c60:	d10b      	bne.n	8004c7a <__any_on+0x3e>
 8004c62:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004c66:	4293      	cmp	r3, r2
 8004c68:	d803      	bhi.n	8004c72 <__any_on+0x36>
 8004c6a:	2000      	movs	r0, #0
 8004c6c:	bd10      	pop	{r4, pc}
 8004c6e:	4603      	mov	r3, r0
 8004c70:	e7f7      	b.n	8004c62 <__any_on+0x26>
 8004c72:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004c76:	2900      	cmp	r1, #0
 8004c78:	d0f5      	beq.n	8004c66 <__any_on+0x2a>
 8004c7a:	2001      	movs	r0, #1
 8004c7c:	e7f6      	b.n	8004c6c <__any_on+0x30>

08004c7e <sulp>:
 8004c7e:	b570      	push	{r4, r5, r6, lr}
 8004c80:	4604      	mov	r4, r0
 8004c82:	460d      	mov	r5, r1
 8004c84:	ec45 4b10 	vmov	d0, r4, r5
 8004c88:	4616      	mov	r6, r2
 8004c8a:	f7ff feb7 	bl	80049fc <__ulp>
 8004c8e:	ec51 0b10 	vmov	r0, r1, d0
 8004c92:	b17e      	cbz	r6, 8004cb4 <sulp+0x36>
 8004c94:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004c98:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	dd09      	ble.n	8004cb4 <sulp+0x36>
 8004ca0:	051b      	lsls	r3, r3, #20
 8004ca2:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8004ca6:	2400      	movs	r4, #0
 8004ca8:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8004cac:	4622      	mov	r2, r4
 8004cae:	462b      	mov	r3, r5
 8004cb0:	f7fb fcaa 	bl	8000608 <__aeabi_dmul>
 8004cb4:	bd70      	pop	{r4, r5, r6, pc}
	...

08004cb8 <_strtod_l>:
 8004cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004cbc:	ed2d 8b02 	vpush	{d8}
 8004cc0:	b09b      	sub	sp, #108	; 0x6c
 8004cc2:	4604      	mov	r4, r0
 8004cc4:	9213      	str	r2, [sp, #76]	; 0x4c
 8004cc6:	2200      	movs	r2, #0
 8004cc8:	9216      	str	r2, [sp, #88]	; 0x58
 8004cca:	460d      	mov	r5, r1
 8004ccc:	f04f 0800 	mov.w	r8, #0
 8004cd0:	f04f 0900 	mov.w	r9, #0
 8004cd4:	460a      	mov	r2, r1
 8004cd6:	9215      	str	r2, [sp, #84]	; 0x54
 8004cd8:	7811      	ldrb	r1, [r2, #0]
 8004cda:	292b      	cmp	r1, #43	; 0x2b
 8004cdc:	d04c      	beq.n	8004d78 <_strtod_l+0xc0>
 8004cde:	d83a      	bhi.n	8004d56 <_strtod_l+0x9e>
 8004ce0:	290d      	cmp	r1, #13
 8004ce2:	d834      	bhi.n	8004d4e <_strtod_l+0x96>
 8004ce4:	2908      	cmp	r1, #8
 8004ce6:	d834      	bhi.n	8004d52 <_strtod_l+0x9a>
 8004ce8:	2900      	cmp	r1, #0
 8004cea:	d03d      	beq.n	8004d68 <_strtod_l+0xb0>
 8004cec:	2200      	movs	r2, #0
 8004cee:	920a      	str	r2, [sp, #40]	; 0x28
 8004cf0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8004cf2:	7832      	ldrb	r2, [r6, #0]
 8004cf4:	2a30      	cmp	r2, #48	; 0x30
 8004cf6:	f040 80b4 	bne.w	8004e62 <_strtod_l+0x1aa>
 8004cfa:	7872      	ldrb	r2, [r6, #1]
 8004cfc:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8004d00:	2a58      	cmp	r2, #88	; 0x58
 8004d02:	d170      	bne.n	8004de6 <_strtod_l+0x12e>
 8004d04:	9302      	str	r3, [sp, #8]
 8004d06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d08:	9301      	str	r3, [sp, #4]
 8004d0a:	ab16      	add	r3, sp, #88	; 0x58
 8004d0c:	9300      	str	r3, [sp, #0]
 8004d0e:	4a8e      	ldr	r2, [pc, #568]	; (8004f48 <_strtod_l+0x290>)
 8004d10:	ab17      	add	r3, sp, #92	; 0x5c
 8004d12:	a915      	add	r1, sp, #84	; 0x54
 8004d14:	4620      	mov	r0, r4
 8004d16:	f001 fb13 	bl	8006340 <__gethex>
 8004d1a:	f010 070f 	ands.w	r7, r0, #15
 8004d1e:	4605      	mov	r5, r0
 8004d20:	d005      	beq.n	8004d2e <_strtod_l+0x76>
 8004d22:	2f06      	cmp	r7, #6
 8004d24:	d12a      	bne.n	8004d7c <_strtod_l+0xc4>
 8004d26:	3601      	adds	r6, #1
 8004d28:	2300      	movs	r3, #0
 8004d2a:	9615      	str	r6, [sp, #84]	; 0x54
 8004d2c:	930a      	str	r3, [sp, #40]	; 0x28
 8004d2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004d30:	2b00      	cmp	r3, #0
 8004d32:	f040 857f 	bne.w	8005834 <_strtod_l+0xb7c>
 8004d36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d38:	b1db      	cbz	r3, 8004d72 <_strtod_l+0xba>
 8004d3a:	4642      	mov	r2, r8
 8004d3c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004d40:	ec43 2b10 	vmov	d0, r2, r3
 8004d44:	b01b      	add	sp, #108	; 0x6c
 8004d46:	ecbd 8b02 	vpop	{d8}
 8004d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d4e:	2920      	cmp	r1, #32
 8004d50:	d1cc      	bne.n	8004cec <_strtod_l+0x34>
 8004d52:	3201      	adds	r2, #1
 8004d54:	e7bf      	b.n	8004cd6 <_strtod_l+0x1e>
 8004d56:	292d      	cmp	r1, #45	; 0x2d
 8004d58:	d1c8      	bne.n	8004cec <_strtod_l+0x34>
 8004d5a:	2101      	movs	r1, #1
 8004d5c:	910a      	str	r1, [sp, #40]	; 0x28
 8004d5e:	1c51      	adds	r1, r2, #1
 8004d60:	9115      	str	r1, [sp, #84]	; 0x54
 8004d62:	7852      	ldrb	r2, [r2, #1]
 8004d64:	2a00      	cmp	r2, #0
 8004d66:	d1c3      	bne.n	8004cf0 <_strtod_l+0x38>
 8004d68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004d6a:	9515      	str	r5, [sp, #84]	; 0x54
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	f040 855f 	bne.w	8005830 <_strtod_l+0xb78>
 8004d72:	4642      	mov	r2, r8
 8004d74:	464b      	mov	r3, r9
 8004d76:	e7e3      	b.n	8004d40 <_strtod_l+0x88>
 8004d78:	2100      	movs	r1, #0
 8004d7a:	e7ef      	b.n	8004d5c <_strtod_l+0xa4>
 8004d7c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d7e:	b13a      	cbz	r2, 8004d90 <_strtod_l+0xd8>
 8004d80:	2135      	movs	r1, #53	; 0x35
 8004d82:	a818      	add	r0, sp, #96	; 0x60
 8004d84:	f7ff ff37 	bl	8004bf6 <__copybits>
 8004d88:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004d8a:	4620      	mov	r0, r4
 8004d8c:	f7ff fb0a 	bl	80043a4 <_Bfree>
 8004d90:	3f01      	subs	r7, #1
 8004d92:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004d94:	2f04      	cmp	r7, #4
 8004d96:	d806      	bhi.n	8004da6 <_strtod_l+0xee>
 8004d98:	e8df f007 	tbb	[pc, r7]
 8004d9c:	201d0314 	.word	0x201d0314
 8004da0:	14          	.byte	0x14
 8004da1:	00          	.byte	0x00
 8004da2:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 8004da6:	05e9      	lsls	r1, r5, #23
 8004da8:	bf48      	it	mi
 8004daa:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 8004dae:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004db2:	0d1b      	lsrs	r3, r3, #20
 8004db4:	051b      	lsls	r3, r3, #20
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d1b9      	bne.n	8004d2e <_strtod_l+0x76>
 8004dba:	f7fe fae7 	bl	800338c <__errno>
 8004dbe:	2322      	movs	r3, #34	; 0x22
 8004dc0:	6003      	str	r3, [r0, #0]
 8004dc2:	e7b4      	b.n	8004d2e <_strtod_l+0x76>
 8004dc4:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 8004dc8:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8004dcc:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004dd0:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8004dd4:	e7e7      	b.n	8004da6 <_strtod_l+0xee>
 8004dd6:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8004f50 <_strtod_l+0x298>
 8004dda:	e7e4      	b.n	8004da6 <_strtod_l+0xee>
 8004ddc:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8004de0:	f04f 38ff 	mov.w	r8, #4294967295
 8004de4:	e7df      	b.n	8004da6 <_strtod_l+0xee>
 8004de6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004de8:	1c5a      	adds	r2, r3, #1
 8004dea:	9215      	str	r2, [sp, #84]	; 0x54
 8004dec:	785b      	ldrb	r3, [r3, #1]
 8004dee:	2b30      	cmp	r3, #48	; 0x30
 8004df0:	d0f9      	beq.n	8004de6 <_strtod_l+0x12e>
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d09b      	beq.n	8004d2e <_strtod_l+0x76>
 8004df6:	2301      	movs	r3, #1
 8004df8:	f04f 0a00 	mov.w	sl, #0
 8004dfc:	9304      	str	r3, [sp, #16]
 8004dfe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004e00:	930b      	str	r3, [sp, #44]	; 0x2c
 8004e02:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8004e06:	46d3      	mov	fp, sl
 8004e08:	220a      	movs	r2, #10
 8004e0a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004e0c:	7806      	ldrb	r6, [r0, #0]
 8004e0e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8004e12:	b2d9      	uxtb	r1, r3
 8004e14:	2909      	cmp	r1, #9
 8004e16:	d926      	bls.n	8004e66 <_strtod_l+0x1ae>
 8004e18:	494c      	ldr	r1, [pc, #304]	; (8004f4c <_strtod_l+0x294>)
 8004e1a:	2201      	movs	r2, #1
 8004e1c:	f001 f9d2 	bl	80061c4 <strncmp>
 8004e20:	2800      	cmp	r0, #0
 8004e22:	d030      	beq.n	8004e86 <_strtod_l+0x1ce>
 8004e24:	2000      	movs	r0, #0
 8004e26:	4632      	mov	r2, r6
 8004e28:	9005      	str	r0, [sp, #20]
 8004e2a:	465e      	mov	r6, fp
 8004e2c:	4603      	mov	r3, r0
 8004e2e:	2a65      	cmp	r2, #101	; 0x65
 8004e30:	d001      	beq.n	8004e36 <_strtod_l+0x17e>
 8004e32:	2a45      	cmp	r2, #69	; 0x45
 8004e34:	d113      	bne.n	8004e5e <_strtod_l+0x1a6>
 8004e36:	b91e      	cbnz	r6, 8004e40 <_strtod_l+0x188>
 8004e38:	9a04      	ldr	r2, [sp, #16]
 8004e3a:	4302      	orrs	r2, r0
 8004e3c:	d094      	beq.n	8004d68 <_strtod_l+0xb0>
 8004e3e:	2600      	movs	r6, #0
 8004e40:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8004e42:	1c6a      	adds	r2, r5, #1
 8004e44:	9215      	str	r2, [sp, #84]	; 0x54
 8004e46:	786a      	ldrb	r2, [r5, #1]
 8004e48:	2a2b      	cmp	r2, #43	; 0x2b
 8004e4a:	d074      	beq.n	8004f36 <_strtod_l+0x27e>
 8004e4c:	2a2d      	cmp	r2, #45	; 0x2d
 8004e4e:	d078      	beq.n	8004f42 <_strtod_l+0x28a>
 8004e50:	f04f 0c00 	mov.w	ip, #0
 8004e54:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004e58:	2909      	cmp	r1, #9
 8004e5a:	d97f      	bls.n	8004f5c <_strtod_l+0x2a4>
 8004e5c:	9515      	str	r5, [sp, #84]	; 0x54
 8004e5e:	2700      	movs	r7, #0
 8004e60:	e09e      	b.n	8004fa0 <_strtod_l+0x2e8>
 8004e62:	2300      	movs	r3, #0
 8004e64:	e7c8      	b.n	8004df8 <_strtod_l+0x140>
 8004e66:	f1bb 0f08 	cmp.w	fp, #8
 8004e6a:	bfd8      	it	le
 8004e6c:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8004e6e:	f100 0001 	add.w	r0, r0, #1
 8004e72:	bfda      	itte	le
 8004e74:	fb02 3301 	mlale	r3, r2, r1, r3
 8004e78:	9309      	strle	r3, [sp, #36]	; 0x24
 8004e7a:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 8004e7e:	f10b 0b01 	add.w	fp, fp, #1
 8004e82:	9015      	str	r0, [sp, #84]	; 0x54
 8004e84:	e7c1      	b.n	8004e0a <_strtod_l+0x152>
 8004e86:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004e88:	1c5a      	adds	r2, r3, #1
 8004e8a:	9215      	str	r2, [sp, #84]	; 0x54
 8004e8c:	785a      	ldrb	r2, [r3, #1]
 8004e8e:	f1bb 0f00 	cmp.w	fp, #0
 8004e92:	d037      	beq.n	8004f04 <_strtod_l+0x24c>
 8004e94:	9005      	str	r0, [sp, #20]
 8004e96:	465e      	mov	r6, fp
 8004e98:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8004e9c:	2b09      	cmp	r3, #9
 8004e9e:	d912      	bls.n	8004ec6 <_strtod_l+0x20e>
 8004ea0:	2301      	movs	r3, #1
 8004ea2:	e7c4      	b.n	8004e2e <_strtod_l+0x176>
 8004ea4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ea6:	1c5a      	adds	r2, r3, #1
 8004ea8:	9215      	str	r2, [sp, #84]	; 0x54
 8004eaa:	785a      	ldrb	r2, [r3, #1]
 8004eac:	3001      	adds	r0, #1
 8004eae:	2a30      	cmp	r2, #48	; 0x30
 8004eb0:	d0f8      	beq.n	8004ea4 <_strtod_l+0x1ec>
 8004eb2:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8004eb6:	2b08      	cmp	r3, #8
 8004eb8:	f200 84c1 	bhi.w	800583e <_strtod_l+0xb86>
 8004ebc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ebe:	9005      	str	r0, [sp, #20]
 8004ec0:	2000      	movs	r0, #0
 8004ec2:	930b      	str	r3, [sp, #44]	; 0x2c
 8004ec4:	4606      	mov	r6, r0
 8004ec6:	3a30      	subs	r2, #48	; 0x30
 8004ec8:	f100 0301 	add.w	r3, r0, #1
 8004ecc:	d014      	beq.n	8004ef8 <_strtod_l+0x240>
 8004ece:	9905      	ldr	r1, [sp, #20]
 8004ed0:	4419      	add	r1, r3
 8004ed2:	9105      	str	r1, [sp, #20]
 8004ed4:	4633      	mov	r3, r6
 8004ed6:	eb00 0c06 	add.w	ip, r0, r6
 8004eda:	210a      	movs	r1, #10
 8004edc:	4563      	cmp	r3, ip
 8004ede:	d113      	bne.n	8004f08 <_strtod_l+0x250>
 8004ee0:	1833      	adds	r3, r6, r0
 8004ee2:	2b08      	cmp	r3, #8
 8004ee4:	f106 0601 	add.w	r6, r6, #1
 8004ee8:	4406      	add	r6, r0
 8004eea:	dc1a      	bgt.n	8004f22 <_strtod_l+0x26a>
 8004eec:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004eee:	230a      	movs	r3, #10
 8004ef0:	fb03 2301 	mla	r3, r3, r1, r2
 8004ef4:	9309      	str	r3, [sp, #36]	; 0x24
 8004ef6:	2300      	movs	r3, #0
 8004ef8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004efa:	1c51      	adds	r1, r2, #1
 8004efc:	9115      	str	r1, [sp, #84]	; 0x54
 8004efe:	7852      	ldrb	r2, [r2, #1]
 8004f00:	4618      	mov	r0, r3
 8004f02:	e7c9      	b.n	8004e98 <_strtod_l+0x1e0>
 8004f04:	4658      	mov	r0, fp
 8004f06:	e7d2      	b.n	8004eae <_strtod_l+0x1f6>
 8004f08:	2b08      	cmp	r3, #8
 8004f0a:	f103 0301 	add.w	r3, r3, #1
 8004f0e:	dc03      	bgt.n	8004f18 <_strtod_l+0x260>
 8004f10:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8004f12:	434f      	muls	r7, r1
 8004f14:	9709      	str	r7, [sp, #36]	; 0x24
 8004f16:	e7e1      	b.n	8004edc <_strtod_l+0x224>
 8004f18:	2b10      	cmp	r3, #16
 8004f1a:	bfd8      	it	le
 8004f1c:	fb01 fa0a 	mulle.w	sl, r1, sl
 8004f20:	e7dc      	b.n	8004edc <_strtod_l+0x224>
 8004f22:	2e10      	cmp	r6, #16
 8004f24:	bfdc      	itt	le
 8004f26:	230a      	movle	r3, #10
 8004f28:	fb03 2a0a 	mlale	sl, r3, sl, r2
 8004f2c:	e7e3      	b.n	8004ef6 <_strtod_l+0x23e>
 8004f2e:	2300      	movs	r3, #0
 8004f30:	9305      	str	r3, [sp, #20]
 8004f32:	2301      	movs	r3, #1
 8004f34:	e780      	b.n	8004e38 <_strtod_l+0x180>
 8004f36:	f04f 0c00 	mov.w	ip, #0
 8004f3a:	1caa      	adds	r2, r5, #2
 8004f3c:	9215      	str	r2, [sp, #84]	; 0x54
 8004f3e:	78aa      	ldrb	r2, [r5, #2]
 8004f40:	e788      	b.n	8004e54 <_strtod_l+0x19c>
 8004f42:	f04f 0c01 	mov.w	ip, #1
 8004f46:	e7f8      	b.n	8004f3a <_strtod_l+0x282>
 8004f48:	08006fe0 	.word	0x08006fe0
 8004f4c:	08006fdc 	.word	0x08006fdc
 8004f50:	7ff00000 	.word	0x7ff00000
 8004f54:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004f56:	1c51      	adds	r1, r2, #1
 8004f58:	9115      	str	r1, [sp, #84]	; 0x54
 8004f5a:	7852      	ldrb	r2, [r2, #1]
 8004f5c:	2a30      	cmp	r2, #48	; 0x30
 8004f5e:	d0f9      	beq.n	8004f54 <_strtod_l+0x29c>
 8004f60:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8004f64:	2908      	cmp	r1, #8
 8004f66:	f63f af7a 	bhi.w	8004e5e <_strtod_l+0x1a6>
 8004f6a:	3a30      	subs	r2, #48	; 0x30
 8004f6c:	9208      	str	r2, [sp, #32]
 8004f6e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004f70:	920c      	str	r2, [sp, #48]	; 0x30
 8004f72:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004f74:	1c57      	adds	r7, r2, #1
 8004f76:	9715      	str	r7, [sp, #84]	; 0x54
 8004f78:	7852      	ldrb	r2, [r2, #1]
 8004f7a:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8004f7e:	f1be 0f09 	cmp.w	lr, #9
 8004f82:	d938      	bls.n	8004ff6 <_strtod_l+0x33e>
 8004f84:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004f86:	1a7f      	subs	r7, r7, r1
 8004f88:	2f08      	cmp	r7, #8
 8004f8a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8004f8e:	dc03      	bgt.n	8004f98 <_strtod_l+0x2e0>
 8004f90:	9908      	ldr	r1, [sp, #32]
 8004f92:	428f      	cmp	r7, r1
 8004f94:	bfa8      	it	ge
 8004f96:	460f      	movge	r7, r1
 8004f98:	f1bc 0f00 	cmp.w	ip, #0
 8004f9c:	d000      	beq.n	8004fa0 <_strtod_l+0x2e8>
 8004f9e:	427f      	negs	r7, r7
 8004fa0:	2e00      	cmp	r6, #0
 8004fa2:	d14f      	bne.n	8005044 <_strtod_l+0x38c>
 8004fa4:	9904      	ldr	r1, [sp, #16]
 8004fa6:	4301      	orrs	r1, r0
 8004fa8:	f47f aec1 	bne.w	8004d2e <_strtod_l+0x76>
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	f47f aedb 	bne.w	8004d68 <_strtod_l+0xb0>
 8004fb2:	2a69      	cmp	r2, #105	; 0x69
 8004fb4:	d029      	beq.n	800500a <_strtod_l+0x352>
 8004fb6:	dc26      	bgt.n	8005006 <_strtod_l+0x34e>
 8004fb8:	2a49      	cmp	r2, #73	; 0x49
 8004fba:	d026      	beq.n	800500a <_strtod_l+0x352>
 8004fbc:	2a4e      	cmp	r2, #78	; 0x4e
 8004fbe:	f47f aed3 	bne.w	8004d68 <_strtod_l+0xb0>
 8004fc2:	499b      	ldr	r1, [pc, #620]	; (8005230 <_strtod_l+0x578>)
 8004fc4:	a815      	add	r0, sp, #84	; 0x54
 8004fc6:	f001 fbfb 	bl	80067c0 <__match>
 8004fca:	2800      	cmp	r0, #0
 8004fcc:	f43f aecc 	beq.w	8004d68 <_strtod_l+0xb0>
 8004fd0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004fd2:	781b      	ldrb	r3, [r3, #0]
 8004fd4:	2b28      	cmp	r3, #40	; 0x28
 8004fd6:	d12f      	bne.n	8005038 <_strtod_l+0x380>
 8004fd8:	4996      	ldr	r1, [pc, #600]	; (8005234 <_strtod_l+0x57c>)
 8004fda:	aa18      	add	r2, sp, #96	; 0x60
 8004fdc:	a815      	add	r0, sp, #84	; 0x54
 8004fde:	f001 fc03 	bl	80067e8 <__hexnan>
 8004fe2:	2805      	cmp	r0, #5
 8004fe4:	d128      	bne.n	8005038 <_strtod_l+0x380>
 8004fe6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004fe8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8004fec:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004ff0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8004ff4:	e69b      	b.n	8004d2e <_strtod_l+0x76>
 8004ff6:	9f08      	ldr	r7, [sp, #32]
 8004ff8:	210a      	movs	r1, #10
 8004ffa:	fb01 2107 	mla	r1, r1, r7, r2
 8004ffe:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8005002:	9208      	str	r2, [sp, #32]
 8005004:	e7b5      	b.n	8004f72 <_strtod_l+0x2ba>
 8005006:	2a6e      	cmp	r2, #110	; 0x6e
 8005008:	e7d9      	b.n	8004fbe <_strtod_l+0x306>
 800500a:	498b      	ldr	r1, [pc, #556]	; (8005238 <_strtod_l+0x580>)
 800500c:	a815      	add	r0, sp, #84	; 0x54
 800500e:	f001 fbd7 	bl	80067c0 <__match>
 8005012:	2800      	cmp	r0, #0
 8005014:	f43f aea8 	beq.w	8004d68 <_strtod_l+0xb0>
 8005018:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800501a:	4988      	ldr	r1, [pc, #544]	; (800523c <_strtod_l+0x584>)
 800501c:	3b01      	subs	r3, #1
 800501e:	a815      	add	r0, sp, #84	; 0x54
 8005020:	9315      	str	r3, [sp, #84]	; 0x54
 8005022:	f001 fbcd 	bl	80067c0 <__match>
 8005026:	b910      	cbnz	r0, 800502e <_strtod_l+0x376>
 8005028:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800502a:	3301      	adds	r3, #1
 800502c:	9315      	str	r3, [sp, #84]	; 0x54
 800502e:	f8df 921c 	ldr.w	r9, [pc, #540]	; 800524c <_strtod_l+0x594>
 8005032:	f04f 0800 	mov.w	r8, #0
 8005036:	e67a      	b.n	8004d2e <_strtod_l+0x76>
 8005038:	4881      	ldr	r0, [pc, #516]	; (8005240 <_strtod_l+0x588>)
 800503a:	f001 f8f5 	bl	8006228 <nan>
 800503e:	ec59 8b10 	vmov	r8, r9, d0
 8005042:	e674      	b.n	8004d2e <_strtod_l+0x76>
 8005044:	9b05      	ldr	r3, [sp, #20]
 8005046:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005048:	1afb      	subs	r3, r7, r3
 800504a:	f1bb 0f00 	cmp.w	fp, #0
 800504e:	bf08      	it	eq
 8005050:	46b3      	moveq	fp, r6
 8005052:	2e10      	cmp	r6, #16
 8005054:	9308      	str	r3, [sp, #32]
 8005056:	4635      	mov	r5, r6
 8005058:	bfa8      	it	ge
 800505a:	2510      	movge	r5, #16
 800505c:	f7fb fa5a 	bl	8000514 <__aeabi_ui2d>
 8005060:	2e09      	cmp	r6, #9
 8005062:	4680      	mov	r8, r0
 8005064:	4689      	mov	r9, r1
 8005066:	dd13      	ble.n	8005090 <_strtod_l+0x3d8>
 8005068:	4b76      	ldr	r3, [pc, #472]	; (8005244 <_strtod_l+0x58c>)
 800506a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800506e:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8005072:	f7fb fac9 	bl	8000608 <__aeabi_dmul>
 8005076:	4680      	mov	r8, r0
 8005078:	4650      	mov	r0, sl
 800507a:	4689      	mov	r9, r1
 800507c:	f7fb fa4a 	bl	8000514 <__aeabi_ui2d>
 8005080:	4602      	mov	r2, r0
 8005082:	460b      	mov	r3, r1
 8005084:	4640      	mov	r0, r8
 8005086:	4649      	mov	r1, r9
 8005088:	f7fb f908 	bl	800029c <__adddf3>
 800508c:	4680      	mov	r8, r0
 800508e:	4689      	mov	r9, r1
 8005090:	2e0f      	cmp	r6, #15
 8005092:	dc38      	bgt.n	8005106 <_strtod_l+0x44e>
 8005094:	9b08      	ldr	r3, [sp, #32]
 8005096:	2b00      	cmp	r3, #0
 8005098:	f43f ae49 	beq.w	8004d2e <_strtod_l+0x76>
 800509c:	dd24      	ble.n	80050e8 <_strtod_l+0x430>
 800509e:	2b16      	cmp	r3, #22
 80050a0:	dc0b      	bgt.n	80050ba <_strtod_l+0x402>
 80050a2:	4968      	ldr	r1, [pc, #416]	; (8005244 <_strtod_l+0x58c>)
 80050a4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80050a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80050ac:	4642      	mov	r2, r8
 80050ae:	464b      	mov	r3, r9
 80050b0:	f7fb faaa 	bl	8000608 <__aeabi_dmul>
 80050b4:	4680      	mov	r8, r0
 80050b6:	4689      	mov	r9, r1
 80050b8:	e639      	b.n	8004d2e <_strtod_l+0x76>
 80050ba:	9a08      	ldr	r2, [sp, #32]
 80050bc:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 80050c0:	4293      	cmp	r3, r2
 80050c2:	db20      	blt.n	8005106 <_strtod_l+0x44e>
 80050c4:	4c5f      	ldr	r4, [pc, #380]	; (8005244 <_strtod_l+0x58c>)
 80050c6:	f1c6 060f 	rsb	r6, r6, #15
 80050ca:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 80050ce:	4642      	mov	r2, r8
 80050d0:	464b      	mov	r3, r9
 80050d2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80050d6:	f7fb fa97 	bl	8000608 <__aeabi_dmul>
 80050da:	9b08      	ldr	r3, [sp, #32]
 80050dc:	1b9e      	subs	r6, r3, r6
 80050de:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80050e2:	e9d4 2300 	ldrd	r2, r3, [r4]
 80050e6:	e7e3      	b.n	80050b0 <_strtod_l+0x3f8>
 80050e8:	9b08      	ldr	r3, [sp, #32]
 80050ea:	3316      	adds	r3, #22
 80050ec:	db0b      	blt.n	8005106 <_strtod_l+0x44e>
 80050ee:	9b05      	ldr	r3, [sp, #20]
 80050f0:	1bdf      	subs	r7, r3, r7
 80050f2:	4b54      	ldr	r3, [pc, #336]	; (8005244 <_strtod_l+0x58c>)
 80050f4:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80050f8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80050fc:	4640      	mov	r0, r8
 80050fe:	4649      	mov	r1, r9
 8005100:	f7fb fbac 	bl	800085c <__aeabi_ddiv>
 8005104:	e7d6      	b.n	80050b4 <_strtod_l+0x3fc>
 8005106:	9b08      	ldr	r3, [sp, #32]
 8005108:	1b75      	subs	r5, r6, r5
 800510a:	441d      	add	r5, r3
 800510c:	2d00      	cmp	r5, #0
 800510e:	dd70      	ble.n	80051f2 <_strtod_l+0x53a>
 8005110:	f015 030f 	ands.w	r3, r5, #15
 8005114:	d00a      	beq.n	800512c <_strtod_l+0x474>
 8005116:	494b      	ldr	r1, [pc, #300]	; (8005244 <_strtod_l+0x58c>)
 8005118:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800511c:	4642      	mov	r2, r8
 800511e:	464b      	mov	r3, r9
 8005120:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005124:	f7fb fa70 	bl	8000608 <__aeabi_dmul>
 8005128:	4680      	mov	r8, r0
 800512a:	4689      	mov	r9, r1
 800512c:	f035 050f 	bics.w	r5, r5, #15
 8005130:	d04d      	beq.n	80051ce <_strtod_l+0x516>
 8005132:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 8005136:	dd22      	ble.n	800517e <_strtod_l+0x4c6>
 8005138:	2500      	movs	r5, #0
 800513a:	46ab      	mov	fp, r5
 800513c:	9509      	str	r5, [sp, #36]	; 0x24
 800513e:	9505      	str	r5, [sp, #20]
 8005140:	2322      	movs	r3, #34	; 0x22
 8005142:	f8df 9108 	ldr.w	r9, [pc, #264]	; 800524c <_strtod_l+0x594>
 8005146:	6023      	str	r3, [r4, #0]
 8005148:	f04f 0800 	mov.w	r8, #0
 800514c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800514e:	2b00      	cmp	r3, #0
 8005150:	f43f aded 	beq.w	8004d2e <_strtod_l+0x76>
 8005154:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005156:	4620      	mov	r0, r4
 8005158:	f7ff f924 	bl	80043a4 <_Bfree>
 800515c:	9905      	ldr	r1, [sp, #20]
 800515e:	4620      	mov	r0, r4
 8005160:	f7ff f920 	bl	80043a4 <_Bfree>
 8005164:	4659      	mov	r1, fp
 8005166:	4620      	mov	r0, r4
 8005168:	f7ff f91c 	bl	80043a4 <_Bfree>
 800516c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800516e:	4620      	mov	r0, r4
 8005170:	f7ff f918 	bl	80043a4 <_Bfree>
 8005174:	4629      	mov	r1, r5
 8005176:	4620      	mov	r0, r4
 8005178:	f7ff f914 	bl	80043a4 <_Bfree>
 800517c:	e5d7      	b.n	8004d2e <_strtod_l+0x76>
 800517e:	4b32      	ldr	r3, [pc, #200]	; (8005248 <_strtod_l+0x590>)
 8005180:	9304      	str	r3, [sp, #16]
 8005182:	2300      	movs	r3, #0
 8005184:	112d      	asrs	r5, r5, #4
 8005186:	4640      	mov	r0, r8
 8005188:	4649      	mov	r1, r9
 800518a:	469a      	mov	sl, r3
 800518c:	2d01      	cmp	r5, #1
 800518e:	dc21      	bgt.n	80051d4 <_strtod_l+0x51c>
 8005190:	b10b      	cbz	r3, 8005196 <_strtod_l+0x4de>
 8005192:	4680      	mov	r8, r0
 8005194:	4689      	mov	r9, r1
 8005196:	492c      	ldr	r1, [pc, #176]	; (8005248 <_strtod_l+0x590>)
 8005198:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800519c:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 80051a0:	4642      	mov	r2, r8
 80051a2:	464b      	mov	r3, r9
 80051a4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80051a8:	f7fb fa2e 	bl	8000608 <__aeabi_dmul>
 80051ac:	4b27      	ldr	r3, [pc, #156]	; (800524c <_strtod_l+0x594>)
 80051ae:	460a      	mov	r2, r1
 80051b0:	400b      	ands	r3, r1
 80051b2:	4927      	ldr	r1, [pc, #156]	; (8005250 <_strtod_l+0x598>)
 80051b4:	428b      	cmp	r3, r1
 80051b6:	4680      	mov	r8, r0
 80051b8:	d8be      	bhi.n	8005138 <_strtod_l+0x480>
 80051ba:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80051be:	428b      	cmp	r3, r1
 80051c0:	bf86      	itte	hi
 80051c2:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8005254 <_strtod_l+0x59c>
 80051c6:	f04f 38ff 	movhi.w	r8, #4294967295
 80051ca:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80051ce:	2300      	movs	r3, #0
 80051d0:	9304      	str	r3, [sp, #16]
 80051d2:	e07b      	b.n	80052cc <_strtod_l+0x614>
 80051d4:	07ea      	lsls	r2, r5, #31
 80051d6:	d505      	bpl.n	80051e4 <_strtod_l+0x52c>
 80051d8:	9b04      	ldr	r3, [sp, #16]
 80051da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051de:	f7fb fa13 	bl	8000608 <__aeabi_dmul>
 80051e2:	2301      	movs	r3, #1
 80051e4:	9a04      	ldr	r2, [sp, #16]
 80051e6:	3208      	adds	r2, #8
 80051e8:	f10a 0a01 	add.w	sl, sl, #1
 80051ec:	106d      	asrs	r5, r5, #1
 80051ee:	9204      	str	r2, [sp, #16]
 80051f0:	e7cc      	b.n	800518c <_strtod_l+0x4d4>
 80051f2:	d0ec      	beq.n	80051ce <_strtod_l+0x516>
 80051f4:	426d      	negs	r5, r5
 80051f6:	f015 020f 	ands.w	r2, r5, #15
 80051fa:	d00a      	beq.n	8005212 <_strtod_l+0x55a>
 80051fc:	4b11      	ldr	r3, [pc, #68]	; (8005244 <_strtod_l+0x58c>)
 80051fe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005202:	4640      	mov	r0, r8
 8005204:	4649      	mov	r1, r9
 8005206:	e9d3 2300 	ldrd	r2, r3, [r3]
 800520a:	f7fb fb27 	bl	800085c <__aeabi_ddiv>
 800520e:	4680      	mov	r8, r0
 8005210:	4689      	mov	r9, r1
 8005212:	112d      	asrs	r5, r5, #4
 8005214:	d0db      	beq.n	80051ce <_strtod_l+0x516>
 8005216:	2d1f      	cmp	r5, #31
 8005218:	dd1e      	ble.n	8005258 <_strtod_l+0x5a0>
 800521a:	2500      	movs	r5, #0
 800521c:	46ab      	mov	fp, r5
 800521e:	9509      	str	r5, [sp, #36]	; 0x24
 8005220:	9505      	str	r5, [sp, #20]
 8005222:	2322      	movs	r3, #34	; 0x22
 8005224:	f04f 0800 	mov.w	r8, #0
 8005228:	f04f 0900 	mov.w	r9, #0
 800522c:	6023      	str	r3, [r4, #0]
 800522e:	e78d      	b.n	800514c <_strtod_l+0x494>
 8005230:	08006d8d 	.word	0x08006d8d
 8005234:	08006ff4 	.word	0x08006ff4
 8005238:	08006d85 	.word	0x08006d85
 800523c:	08006df8 	.word	0x08006df8
 8005240:	08006df4 	.word	0x08006df4
 8005244:	08006f08 	.word	0x08006f08
 8005248:	08006ee0 	.word	0x08006ee0
 800524c:	7ff00000 	.word	0x7ff00000
 8005250:	7ca00000 	.word	0x7ca00000
 8005254:	7fefffff 	.word	0x7fefffff
 8005258:	f015 0310 	ands.w	r3, r5, #16
 800525c:	bf18      	it	ne
 800525e:	236a      	movne	r3, #106	; 0x6a
 8005260:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 8005604 <_strtod_l+0x94c>
 8005264:	9304      	str	r3, [sp, #16]
 8005266:	4640      	mov	r0, r8
 8005268:	4649      	mov	r1, r9
 800526a:	2300      	movs	r3, #0
 800526c:	07ea      	lsls	r2, r5, #31
 800526e:	d504      	bpl.n	800527a <_strtod_l+0x5c2>
 8005270:	e9da 2300 	ldrd	r2, r3, [sl]
 8005274:	f7fb f9c8 	bl	8000608 <__aeabi_dmul>
 8005278:	2301      	movs	r3, #1
 800527a:	106d      	asrs	r5, r5, #1
 800527c:	f10a 0a08 	add.w	sl, sl, #8
 8005280:	d1f4      	bne.n	800526c <_strtod_l+0x5b4>
 8005282:	b10b      	cbz	r3, 8005288 <_strtod_l+0x5d0>
 8005284:	4680      	mov	r8, r0
 8005286:	4689      	mov	r9, r1
 8005288:	9b04      	ldr	r3, [sp, #16]
 800528a:	b1bb      	cbz	r3, 80052bc <_strtod_l+0x604>
 800528c:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8005290:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8005294:	2b00      	cmp	r3, #0
 8005296:	4649      	mov	r1, r9
 8005298:	dd10      	ble.n	80052bc <_strtod_l+0x604>
 800529a:	2b1f      	cmp	r3, #31
 800529c:	f340 811e 	ble.w	80054dc <_strtod_l+0x824>
 80052a0:	2b34      	cmp	r3, #52	; 0x34
 80052a2:	bfde      	ittt	le
 80052a4:	f04f 33ff 	movle.w	r3, #4294967295
 80052a8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80052ac:	4093      	lslle	r3, r2
 80052ae:	f04f 0800 	mov.w	r8, #0
 80052b2:	bfcc      	ite	gt
 80052b4:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 80052b8:	ea03 0901 	andle.w	r9, r3, r1
 80052bc:	2200      	movs	r2, #0
 80052be:	2300      	movs	r3, #0
 80052c0:	4640      	mov	r0, r8
 80052c2:	4649      	mov	r1, r9
 80052c4:	f7fb fc08 	bl	8000ad8 <__aeabi_dcmpeq>
 80052c8:	2800      	cmp	r0, #0
 80052ca:	d1a6      	bne.n	800521a <_strtod_l+0x562>
 80052cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052ce:	9300      	str	r3, [sp, #0]
 80052d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80052d2:	4633      	mov	r3, r6
 80052d4:	465a      	mov	r2, fp
 80052d6:	4620      	mov	r0, r4
 80052d8:	f7ff f8cc 	bl	8004474 <__s2b>
 80052dc:	9009      	str	r0, [sp, #36]	; 0x24
 80052de:	2800      	cmp	r0, #0
 80052e0:	f43f af2a 	beq.w	8005138 <_strtod_l+0x480>
 80052e4:	9a08      	ldr	r2, [sp, #32]
 80052e6:	9b05      	ldr	r3, [sp, #20]
 80052e8:	2a00      	cmp	r2, #0
 80052ea:	eba3 0307 	sub.w	r3, r3, r7
 80052ee:	bfa8      	it	ge
 80052f0:	2300      	movge	r3, #0
 80052f2:	930c      	str	r3, [sp, #48]	; 0x30
 80052f4:	2500      	movs	r5, #0
 80052f6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80052fa:	9312      	str	r3, [sp, #72]	; 0x48
 80052fc:	46ab      	mov	fp, r5
 80052fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005300:	4620      	mov	r0, r4
 8005302:	6859      	ldr	r1, [r3, #4]
 8005304:	f7ff f80e 	bl	8004324 <_Balloc>
 8005308:	9005      	str	r0, [sp, #20]
 800530a:	2800      	cmp	r0, #0
 800530c:	f43f af18 	beq.w	8005140 <_strtod_l+0x488>
 8005310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005312:	691a      	ldr	r2, [r3, #16]
 8005314:	3202      	adds	r2, #2
 8005316:	f103 010c 	add.w	r1, r3, #12
 800531a:	0092      	lsls	r2, r2, #2
 800531c:	300c      	adds	r0, #12
 800531e:	f000 ff73 	bl	8006208 <memcpy>
 8005322:	ec49 8b10 	vmov	d0, r8, r9
 8005326:	aa18      	add	r2, sp, #96	; 0x60
 8005328:	a917      	add	r1, sp, #92	; 0x5c
 800532a:	4620      	mov	r0, r4
 800532c:	f7ff fbd6 	bl	8004adc <__d2b>
 8005330:	ec49 8b18 	vmov	d8, r8, r9
 8005334:	9016      	str	r0, [sp, #88]	; 0x58
 8005336:	2800      	cmp	r0, #0
 8005338:	f43f af02 	beq.w	8005140 <_strtod_l+0x488>
 800533c:	2101      	movs	r1, #1
 800533e:	4620      	mov	r0, r4
 8005340:	f7ff f930 	bl	80045a4 <__i2b>
 8005344:	4683      	mov	fp, r0
 8005346:	2800      	cmp	r0, #0
 8005348:	f43f aefa 	beq.w	8005140 <_strtod_l+0x488>
 800534c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800534e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005350:	2e00      	cmp	r6, #0
 8005352:	bfab      	itete	ge
 8005354:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8005356:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8005358:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800535a:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 800535e:	bfac      	ite	ge
 8005360:	eb06 0a03 	addge.w	sl, r6, r3
 8005364:	1b9f      	sublt	r7, r3, r6
 8005366:	9b04      	ldr	r3, [sp, #16]
 8005368:	1af6      	subs	r6, r6, r3
 800536a:	4416      	add	r6, r2
 800536c:	4ba0      	ldr	r3, [pc, #640]	; (80055f0 <_strtod_l+0x938>)
 800536e:	3e01      	subs	r6, #1
 8005370:	429e      	cmp	r6, r3
 8005372:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8005376:	f280 80c4 	bge.w	8005502 <_strtod_l+0x84a>
 800537a:	1b9b      	subs	r3, r3, r6
 800537c:	2b1f      	cmp	r3, #31
 800537e:	eba2 0203 	sub.w	r2, r2, r3
 8005382:	f04f 0101 	mov.w	r1, #1
 8005386:	f300 80b0 	bgt.w	80054ea <_strtod_l+0x832>
 800538a:	fa01 f303 	lsl.w	r3, r1, r3
 800538e:	930e      	str	r3, [sp, #56]	; 0x38
 8005390:	2300      	movs	r3, #0
 8005392:	930d      	str	r3, [sp, #52]	; 0x34
 8005394:	eb0a 0602 	add.w	r6, sl, r2
 8005398:	9b04      	ldr	r3, [sp, #16]
 800539a:	45b2      	cmp	sl, r6
 800539c:	4417      	add	r7, r2
 800539e:	441f      	add	r7, r3
 80053a0:	4653      	mov	r3, sl
 80053a2:	bfa8      	it	ge
 80053a4:	4633      	movge	r3, r6
 80053a6:	42bb      	cmp	r3, r7
 80053a8:	bfa8      	it	ge
 80053aa:	463b      	movge	r3, r7
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	bfc2      	ittt	gt
 80053b0:	1af6      	subgt	r6, r6, r3
 80053b2:	1aff      	subgt	r7, r7, r3
 80053b4:	ebaa 0a03 	subgt.w	sl, sl, r3
 80053b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	dd17      	ble.n	80053ee <_strtod_l+0x736>
 80053be:	4659      	mov	r1, fp
 80053c0:	461a      	mov	r2, r3
 80053c2:	4620      	mov	r0, r4
 80053c4:	f7ff f9ae 	bl	8004724 <__pow5mult>
 80053c8:	4683      	mov	fp, r0
 80053ca:	2800      	cmp	r0, #0
 80053cc:	f43f aeb8 	beq.w	8005140 <_strtod_l+0x488>
 80053d0:	4601      	mov	r1, r0
 80053d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80053d4:	4620      	mov	r0, r4
 80053d6:	f7ff f8fb 	bl	80045d0 <__multiply>
 80053da:	900b      	str	r0, [sp, #44]	; 0x2c
 80053dc:	2800      	cmp	r0, #0
 80053de:	f43f aeaf 	beq.w	8005140 <_strtod_l+0x488>
 80053e2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80053e4:	4620      	mov	r0, r4
 80053e6:	f7fe ffdd 	bl	80043a4 <_Bfree>
 80053ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80053ec:	9316      	str	r3, [sp, #88]	; 0x58
 80053ee:	2e00      	cmp	r6, #0
 80053f0:	f300 808c 	bgt.w	800550c <_strtod_l+0x854>
 80053f4:	9b08      	ldr	r3, [sp, #32]
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	dd08      	ble.n	800540c <_strtod_l+0x754>
 80053fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80053fc:	9905      	ldr	r1, [sp, #20]
 80053fe:	4620      	mov	r0, r4
 8005400:	f7ff f990 	bl	8004724 <__pow5mult>
 8005404:	9005      	str	r0, [sp, #20]
 8005406:	2800      	cmp	r0, #0
 8005408:	f43f ae9a 	beq.w	8005140 <_strtod_l+0x488>
 800540c:	2f00      	cmp	r7, #0
 800540e:	dd08      	ble.n	8005422 <_strtod_l+0x76a>
 8005410:	9905      	ldr	r1, [sp, #20]
 8005412:	463a      	mov	r2, r7
 8005414:	4620      	mov	r0, r4
 8005416:	f7ff f9df 	bl	80047d8 <__lshift>
 800541a:	9005      	str	r0, [sp, #20]
 800541c:	2800      	cmp	r0, #0
 800541e:	f43f ae8f 	beq.w	8005140 <_strtod_l+0x488>
 8005422:	f1ba 0f00 	cmp.w	sl, #0
 8005426:	dd08      	ble.n	800543a <_strtod_l+0x782>
 8005428:	4659      	mov	r1, fp
 800542a:	4652      	mov	r2, sl
 800542c:	4620      	mov	r0, r4
 800542e:	f7ff f9d3 	bl	80047d8 <__lshift>
 8005432:	4683      	mov	fp, r0
 8005434:	2800      	cmp	r0, #0
 8005436:	f43f ae83 	beq.w	8005140 <_strtod_l+0x488>
 800543a:	9a05      	ldr	r2, [sp, #20]
 800543c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800543e:	4620      	mov	r0, r4
 8005440:	f7ff fa52 	bl	80048e8 <__mdiff>
 8005444:	4605      	mov	r5, r0
 8005446:	2800      	cmp	r0, #0
 8005448:	f43f ae7a 	beq.w	8005140 <_strtod_l+0x488>
 800544c:	68c3      	ldr	r3, [r0, #12]
 800544e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005450:	2300      	movs	r3, #0
 8005452:	60c3      	str	r3, [r0, #12]
 8005454:	4659      	mov	r1, fp
 8005456:	f7ff fa2b 	bl	80048b0 <__mcmp>
 800545a:	2800      	cmp	r0, #0
 800545c:	da60      	bge.n	8005520 <_strtod_l+0x868>
 800545e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005460:	ea53 0308 	orrs.w	r3, r3, r8
 8005464:	f040 8084 	bne.w	8005570 <_strtod_l+0x8b8>
 8005468:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800546c:	2b00      	cmp	r3, #0
 800546e:	d17f      	bne.n	8005570 <_strtod_l+0x8b8>
 8005470:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8005474:	0d1b      	lsrs	r3, r3, #20
 8005476:	051b      	lsls	r3, r3, #20
 8005478:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800547c:	d978      	bls.n	8005570 <_strtod_l+0x8b8>
 800547e:	696b      	ldr	r3, [r5, #20]
 8005480:	b913      	cbnz	r3, 8005488 <_strtod_l+0x7d0>
 8005482:	692b      	ldr	r3, [r5, #16]
 8005484:	2b01      	cmp	r3, #1
 8005486:	dd73      	ble.n	8005570 <_strtod_l+0x8b8>
 8005488:	4629      	mov	r1, r5
 800548a:	2201      	movs	r2, #1
 800548c:	4620      	mov	r0, r4
 800548e:	f7ff f9a3 	bl	80047d8 <__lshift>
 8005492:	4659      	mov	r1, fp
 8005494:	4605      	mov	r5, r0
 8005496:	f7ff fa0b 	bl	80048b0 <__mcmp>
 800549a:	2800      	cmp	r0, #0
 800549c:	dd68      	ble.n	8005570 <_strtod_l+0x8b8>
 800549e:	9904      	ldr	r1, [sp, #16]
 80054a0:	4a54      	ldr	r2, [pc, #336]	; (80055f4 <_strtod_l+0x93c>)
 80054a2:	464b      	mov	r3, r9
 80054a4:	2900      	cmp	r1, #0
 80054a6:	f000 8084 	beq.w	80055b2 <_strtod_l+0x8fa>
 80054aa:	ea02 0109 	and.w	r1, r2, r9
 80054ae:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80054b2:	dc7e      	bgt.n	80055b2 <_strtod_l+0x8fa>
 80054b4:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80054b8:	f77f aeb3 	ble.w	8005222 <_strtod_l+0x56a>
 80054bc:	4b4e      	ldr	r3, [pc, #312]	; (80055f8 <_strtod_l+0x940>)
 80054be:	4640      	mov	r0, r8
 80054c0:	4649      	mov	r1, r9
 80054c2:	2200      	movs	r2, #0
 80054c4:	f7fb f8a0 	bl	8000608 <__aeabi_dmul>
 80054c8:	4b4a      	ldr	r3, [pc, #296]	; (80055f4 <_strtod_l+0x93c>)
 80054ca:	400b      	ands	r3, r1
 80054cc:	4680      	mov	r8, r0
 80054ce:	4689      	mov	r9, r1
 80054d0:	2b00      	cmp	r3, #0
 80054d2:	f47f ae3f 	bne.w	8005154 <_strtod_l+0x49c>
 80054d6:	2322      	movs	r3, #34	; 0x22
 80054d8:	6023      	str	r3, [r4, #0]
 80054da:	e63b      	b.n	8005154 <_strtod_l+0x49c>
 80054dc:	f04f 32ff 	mov.w	r2, #4294967295
 80054e0:	fa02 f303 	lsl.w	r3, r2, r3
 80054e4:	ea03 0808 	and.w	r8, r3, r8
 80054e8:	e6e8      	b.n	80052bc <_strtod_l+0x604>
 80054ea:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 80054ee:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 80054f2:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 80054f6:	36e2      	adds	r6, #226	; 0xe2
 80054f8:	fa01 f306 	lsl.w	r3, r1, r6
 80054fc:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8005500:	e748      	b.n	8005394 <_strtod_l+0x6dc>
 8005502:	2100      	movs	r1, #0
 8005504:	2301      	movs	r3, #1
 8005506:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 800550a:	e743      	b.n	8005394 <_strtod_l+0x6dc>
 800550c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800550e:	4632      	mov	r2, r6
 8005510:	4620      	mov	r0, r4
 8005512:	f7ff f961 	bl	80047d8 <__lshift>
 8005516:	9016      	str	r0, [sp, #88]	; 0x58
 8005518:	2800      	cmp	r0, #0
 800551a:	f47f af6b 	bne.w	80053f4 <_strtod_l+0x73c>
 800551e:	e60f      	b.n	8005140 <_strtod_l+0x488>
 8005520:	46ca      	mov	sl, r9
 8005522:	d171      	bne.n	8005608 <_strtod_l+0x950>
 8005524:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005526:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800552a:	b352      	cbz	r2, 8005582 <_strtod_l+0x8ca>
 800552c:	4a33      	ldr	r2, [pc, #204]	; (80055fc <_strtod_l+0x944>)
 800552e:	4293      	cmp	r3, r2
 8005530:	d12a      	bne.n	8005588 <_strtod_l+0x8d0>
 8005532:	9b04      	ldr	r3, [sp, #16]
 8005534:	4641      	mov	r1, r8
 8005536:	b1fb      	cbz	r3, 8005578 <_strtod_l+0x8c0>
 8005538:	4b2e      	ldr	r3, [pc, #184]	; (80055f4 <_strtod_l+0x93c>)
 800553a:	ea09 0303 	and.w	r3, r9, r3
 800553e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8005542:	f04f 32ff 	mov.w	r2, #4294967295
 8005546:	d81a      	bhi.n	800557e <_strtod_l+0x8c6>
 8005548:	0d1b      	lsrs	r3, r3, #20
 800554a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800554e:	fa02 f303 	lsl.w	r3, r2, r3
 8005552:	4299      	cmp	r1, r3
 8005554:	d118      	bne.n	8005588 <_strtod_l+0x8d0>
 8005556:	4b2a      	ldr	r3, [pc, #168]	; (8005600 <_strtod_l+0x948>)
 8005558:	459a      	cmp	sl, r3
 800555a:	d102      	bne.n	8005562 <_strtod_l+0x8aa>
 800555c:	3101      	adds	r1, #1
 800555e:	f43f adef 	beq.w	8005140 <_strtod_l+0x488>
 8005562:	4b24      	ldr	r3, [pc, #144]	; (80055f4 <_strtod_l+0x93c>)
 8005564:	ea0a 0303 	and.w	r3, sl, r3
 8005568:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 800556c:	f04f 0800 	mov.w	r8, #0
 8005570:	9b04      	ldr	r3, [sp, #16]
 8005572:	2b00      	cmp	r3, #0
 8005574:	d1a2      	bne.n	80054bc <_strtod_l+0x804>
 8005576:	e5ed      	b.n	8005154 <_strtod_l+0x49c>
 8005578:	f04f 33ff 	mov.w	r3, #4294967295
 800557c:	e7e9      	b.n	8005552 <_strtod_l+0x89a>
 800557e:	4613      	mov	r3, r2
 8005580:	e7e7      	b.n	8005552 <_strtod_l+0x89a>
 8005582:	ea53 0308 	orrs.w	r3, r3, r8
 8005586:	d08a      	beq.n	800549e <_strtod_l+0x7e6>
 8005588:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800558a:	b1e3      	cbz	r3, 80055c6 <_strtod_l+0x90e>
 800558c:	ea13 0f0a 	tst.w	r3, sl
 8005590:	d0ee      	beq.n	8005570 <_strtod_l+0x8b8>
 8005592:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005594:	9a04      	ldr	r2, [sp, #16]
 8005596:	4640      	mov	r0, r8
 8005598:	4649      	mov	r1, r9
 800559a:	b1c3      	cbz	r3, 80055ce <_strtod_l+0x916>
 800559c:	f7ff fb6f 	bl	8004c7e <sulp>
 80055a0:	4602      	mov	r2, r0
 80055a2:	460b      	mov	r3, r1
 80055a4:	ec51 0b18 	vmov	r0, r1, d8
 80055a8:	f7fa fe78 	bl	800029c <__adddf3>
 80055ac:	4680      	mov	r8, r0
 80055ae:	4689      	mov	r9, r1
 80055b0:	e7de      	b.n	8005570 <_strtod_l+0x8b8>
 80055b2:	4013      	ands	r3, r2
 80055b4:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80055b8:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 80055bc:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 80055c0:	f04f 38ff 	mov.w	r8, #4294967295
 80055c4:	e7d4      	b.n	8005570 <_strtod_l+0x8b8>
 80055c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80055c8:	ea13 0f08 	tst.w	r3, r8
 80055cc:	e7e0      	b.n	8005590 <_strtod_l+0x8d8>
 80055ce:	f7ff fb56 	bl	8004c7e <sulp>
 80055d2:	4602      	mov	r2, r0
 80055d4:	460b      	mov	r3, r1
 80055d6:	ec51 0b18 	vmov	r0, r1, d8
 80055da:	f7fa fe5d 	bl	8000298 <__aeabi_dsub>
 80055de:	2200      	movs	r2, #0
 80055e0:	2300      	movs	r3, #0
 80055e2:	4680      	mov	r8, r0
 80055e4:	4689      	mov	r9, r1
 80055e6:	f7fb fa77 	bl	8000ad8 <__aeabi_dcmpeq>
 80055ea:	2800      	cmp	r0, #0
 80055ec:	d0c0      	beq.n	8005570 <_strtod_l+0x8b8>
 80055ee:	e618      	b.n	8005222 <_strtod_l+0x56a>
 80055f0:	fffffc02 	.word	0xfffffc02
 80055f4:	7ff00000 	.word	0x7ff00000
 80055f8:	39500000 	.word	0x39500000
 80055fc:	000fffff 	.word	0x000fffff
 8005600:	7fefffff 	.word	0x7fefffff
 8005604:	08007008 	.word	0x08007008
 8005608:	4659      	mov	r1, fp
 800560a:	4628      	mov	r0, r5
 800560c:	f7ff fac0 	bl	8004b90 <__ratio>
 8005610:	ec57 6b10 	vmov	r6, r7, d0
 8005614:	ee10 0a10 	vmov	r0, s0
 8005618:	2200      	movs	r2, #0
 800561a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800561e:	4639      	mov	r1, r7
 8005620:	f7fb fa6e 	bl	8000b00 <__aeabi_dcmple>
 8005624:	2800      	cmp	r0, #0
 8005626:	d071      	beq.n	800570c <_strtod_l+0xa54>
 8005628:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800562a:	2b00      	cmp	r3, #0
 800562c:	d17c      	bne.n	8005728 <_strtod_l+0xa70>
 800562e:	f1b8 0f00 	cmp.w	r8, #0
 8005632:	d15a      	bne.n	80056ea <_strtod_l+0xa32>
 8005634:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005638:	2b00      	cmp	r3, #0
 800563a:	d15d      	bne.n	80056f8 <_strtod_l+0xa40>
 800563c:	4b90      	ldr	r3, [pc, #576]	; (8005880 <_strtod_l+0xbc8>)
 800563e:	2200      	movs	r2, #0
 8005640:	4630      	mov	r0, r6
 8005642:	4639      	mov	r1, r7
 8005644:	f7fb fa52 	bl	8000aec <__aeabi_dcmplt>
 8005648:	2800      	cmp	r0, #0
 800564a:	d15c      	bne.n	8005706 <_strtod_l+0xa4e>
 800564c:	4630      	mov	r0, r6
 800564e:	4639      	mov	r1, r7
 8005650:	4b8c      	ldr	r3, [pc, #560]	; (8005884 <_strtod_l+0xbcc>)
 8005652:	2200      	movs	r2, #0
 8005654:	f7fa ffd8 	bl	8000608 <__aeabi_dmul>
 8005658:	4606      	mov	r6, r0
 800565a:	460f      	mov	r7, r1
 800565c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8005660:	9606      	str	r6, [sp, #24]
 8005662:	9307      	str	r3, [sp, #28]
 8005664:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005668:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 800566c:	4b86      	ldr	r3, [pc, #536]	; (8005888 <_strtod_l+0xbd0>)
 800566e:	ea0a 0303 	and.w	r3, sl, r3
 8005672:	930d      	str	r3, [sp, #52]	; 0x34
 8005674:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005676:	4b85      	ldr	r3, [pc, #532]	; (800588c <_strtod_l+0xbd4>)
 8005678:	429a      	cmp	r2, r3
 800567a:	f040 8090 	bne.w	800579e <_strtod_l+0xae6>
 800567e:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8005682:	ec49 8b10 	vmov	d0, r8, r9
 8005686:	f7ff f9b9 	bl	80049fc <__ulp>
 800568a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800568e:	ec51 0b10 	vmov	r0, r1, d0
 8005692:	f7fa ffb9 	bl	8000608 <__aeabi_dmul>
 8005696:	4642      	mov	r2, r8
 8005698:	464b      	mov	r3, r9
 800569a:	f7fa fdff 	bl	800029c <__adddf3>
 800569e:	460b      	mov	r3, r1
 80056a0:	4979      	ldr	r1, [pc, #484]	; (8005888 <_strtod_l+0xbd0>)
 80056a2:	4a7b      	ldr	r2, [pc, #492]	; (8005890 <_strtod_l+0xbd8>)
 80056a4:	4019      	ands	r1, r3
 80056a6:	4291      	cmp	r1, r2
 80056a8:	4680      	mov	r8, r0
 80056aa:	d944      	bls.n	8005736 <_strtod_l+0xa7e>
 80056ac:	ee18 2a90 	vmov	r2, s17
 80056b0:	4b78      	ldr	r3, [pc, #480]	; (8005894 <_strtod_l+0xbdc>)
 80056b2:	429a      	cmp	r2, r3
 80056b4:	d104      	bne.n	80056c0 <_strtod_l+0xa08>
 80056b6:	ee18 3a10 	vmov	r3, s16
 80056ba:	3301      	adds	r3, #1
 80056bc:	f43f ad40 	beq.w	8005140 <_strtod_l+0x488>
 80056c0:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8005894 <_strtod_l+0xbdc>
 80056c4:	f04f 38ff 	mov.w	r8, #4294967295
 80056c8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80056ca:	4620      	mov	r0, r4
 80056cc:	f7fe fe6a 	bl	80043a4 <_Bfree>
 80056d0:	9905      	ldr	r1, [sp, #20]
 80056d2:	4620      	mov	r0, r4
 80056d4:	f7fe fe66 	bl	80043a4 <_Bfree>
 80056d8:	4659      	mov	r1, fp
 80056da:	4620      	mov	r0, r4
 80056dc:	f7fe fe62 	bl	80043a4 <_Bfree>
 80056e0:	4629      	mov	r1, r5
 80056e2:	4620      	mov	r0, r4
 80056e4:	f7fe fe5e 	bl	80043a4 <_Bfree>
 80056e8:	e609      	b.n	80052fe <_strtod_l+0x646>
 80056ea:	f1b8 0f01 	cmp.w	r8, #1
 80056ee:	d103      	bne.n	80056f8 <_strtod_l+0xa40>
 80056f0:	f1b9 0f00 	cmp.w	r9, #0
 80056f4:	f43f ad95 	beq.w	8005222 <_strtod_l+0x56a>
 80056f8:	ed9f 7b55 	vldr	d7, [pc, #340]	; 8005850 <_strtod_l+0xb98>
 80056fc:	4f60      	ldr	r7, [pc, #384]	; (8005880 <_strtod_l+0xbc8>)
 80056fe:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005702:	2600      	movs	r6, #0
 8005704:	e7ae      	b.n	8005664 <_strtod_l+0x9ac>
 8005706:	4f5f      	ldr	r7, [pc, #380]	; (8005884 <_strtod_l+0xbcc>)
 8005708:	2600      	movs	r6, #0
 800570a:	e7a7      	b.n	800565c <_strtod_l+0x9a4>
 800570c:	4b5d      	ldr	r3, [pc, #372]	; (8005884 <_strtod_l+0xbcc>)
 800570e:	4630      	mov	r0, r6
 8005710:	4639      	mov	r1, r7
 8005712:	2200      	movs	r2, #0
 8005714:	f7fa ff78 	bl	8000608 <__aeabi_dmul>
 8005718:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800571a:	4606      	mov	r6, r0
 800571c:	460f      	mov	r7, r1
 800571e:	2b00      	cmp	r3, #0
 8005720:	d09c      	beq.n	800565c <_strtod_l+0x9a4>
 8005722:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005726:	e79d      	b.n	8005664 <_strtod_l+0x9ac>
 8005728:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8005858 <_strtod_l+0xba0>
 800572c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005730:	ec57 6b17 	vmov	r6, r7, d7
 8005734:	e796      	b.n	8005664 <_strtod_l+0x9ac>
 8005736:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800573a:	9b04      	ldr	r3, [sp, #16]
 800573c:	46ca      	mov	sl, r9
 800573e:	2b00      	cmp	r3, #0
 8005740:	d1c2      	bne.n	80056c8 <_strtod_l+0xa10>
 8005742:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8005746:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005748:	0d1b      	lsrs	r3, r3, #20
 800574a:	051b      	lsls	r3, r3, #20
 800574c:	429a      	cmp	r2, r3
 800574e:	d1bb      	bne.n	80056c8 <_strtod_l+0xa10>
 8005750:	4630      	mov	r0, r6
 8005752:	4639      	mov	r1, r7
 8005754:	f7fb faa0 	bl	8000c98 <__aeabi_d2lz>
 8005758:	f7fa ff28 	bl	80005ac <__aeabi_l2d>
 800575c:	4602      	mov	r2, r0
 800575e:	460b      	mov	r3, r1
 8005760:	4630      	mov	r0, r6
 8005762:	4639      	mov	r1, r7
 8005764:	f7fa fd98 	bl	8000298 <__aeabi_dsub>
 8005768:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800576a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800576e:	ea43 0308 	orr.w	r3, r3, r8
 8005772:	4313      	orrs	r3, r2
 8005774:	4606      	mov	r6, r0
 8005776:	460f      	mov	r7, r1
 8005778:	d054      	beq.n	8005824 <_strtod_l+0xb6c>
 800577a:	a339      	add	r3, pc, #228	; (adr r3, 8005860 <_strtod_l+0xba8>)
 800577c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005780:	f7fb f9b4 	bl	8000aec <__aeabi_dcmplt>
 8005784:	2800      	cmp	r0, #0
 8005786:	f47f ace5 	bne.w	8005154 <_strtod_l+0x49c>
 800578a:	a337      	add	r3, pc, #220	; (adr r3, 8005868 <_strtod_l+0xbb0>)
 800578c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005790:	4630      	mov	r0, r6
 8005792:	4639      	mov	r1, r7
 8005794:	f7fb f9c8 	bl	8000b28 <__aeabi_dcmpgt>
 8005798:	2800      	cmp	r0, #0
 800579a:	d095      	beq.n	80056c8 <_strtod_l+0xa10>
 800579c:	e4da      	b.n	8005154 <_strtod_l+0x49c>
 800579e:	9b04      	ldr	r3, [sp, #16]
 80057a0:	b333      	cbz	r3, 80057f0 <_strtod_l+0xb38>
 80057a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80057a4:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80057a8:	d822      	bhi.n	80057f0 <_strtod_l+0xb38>
 80057aa:	a331      	add	r3, pc, #196	; (adr r3, 8005870 <_strtod_l+0xbb8>)
 80057ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80057b0:	4630      	mov	r0, r6
 80057b2:	4639      	mov	r1, r7
 80057b4:	f7fb f9a4 	bl	8000b00 <__aeabi_dcmple>
 80057b8:	b1a0      	cbz	r0, 80057e4 <_strtod_l+0xb2c>
 80057ba:	4639      	mov	r1, r7
 80057bc:	4630      	mov	r0, r6
 80057be:	f7fb f9fb 	bl	8000bb8 <__aeabi_d2uiz>
 80057c2:	2801      	cmp	r0, #1
 80057c4:	bf38      	it	cc
 80057c6:	2001      	movcc	r0, #1
 80057c8:	f7fa fea4 	bl	8000514 <__aeabi_ui2d>
 80057cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80057ce:	4606      	mov	r6, r0
 80057d0:	460f      	mov	r7, r1
 80057d2:	bb23      	cbnz	r3, 800581e <_strtod_l+0xb66>
 80057d4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80057d8:	9010      	str	r0, [sp, #64]	; 0x40
 80057da:	9311      	str	r3, [sp, #68]	; 0x44
 80057dc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80057e0:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80057e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80057e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80057e8:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80057ec:	1a9b      	subs	r3, r3, r2
 80057ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80057f0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80057f4:	eeb0 0a48 	vmov.f32	s0, s16
 80057f8:	eef0 0a68 	vmov.f32	s1, s17
 80057fc:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8005800:	f7ff f8fc 	bl	80049fc <__ulp>
 8005804:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8005808:	ec53 2b10 	vmov	r2, r3, d0
 800580c:	f7fa fefc 	bl	8000608 <__aeabi_dmul>
 8005810:	ec53 2b18 	vmov	r2, r3, d8
 8005814:	f7fa fd42 	bl	800029c <__adddf3>
 8005818:	4680      	mov	r8, r0
 800581a:	4689      	mov	r9, r1
 800581c:	e78d      	b.n	800573a <_strtod_l+0xa82>
 800581e:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 8005822:	e7db      	b.n	80057dc <_strtod_l+0xb24>
 8005824:	a314      	add	r3, pc, #80	; (adr r3, 8005878 <_strtod_l+0xbc0>)
 8005826:	e9d3 2300 	ldrd	r2, r3, [r3]
 800582a:	f7fb f95f 	bl	8000aec <__aeabi_dcmplt>
 800582e:	e7b3      	b.n	8005798 <_strtod_l+0xae0>
 8005830:	2300      	movs	r3, #0
 8005832:	930a      	str	r3, [sp, #40]	; 0x28
 8005834:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005836:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005838:	6013      	str	r3, [r2, #0]
 800583a:	f7ff ba7c 	b.w	8004d36 <_strtod_l+0x7e>
 800583e:	2a65      	cmp	r2, #101	; 0x65
 8005840:	f43f ab75 	beq.w	8004f2e <_strtod_l+0x276>
 8005844:	2a45      	cmp	r2, #69	; 0x45
 8005846:	f43f ab72 	beq.w	8004f2e <_strtod_l+0x276>
 800584a:	2301      	movs	r3, #1
 800584c:	f7ff bbaa 	b.w	8004fa4 <_strtod_l+0x2ec>
 8005850:	00000000 	.word	0x00000000
 8005854:	bff00000 	.word	0xbff00000
 8005858:	00000000 	.word	0x00000000
 800585c:	3ff00000 	.word	0x3ff00000
 8005860:	94a03595 	.word	0x94a03595
 8005864:	3fdfffff 	.word	0x3fdfffff
 8005868:	35afe535 	.word	0x35afe535
 800586c:	3fe00000 	.word	0x3fe00000
 8005870:	ffc00000 	.word	0xffc00000
 8005874:	41dfffff 	.word	0x41dfffff
 8005878:	94a03595 	.word	0x94a03595
 800587c:	3fcfffff 	.word	0x3fcfffff
 8005880:	3ff00000 	.word	0x3ff00000
 8005884:	3fe00000 	.word	0x3fe00000
 8005888:	7ff00000 	.word	0x7ff00000
 800588c:	7fe00000 	.word	0x7fe00000
 8005890:	7c9fffff 	.word	0x7c9fffff
 8005894:	7fefffff 	.word	0x7fefffff

08005898 <_strtod_r>:
 8005898:	4b01      	ldr	r3, [pc, #4]	; (80058a0 <_strtod_r+0x8>)
 800589a:	f7ff ba0d 	b.w	8004cb8 <_strtod_l>
 800589e:	bf00      	nop
 80058a0:	20000088 	.word	0x20000088

080058a4 <_strtol_l.constprop.0>:
 80058a4:	2b01      	cmp	r3, #1
 80058a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058aa:	d001      	beq.n	80058b0 <_strtol_l.constprop.0+0xc>
 80058ac:	2b24      	cmp	r3, #36	; 0x24
 80058ae:	d906      	bls.n	80058be <_strtol_l.constprop.0+0x1a>
 80058b0:	f7fd fd6c 	bl	800338c <__errno>
 80058b4:	2316      	movs	r3, #22
 80058b6:	6003      	str	r3, [r0, #0]
 80058b8:	2000      	movs	r0, #0
 80058ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80058be:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80059a4 <_strtol_l.constprop.0+0x100>
 80058c2:	460d      	mov	r5, r1
 80058c4:	462e      	mov	r6, r5
 80058c6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80058ca:	f81c 7004 	ldrb.w	r7, [ip, r4]
 80058ce:	f017 0708 	ands.w	r7, r7, #8
 80058d2:	d1f7      	bne.n	80058c4 <_strtol_l.constprop.0+0x20>
 80058d4:	2c2d      	cmp	r4, #45	; 0x2d
 80058d6:	d132      	bne.n	800593e <_strtol_l.constprop.0+0x9a>
 80058d8:	782c      	ldrb	r4, [r5, #0]
 80058da:	2701      	movs	r7, #1
 80058dc:	1cb5      	adds	r5, r6, #2
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d05b      	beq.n	800599a <_strtol_l.constprop.0+0xf6>
 80058e2:	2b10      	cmp	r3, #16
 80058e4:	d109      	bne.n	80058fa <_strtol_l.constprop.0+0x56>
 80058e6:	2c30      	cmp	r4, #48	; 0x30
 80058e8:	d107      	bne.n	80058fa <_strtol_l.constprop.0+0x56>
 80058ea:	782c      	ldrb	r4, [r5, #0]
 80058ec:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80058f0:	2c58      	cmp	r4, #88	; 0x58
 80058f2:	d14d      	bne.n	8005990 <_strtol_l.constprop.0+0xec>
 80058f4:	786c      	ldrb	r4, [r5, #1]
 80058f6:	2310      	movs	r3, #16
 80058f8:	3502      	adds	r5, #2
 80058fa:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 80058fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8005902:	f04f 0e00 	mov.w	lr, #0
 8005906:	fbb8 f9f3 	udiv	r9, r8, r3
 800590a:	4676      	mov	r6, lr
 800590c:	fb03 8a19 	mls	sl, r3, r9, r8
 8005910:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8005914:	f1bc 0f09 	cmp.w	ip, #9
 8005918:	d816      	bhi.n	8005948 <_strtol_l.constprop.0+0xa4>
 800591a:	4664      	mov	r4, ip
 800591c:	42a3      	cmp	r3, r4
 800591e:	dd24      	ble.n	800596a <_strtol_l.constprop.0+0xc6>
 8005920:	f1be 3fff 	cmp.w	lr, #4294967295
 8005924:	d008      	beq.n	8005938 <_strtol_l.constprop.0+0x94>
 8005926:	45b1      	cmp	r9, r6
 8005928:	d31c      	bcc.n	8005964 <_strtol_l.constprop.0+0xc0>
 800592a:	d101      	bne.n	8005930 <_strtol_l.constprop.0+0x8c>
 800592c:	45a2      	cmp	sl, r4
 800592e:	db19      	blt.n	8005964 <_strtol_l.constprop.0+0xc0>
 8005930:	fb06 4603 	mla	r6, r6, r3, r4
 8005934:	f04f 0e01 	mov.w	lr, #1
 8005938:	f815 4b01 	ldrb.w	r4, [r5], #1
 800593c:	e7e8      	b.n	8005910 <_strtol_l.constprop.0+0x6c>
 800593e:	2c2b      	cmp	r4, #43	; 0x2b
 8005940:	bf04      	itt	eq
 8005942:	782c      	ldrbeq	r4, [r5, #0]
 8005944:	1cb5      	addeq	r5, r6, #2
 8005946:	e7ca      	b.n	80058de <_strtol_l.constprop.0+0x3a>
 8005948:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800594c:	f1bc 0f19 	cmp.w	ip, #25
 8005950:	d801      	bhi.n	8005956 <_strtol_l.constprop.0+0xb2>
 8005952:	3c37      	subs	r4, #55	; 0x37
 8005954:	e7e2      	b.n	800591c <_strtol_l.constprop.0+0x78>
 8005956:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800595a:	f1bc 0f19 	cmp.w	ip, #25
 800595e:	d804      	bhi.n	800596a <_strtol_l.constprop.0+0xc6>
 8005960:	3c57      	subs	r4, #87	; 0x57
 8005962:	e7db      	b.n	800591c <_strtol_l.constprop.0+0x78>
 8005964:	f04f 3eff 	mov.w	lr, #4294967295
 8005968:	e7e6      	b.n	8005938 <_strtol_l.constprop.0+0x94>
 800596a:	f1be 3fff 	cmp.w	lr, #4294967295
 800596e:	d105      	bne.n	800597c <_strtol_l.constprop.0+0xd8>
 8005970:	2322      	movs	r3, #34	; 0x22
 8005972:	6003      	str	r3, [r0, #0]
 8005974:	4646      	mov	r6, r8
 8005976:	b942      	cbnz	r2, 800598a <_strtol_l.constprop.0+0xe6>
 8005978:	4630      	mov	r0, r6
 800597a:	e79e      	b.n	80058ba <_strtol_l.constprop.0+0x16>
 800597c:	b107      	cbz	r7, 8005980 <_strtol_l.constprop.0+0xdc>
 800597e:	4276      	negs	r6, r6
 8005980:	2a00      	cmp	r2, #0
 8005982:	d0f9      	beq.n	8005978 <_strtol_l.constprop.0+0xd4>
 8005984:	f1be 0f00 	cmp.w	lr, #0
 8005988:	d000      	beq.n	800598c <_strtol_l.constprop.0+0xe8>
 800598a:	1e69      	subs	r1, r5, #1
 800598c:	6011      	str	r1, [r2, #0]
 800598e:	e7f3      	b.n	8005978 <_strtol_l.constprop.0+0xd4>
 8005990:	2430      	movs	r4, #48	; 0x30
 8005992:	2b00      	cmp	r3, #0
 8005994:	d1b1      	bne.n	80058fa <_strtol_l.constprop.0+0x56>
 8005996:	2308      	movs	r3, #8
 8005998:	e7af      	b.n	80058fa <_strtol_l.constprop.0+0x56>
 800599a:	2c30      	cmp	r4, #48	; 0x30
 800599c:	d0a5      	beq.n	80058ea <_strtol_l.constprop.0+0x46>
 800599e:	230a      	movs	r3, #10
 80059a0:	e7ab      	b.n	80058fa <_strtol_l.constprop.0+0x56>
 80059a2:	bf00      	nop
 80059a4:	08007031 	.word	0x08007031

080059a8 <_strtol_r>:
 80059a8:	f7ff bf7c 	b.w	80058a4 <_strtol_l.constprop.0>

080059ac <__ssputs_r>:
 80059ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059b0:	688e      	ldr	r6, [r1, #8]
 80059b2:	461f      	mov	r7, r3
 80059b4:	42be      	cmp	r6, r7
 80059b6:	680b      	ldr	r3, [r1, #0]
 80059b8:	4682      	mov	sl, r0
 80059ba:	460c      	mov	r4, r1
 80059bc:	4690      	mov	r8, r2
 80059be:	d82c      	bhi.n	8005a1a <__ssputs_r+0x6e>
 80059c0:	898a      	ldrh	r2, [r1, #12]
 80059c2:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80059c6:	d026      	beq.n	8005a16 <__ssputs_r+0x6a>
 80059c8:	6965      	ldr	r5, [r4, #20]
 80059ca:	6909      	ldr	r1, [r1, #16]
 80059cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80059d0:	eba3 0901 	sub.w	r9, r3, r1
 80059d4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80059d8:	1c7b      	adds	r3, r7, #1
 80059da:	444b      	add	r3, r9
 80059dc:	106d      	asrs	r5, r5, #1
 80059de:	429d      	cmp	r5, r3
 80059e0:	bf38      	it	cc
 80059e2:	461d      	movcc	r5, r3
 80059e4:	0553      	lsls	r3, r2, #21
 80059e6:	d527      	bpl.n	8005a38 <__ssputs_r+0x8c>
 80059e8:	4629      	mov	r1, r5
 80059ea:	f7fe fc0f 	bl	800420c <_malloc_r>
 80059ee:	4606      	mov	r6, r0
 80059f0:	b360      	cbz	r0, 8005a4c <__ssputs_r+0xa0>
 80059f2:	6921      	ldr	r1, [r4, #16]
 80059f4:	464a      	mov	r2, r9
 80059f6:	f000 fc07 	bl	8006208 <memcpy>
 80059fa:	89a3      	ldrh	r3, [r4, #12]
 80059fc:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005a00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005a04:	81a3      	strh	r3, [r4, #12]
 8005a06:	6126      	str	r6, [r4, #16]
 8005a08:	6165      	str	r5, [r4, #20]
 8005a0a:	444e      	add	r6, r9
 8005a0c:	eba5 0509 	sub.w	r5, r5, r9
 8005a10:	6026      	str	r6, [r4, #0]
 8005a12:	60a5      	str	r5, [r4, #8]
 8005a14:	463e      	mov	r6, r7
 8005a16:	42be      	cmp	r6, r7
 8005a18:	d900      	bls.n	8005a1c <__ssputs_r+0x70>
 8005a1a:	463e      	mov	r6, r7
 8005a1c:	6820      	ldr	r0, [r4, #0]
 8005a1e:	4632      	mov	r2, r6
 8005a20:	4641      	mov	r1, r8
 8005a22:	f000 fbb5 	bl	8006190 <memmove>
 8005a26:	68a3      	ldr	r3, [r4, #8]
 8005a28:	1b9b      	subs	r3, r3, r6
 8005a2a:	60a3      	str	r3, [r4, #8]
 8005a2c:	6823      	ldr	r3, [r4, #0]
 8005a2e:	4433      	add	r3, r6
 8005a30:	6023      	str	r3, [r4, #0]
 8005a32:	2000      	movs	r0, #0
 8005a34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a38:	462a      	mov	r2, r5
 8005a3a:	f000 ff82 	bl	8006942 <_realloc_r>
 8005a3e:	4606      	mov	r6, r0
 8005a40:	2800      	cmp	r0, #0
 8005a42:	d1e0      	bne.n	8005a06 <__ssputs_r+0x5a>
 8005a44:	6921      	ldr	r1, [r4, #16]
 8005a46:	4650      	mov	r0, sl
 8005a48:	f7fe fb6c 	bl	8004124 <_free_r>
 8005a4c:	230c      	movs	r3, #12
 8005a4e:	f8ca 3000 	str.w	r3, [sl]
 8005a52:	89a3      	ldrh	r3, [r4, #12]
 8005a54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005a58:	81a3      	strh	r3, [r4, #12]
 8005a5a:	f04f 30ff 	mov.w	r0, #4294967295
 8005a5e:	e7e9      	b.n	8005a34 <__ssputs_r+0x88>

08005a60 <_svfiprintf_r>:
 8005a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a64:	4698      	mov	r8, r3
 8005a66:	898b      	ldrh	r3, [r1, #12]
 8005a68:	061b      	lsls	r3, r3, #24
 8005a6a:	b09d      	sub	sp, #116	; 0x74
 8005a6c:	4607      	mov	r7, r0
 8005a6e:	460d      	mov	r5, r1
 8005a70:	4614      	mov	r4, r2
 8005a72:	d50e      	bpl.n	8005a92 <_svfiprintf_r+0x32>
 8005a74:	690b      	ldr	r3, [r1, #16]
 8005a76:	b963      	cbnz	r3, 8005a92 <_svfiprintf_r+0x32>
 8005a78:	2140      	movs	r1, #64	; 0x40
 8005a7a:	f7fe fbc7 	bl	800420c <_malloc_r>
 8005a7e:	6028      	str	r0, [r5, #0]
 8005a80:	6128      	str	r0, [r5, #16]
 8005a82:	b920      	cbnz	r0, 8005a8e <_svfiprintf_r+0x2e>
 8005a84:	230c      	movs	r3, #12
 8005a86:	603b      	str	r3, [r7, #0]
 8005a88:	f04f 30ff 	mov.w	r0, #4294967295
 8005a8c:	e0d0      	b.n	8005c30 <_svfiprintf_r+0x1d0>
 8005a8e:	2340      	movs	r3, #64	; 0x40
 8005a90:	616b      	str	r3, [r5, #20]
 8005a92:	2300      	movs	r3, #0
 8005a94:	9309      	str	r3, [sp, #36]	; 0x24
 8005a96:	2320      	movs	r3, #32
 8005a98:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005a9c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005aa0:	2330      	movs	r3, #48	; 0x30
 8005aa2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8005c48 <_svfiprintf_r+0x1e8>
 8005aa6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005aaa:	f04f 0901 	mov.w	r9, #1
 8005aae:	4623      	mov	r3, r4
 8005ab0:	469a      	mov	sl, r3
 8005ab2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ab6:	b10a      	cbz	r2, 8005abc <_svfiprintf_r+0x5c>
 8005ab8:	2a25      	cmp	r2, #37	; 0x25
 8005aba:	d1f9      	bne.n	8005ab0 <_svfiprintf_r+0x50>
 8005abc:	ebba 0b04 	subs.w	fp, sl, r4
 8005ac0:	d00b      	beq.n	8005ada <_svfiprintf_r+0x7a>
 8005ac2:	465b      	mov	r3, fp
 8005ac4:	4622      	mov	r2, r4
 8005ac6:	4629      	mov	r1, r5
 8005ac8:	4638      	mov	r0, r7
 8005aca:	f7ff ff6f 	bl	80059ac <__ssputs_r>
 8005ace:	3001      	adds	r0, #1
 8005ad0:	f000 80a9 	beq.w	8005c26 <_svfiprintf_r+0x1c6>
 8005ad4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005ad6:	445a      	add	r2, fp
 8005ad8:	9209      	str	r2, [sp, #36]	; 0x24
 8005ada:	f89a 3000 	ldrb.w	r3, [sl]
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	f000 80a1 	beq.w	8005c26 <_svfiprintf_r+0x1c6>
 8005ae4:	2300      	movs	r3, #0
 8005ae6:	f04f 32ff 	mov.w	r2, #4294967295
 8005aea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005aee:	f10a 0a01 	add.w	sl, sl, #1
 8005af2:	9304      	str	r3, [sp, #16]
 8005af4:	9307      	str	r3, [sp, #28]
 8005af6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005afa:	931a      	str	r3, [sp, #104]	; 0x68
 8005afc:	4654      	mov	r4, sl
 8005afe:	2205      	movs	r2, #5
 8005b00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005b04:	4850      	ldr	r0, [pc, #320]	; (8005c48 <_svfiprintf_r+0x1e8>)
 8005b06:	f7fa fb6b 	bl	80001e0 <memchr>
 8005b0a:	9a04      	ldr	r2, [sp, #16]
 8005b0c:	b9d8      	cbnz	r0, 8005b46 <_svfiprintf_r+0xe6>
 8005b0e:	06d0      	lsls	r0, r2, #27
 8005b10:	bf44      	itt	mi
 8005b12:	2320      	movmi	r3, #32
 8005b14:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005b18:	0711      	lsls	r1, r2, #28
 8005b1a:	bf44      	itt	mi
 8005b1c:	232b      	movmi	r3, #43	; 0x2b
 8005b1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005b22:	f89a 3000 	ldrb.w	r3, [sl]
 8005b26:	2b2a      	cmp	r3, #42	; 0x2a
 8005b28:	d015      	beq.n	8005b56 <_svfiprintf_r+0xf6>
 8005b2a:	9a07      	ldr	r2, [sp, #28]
 8005b2c:	4654      	mov	r4, sl
 8005b2e:	2000      	movs	r0, #0
 8005b30:	f04f 0c0a 	mov.w	ip, #10
 8005b34:	4621      	mov	r1, r4
 8005b36:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005b3a:	3b30      	subs	r3, #48	; 0x30
 8005b3c:	2b09      	cmp	r3, #9
 8005b3e:	d94d      	bls.n	8005bdc <_svfiprintf_r+0x17c>
 8005b40:	b1b0      	cbz	r0, 8005b70 <_svfiprintf_r+0x110>
 8005b42:	9207      	str	r2, [sp, #28]
 8005b44:	e014      	b.n	8005b70 <_svfiprintf_r+0x110>
 8005b46:	eba0 0308 	sub.w	r3, r0, r8
 8005b4a:	fa09 f303 	lsl.w	r3, r9, r3
 8005b4e:	4313      	orrs	r3, r2
 8005b50:	9304      	str	r3, [sp, #16]
 8005b52:	46a2      	mov	sl, r4
 8005b54:	e7d2      	b.n	8005afc <_svfiprintf_r+0x9c>
 8005b56:	9b03      	ldr	r3, [sp, #12]
 8005b58:	1d19      	adds	r1, r3, #4
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	9103      	str	r1, [sp, #12]
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	bfbb      	ittet	lt
 8005b62:	425b      	neglt	r3, r3
 8005b64:	f042 0202 	orrlt.w	r2, r2, #2
 8005b68:	9307      	strge	r3, [sp, #28]
 8005b6a:	9307      	strlt	r3, [sp, #28]
 8005b6c:	bfb8      	it	lt
 8005b6e:	9204      	strlt	r2, [sp, #16]
 8005b70:	7823      	ldrb	r3, [r4, #0]
 8005b72:	2b2e      	cmp	r3, #46	; 0x2e
 8005b74:	d10c      	bne.n	8005b90 <_svfiprintf_r+0x130>
 8005b76:	7863      	ldrb	r3, [r4, #1]
 8005b78:	2b2a      	cmp	r3, #42	; 0x2a
 8005b7a:	d134      	bne.n	8005be6 <_svfiprintf_r+0x186>
 8005b7c:	9b03      	ldr	r3, [sp, #12]
 8005b7e:	1d1a      	adds	r2, r3, #4
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	9203      	str	r2, [sp, #12]
 8005b84:	2b00      	cmp	r3, #0
 8005b86:	bfb8      	it	lt
 8005b88:	f04f 33ff 	movlt.w	r3, #4294967295
 8005b8c:	3402      	adds	r4, #2
 8005b8e:	9305      	str	r3, [sp, #20]
 8005b90:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8005c58 <_svfiprintf_r+0x1f8>
 8005b94:	7821      	ldrb	r1, [r4, #0]
 8005b96:	2203      	movs	r2, #3
 8005b98:	4650      	mov	r0, sl
 8005b9a:	f7fa fb21 	bl	80001e0 <memchr>
 8005b9e:	b138      	cbz	r0, 8005bb0 <_svfiprintf_r+0x150>
 8005ba0:	9b04      	ldr	r3, [sp, #16]
 8005ba2:	eba0 000a 	sub.w	r0, r0, sl
 8005ba6:	2240      	movs	r2, #64	; 0x40
 8005ba8:	4082      	lsls	r2, r0
 8005baa:	4313      	orrs	r3, r2
 8005bac:	3401      	adds	r4, #1
 8005bae:	9304      	str	r3, [sp, #16]
 8005bb0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005bb4:	4825      	ldr	r0, [pc, #148]	; (8005c4c <_svfiprintf_r+0x1ec>)
 8005bb6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005bba:	2206      	movs	r2, #6
 8005bbc:	f7fa fb10 	bl	80001e0 <memchr>
 8005bc0:	2800      	cmp	r0, #0
 8005bc2:	d038      	beq.n	8005c36 <_svfiprintf_r+0x1d6>
 8005bc4:	4b22      	ldr	r3, [pc, #136]	; (8005c50 <_svfiprintf_r+0x1f0>)
 8005bc6:	bb1b      	cbnz	r3, 8005c10 <_svfiprintf_r+0x1b0>
 8005bc8:	9b03      	ldr	r3, [sp, #12]
 8005bca:	3307      	adds	r3, #7
 8005bcc:	f023 0307 	bic.w	r3, r3, #7
 8005bd0:	3308      	adds	r3, #8
 8005bd2:	9303      	str	r3, [sp, #12]
 8005bd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005bd6:	4433      	add	r3, r6
 8005bd8:	9309      	str	r3, [sp, #36]	; 0x24
 8005bda:	e768      	b.n	8005aae <_svfiprintf_r+0x4e>
 8005bdc:	fb0c 3202 	mla	r2, ip, r2, r3
 8005be0:	460c      	mov	r4, r1
 8005be2:	2001      	movs	r0, #1
 8005be4:	e7a6      	b.n	8005b34 <_svfiprintf_r+0xd4>
 8005be6:	2300      	movs	r3, #0
 8005be8:	3401      	adds	r4, #1
 8005bea:	9305      	str	r3, [sp, #20]
 8005bec:	4619      	mov	r1, r3
 8005bee:	f04f 0c0a 	mov.w	ip, #10
 8005bf2:	4620      	mov	r0, r4
 8005bf4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005bf8:	3a30      	subs	r2, #48	; 0x30
 8005bfa:	2a09      	cmp	r2, #9
 8005bfc:	d903      	bls.n	8005c06 <_svfiprintf_r+0x1a6>
 8005bfe:	2b00      	cmp	r3, #0
 8005c00:	d0c6      	beq.n	8005b90 <_svfiprintf_r+0x130>
 8005c02:	9105      	str	r1, [sp, #20]
 8005c04:	e7c4      	b.n	8005b90 <_svfiprintf_r+0x130>
 8005c06:	fb0c 2101 	mla	r1, ip, r1, r2
 8005c0a:	4604      	mov	r4, r0
 8005c0c:	2301      	movs	r3, #1
 8005c0e:	e7f0      	b.n	8005bf2 <_svfiprintf_r+0x192>
 8005c10:	ab03      	add	r3, sp, #12
 8005c12:	9300      	str	r3, [sp, #0]
 8005c14:	462a      	mov	r2, r5
 8005c16:	4b0f      	ldr	r3, [pc, #60]	; (8005c54 <_svfiprintf_r+0x1f4>)
 8005c18:	a904      	add	r1, sp, #16
 8005c1a:	4638      	mov	r0, r7
 8005c1c:	f7fc fc56 	bl	80024cc <_printf_float>
 8005c20:	1c42      	adds	r2, r0, #1
 8005c22:	4606      	mov	r6, r0
 8005c24:	d1d6      	bne.n	8005bd4 <_svfiprintf_r+0x174>
 8005c26:	89ab      	ldrh	r3, [r5, #12]
 8005c28:	065b      	lsls	r3, r3, #25
 8005c2a:	f53f af2d 	bmi.w	8005a88 <_svfiprintf_r+0x28>
 8005c2e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005c30:	b01d      	add	sp, #116	; 0x74
 8005c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c36:	ab03      	add	r3, sp, #12
 8005c38:	9300      	str	r3, [sp, #0]
 8005c3a:	462a      	mov	r2, r5
 8005c3c:	4b05      	ldr	r3, [pc, #20]	; (8005c54 <_svfiprintf_r+0x1f4>)
 8005c3e:	a904      	add	r1, sp, #16
 8005c40:	4638      	mov	r0, r7
 8005c42:	f7fc fee7 	bl	8002a14 <_printf_i>
 8005c46:	e7eb      	b.n	8005c20 <_svfiprintf_r+0x1c0>
 8005c48:	08007131 	.word	0x08007131
 8005c4c:	0800713b 	.word	0x0800713b
 8005c50:	080024cd 	.word	0x080024cd
 8005c54:	080059ad 	.word	0x080059ad
 8005c58:	08007137 	.word	0x08007137

08005c5c <__sfputc_r>:
 8005c5c:	6893      	ldr	r3, [r2, #8]
 8005c5e:	3b01      	subs	r3, #1
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	b410      	push	{r4}
 8005c64:	6093      	str	r3, [r2, #8]
 8005c66:	da08      	bge.n	8005c7a <__sfputc_r+0x1e>
 8005c68:	6994      	ldr	r4, [r2, #24]
 8005c6a:	42a3      	cmp	r3, r4
 8005c6c:	db01      	blt.n	8005c72 <__sfputc_r+0x16>
 8005c6e:	290a      	cmp	r1, #10
 8005c70:	d103      	bne.n	8005c7a <__sfputc_r+0x1e>
 8005c72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005c76:	f000 b9f5 	b.w	8006064 <__swbuf_r>
 8005c7a:	6813      	ldr	r3, [r2, #0]
 8005c7c:	1c58      	adds	r0, r3, #1
 8005c7e:	6010      	str	r0, [r2, #0]
 8005c80:	7019      	strb	r1, [r3, #0]
 8005c82:	4608      	mov	r0, r1
 8005c84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005c88:	4770      	bx	lr

08005c8a <__sfputs_r>:
 8005c8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c8c:	4606      	mov	r6, r0
 8005c8e:	460f      	mov	r7, r1
 8005c90:	4614      	mov	r4, r2
 8005c92:	18d5      	adds	r5, r2, r3
 8005c94:	42ac      	cmp	r4, r5
 8005c96:	d101      	bne.n	8005c9c <__sfputs_r+0x12>
 8005c98:	2000      	movs	r0, #0
 8005c9a:	e007      	b.n	8005cac <__sfputs_r+0x22>
 8005c9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005ca0:	463a      	mov	r2, r7
 8005ca2:	4630      	mov	r0, r6
 8005ca4:	f7ff ffda 	bl	8005c5c <__sfputc_r>
 8005ca8:	1c43      	adds	r3, r0, #1
 8005caa:	d1f3      	bne.n	8005c94 <__sfputs_r+0xa>
 8005cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005cb0 <_vfiprintf_r>:
 8005cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cb4:	460d      	mov	r5, r1
 8005cb6:	b09d      	sub	sp, #116	; 0x74
 8005cb8:	4614      	mov	r4, r2
 8005cba:	4698      	mov	r8, r3
 8005cbc:	4606      	mov	r6, r0
 8005cbe:	b118      	cbz	r0, 8005cc8 <_vfiprintf_r+0x18>
 8005cc0:	6a03      	ldr	r3, [r0, #32]
 8005cc2:	b90b      	cbnz	r3, 8005cc8 <_vfiprintf_r+0x18>
 8005cc4:	f7fd fa64 	bl	8003190 <__sinit>
 8005cc8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005cca:	07d9      	lsls	r1, r3, #31
 8005ccc:	d405      	bmi.n	8005cda <_vfiprintf_r+0x2a>
 8005cce:	89ab      	ldrh	r3, [r5, #12]
 8005cd0:	059a      	lsls	r2, r3, #22
 8005cd2:	d402      	bmi.n	8005cda <_vfiprintf_r+0x2a>
 8005cd4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005cd6:	f7fd fb84 	bl	80033e2 <__retarget_lock_acquire_recursive>
 8005cda:	89ab      	ldrh	r3, [r5, #12]
 8005cdc:	071b      	lsls	r3, r3, #28
 8005cde:	d501      	bpl.n	8005ce4 <_vfiprintf_r+0x34>
 8005ce0:	692b      	ldr	r3, [r5, #16]
 8005ce2:	b99b      	cbnz	r3, 8005d0c <_vfiprintf_r+0x5c>
 8005ce4:	4629      	mov	r1, r5
 8005ce6:	4630      	mov	r0, r6
 8005ce8:	f000 f9fa 	bl	80060e0 <__swsetup_r>
 8005cec:	b170      	cbz	r0, 8005d0c <_vfiprintf_r+0x5c>
 8005cee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005cf0:	07dc      	lsls	r4, r3, #31
 8005cf2:	d504      	bpl.n	8005cfe <_vfiprintf_r+0x4e>
 8005cf4:	f04f 30ff 	mov.w	r0, #4294967295
 8005cf8:	b01d      	add	sp, #116	; 0x74
 8005cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cfe:	89ab      	ldrh	r3, [r5, #12]
 8005d00:	0598      	lsls	r0, r3, #22
 8005d02:	d4f7      	bmi.n	8005cf4 <_vfiprintf_r+0x44>
 8005d04:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005d06:	f7fd fb6d 	bl	80033e4 <__retarget_lock_release_recursive>
 8005d0a:	e7f3      	b.n	8005cf4 <_vfiprintf_r+0x44>
 8005d0c:	2300      	movs	r3, #0
 8005d0e:	9309      	str	r3, [sp, #36]	; 0x24
 8005d10:	2320      	movs	r3, #32
 8005d12:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005d16:	f8cd 800c 	str.w	r8, [sp, #12]
 8005d1a:	2330      	movs	r3, #48	; 0x30
 8005d1c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8005ed0 <_vfiprintf_r+0x220>
 8005d20:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005d24:	f04f 0901 	mov.w	r9, #1
 8005d28:	4623      	mov	r3, r4
 8005d2a:	469a      	mov	sl, r3
 8005d2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005d30:	b10a      	cbz	r2, 8005d36 <_vfiprintf_r+0x86>
 8005d32:	2a25      	cmp	r2, #37	; 0x25
 8005d34:	d1f9      	bne.n	8005d2a <_vfiprintf_r+0x7a>
 8005d36:	ebba 0b04 	subs.w	fp, sl, r4
 8005d3a:	d00b      	beq.n	8005d54 <_vfiprintf_r+0xa4>
 8005d3c:	465b      	mov	r3, fp
 8005d3e:	4622      	mov	r2, r4
 8005d40:	4629      	mov	r1, r5
 8005d42:	4630      	mov	r0, r6
 8005d44:	f7ff ffa1 	bl	8005c8a <__sfputs_r>
 8005d48:	3001      	adds	r0, #1
 8005d4a:	f000 80a9 	beq.w	8005ea0 <_vfiprintf_r+0x1f0>
 8005d4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005d50:	445a      	add	r2, fp
 8005d52:	9209      	str	r2, [sp, #36]	; 0x24
 8005d54:	f89a 3000 	ldrb.w	r3, [sl]
 8005d58:	2b00      	cmp	r3, #0
 8005d5a:	f000 80a1 	beq.w	8005ea0 <_vfiprintf_r+0x1f0>
 8005d5e:	2300      	movs	r3, #0
 8005d60:	f04f 32ff 	mov.w	r2, #4294967295
 8005d64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005d68:	f10a 0a01 	add.w	sl, sl, #1
 8005d6c:	9304      	str	r3, [sp, #16]
 8005d6e:	9307      	str	r3, [sp, #28]
 8005d70:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005d74:	931a      	str	r3, [sp, #104]	; 0x68
 8005d76:	4654      	mov	r4, sl
 8005d78:	2205      	movs	r2, #5
 8005d7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d7e:	4854      	ldr	r0, [pc, #336]	; (8005ed0 <_vfiprintf_r+0x220>)
 8005d80:	f7fa fa2e 	bl	80001e0 <memchr>
 8005d84:	9a04      	ldr	r2, [sp, #16]
 8005d86:	b9d8      	cbnz	r0, 8005dc0 <_vfiprintf_r+0x110>
 8005d88:	06d1      	lsls	r1, r2, #27
 8005d8a:	bf44      	itt	mi
 8005d8c:	2320      	movmi	r3, #32
 8005d8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005d92:	0713      	lsls	r3, r2, #28
 8005d94:	bf44      	itt	mi
 8005d96:	232b      	movmi	r3, #43	; 0x2b
 8005d98:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005d9c:	f89a 3000 	ldrb.w	r3, [sl]
 8005da0:	2b2a      	cmp	r3, #42	; 0x2a
 8005da2:	d015      	beq.n	8005dd0 <_vfiprintf_r+0x120>
 8005da4:	9a07      	ldr	r2, [sp, #28]
 8005da6:	4654      	mov	r4, sl
 8005da8:	2000      	movs	r0, #0
 8005daa:	f04f 0c0a 	mov.w	ip, #10
 8005dae:	4621      	mov	r1, r4
 8005db0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005db4:	3b30      	subs	r3, #48	; 0x30
 8005db6:	2b09      	cmp	r3, #9
 8005db8:	d94d      	bls.n	8005e56 <_vfiprintf_r+0x1a6>
 8005dba:	b1b0      	cbz	r0, 8005dea <_vfiprintf_r+0x13a>
 8005dbc:	9207      	str	r2, [sp, #28]
 8005dbe:	e014      	b.n	8005dea <_vfiprintf_r+0x13a>
 8005dc0:	eba0 0308 	sub.w	r3, r0, r8
 8005dc4:	fa09 f303 	lsl.w	r3, r9, r3
 8005dc8:	4313      	orrs	r3, r2
 8005dca:	9304      	str	r3, [sp, #16]
 8005dcc:	46a2      	mov	sl, r4
 8005dce:	e7d2      	b.n	8005d76 <_vfiprintf_r+0xc6>
 8005dd0:	9b03      	ldr	r3, [sp, #12]
 8005dd2:	1d19      	adds	r1, r3, #4
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	9103      	str	r1, [sp, #12]
 8005dd8:	2b00      	cmp	r3, #0
 8005dda:	bfbb      	ittet	lt
 8005ddc:	425b      	neglt	r3, r3
 8005dde:	f042 0202 	orrlt.w	r2, r2, #2
 8005de2:	9307      	strge	r3, [sp, #28]
 8005de4:	9307      	strlt	r3, [sp, #28]
 8005de6:	bfb8      	it	lt
 8005de8:	9204      	strlt	r2, [sp, #16]
 8005dea:	7823      	ldrb	r3, [r4, #0]
 8005dec:	2b2e      	cmp	r3, #46	; 0x2e
 8005dee:	d10c      	bne.n	8005e0a <_vfiprintf_r+0x15a>
 8005df0:	7863      	ldrb	r3, [r4, #1]
 8005df2:	2b2a      	cmp	r3, #42	; 0x2a
 8005df4:	d134      	bne.n	8005e60 <_vfiprintf_r+0x1b0>
 8005df6:	9b03      	ldr	r3, [sp, #12]
 8005df8:	1d1a      	adds	r2, r3, #4
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	9203      	str	r2, [sp, #12]
 8005dfe:	2b00      	cmp	r3, #0
 8005e00:	bfb8      	it	lt
 8005e02:	f04f 33ff 	movlt.w	r3, #4294967295
 8005e06:	3402      	adds	r4, #2
 8005e08:	9305      	str	r3, [sp, #20]
 8005e0a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8005ee0 <_vfiprintf_r+0x230>
 8005e0e:	7821      	ldrb	r1, [r4, #0]
 8005e10:	2203      	movs	r2, #3
 8005e12:	4650      	mov	r0, sl
 8005e14:	f7fa f9e4 	bl	80001e0 <memchr>
 8005e18:	b138      	cbz	r0, 8005e2a <_vfiprintf_r+0x17a>
 8005e1a:	9b04      	ldr	r3, [sp, #16]
 8005e1c:	eba0 000a 	sub.w	r0, r0, sl
 8005e20:	2240      	movs	r2, #64	; 0x40
 8005e22:	4082      	lsls	r2, r0
 8005e24:	4313      	orrs	r3, r2
 8005e26:	3401      	adds	r4, #1
 8005e28:	9304      	str	r3, [sp, #16]
 8005e2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005e2e:	4829      	ldr	r0, [pc, #164]	; (8005ed4 <_vfiprintf_r+0x224>)
 8005e30:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005e34:	2206      	movs	r2, #6
 8005e36:	f7fa f9d3 	bl	80001e0 <memchr>
 8005e3a:	2800      	cmp	r0, #0
 8005e3c:	d03f      	beq.n	8005ebe <_vfiprintf_r+0x20e>
 8005e3e:	4b26      	ldr	r3, [pc, #152]	; (8005ed8 <_vfiprintf_r+0x228>)
 8005e40:	bb1b      	cbnz	r3, 8005e8a <_vfiprintf_r+0x1da>
 8005e42:	9b03      	ldr	r3, [sp, #12]
 8005e44:	3307      	adds	r3, #7
 8005e46:	f023 0307 	bic.w	r3, r3, #7
 8005e4a:	3308      	adds	r3, #8
 8005e4c:	9303      	str	r3, [sp, #12]
 8005e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e50:	443b      	add	r3, r7
 8005e52:	9309      	str	r3, [sp, #36]	; 0x24
 8005e54:	e768      	b.n	8005d28 <_vfiprintf_r+0x78>
 8005e56:	fb0c 3202 	mla	r2, ip, r2, r3
 8005e5a:	460c      	mov	r4, r1
 8005e5c:	2001      	movs	r0, #1
 8005e5e:	e7a6      	b.n	8005dae <_vfiprintf_r+0xfe>
 8005e60:	2300      	movs	r3, #0
 8005e62:	3401      	adds	r4, #1
 8005e64:	9305      	str	r3, [sp, #20]
 8005e66:	4619      	mov	r1, r3
 8005e68:	f04f 0c0a 	mov.w	ip, #10
 8005e6c:	4620      	mov	r0, r4
 8005e6e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005e72:	3a30      	subs	r2, #48	; 0x30
 8005e74:	2a09      	cmp	r2, #9
 8005e76:	d903      	bls.n	8005e80 <_vfiprintf_r+0x1d0>
 8005e78:	2b00      	cmp	r3, #0
 8005e7a:	d0c6      	beq.n	8005e0a <_vfiprintf_r+0x15a>
 8005e7c:	9105      	str	r1, [sp, #20]
 8005e7e:	e7c4      	b.n	8005e0a <_vfiprintf_r+0x15a>
 8005e80:	fb0c 2101 	mla	r1, ip, r1, r2
 8005e84:	4604      	mov	r4, r0
 8005e86:	2301      	movs	r3, #1
 8005e88:	e7f0      	b.n	8005e6c <_vfiprintf_r+0x1bc>
 8005e8a:	ab03      	add	r3, sp, #12
 8005e8c:	9300      	str	r3, [sp, #0]
 8005e8e:	462a      	mov	r2, r5
 8005e90:	4b12      	ldr	r3, [pc, #72]	; (8005edc <_vfiprintf_r+0x22c>)
 8005e92:	a904      	add	r1, sp, #16
 8005e94:	4630      	mov	r0, r6
 8005e96:	f7fc fb19 	bl	80024cc <_printf_float>
 8005e9a:	4607      	mov	r7, r0
 8005e9c:	1c78      	adds	r0, r7, #1
 8005e9e:	d1d6      	bne.n	8005e4e <_vfiprintf_r+0x19e>
 8005ea0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005ea2:	07d9      	lsls	r1, r3, #31
 8005ea4:	d405      	bmi.n	8005eb2 <_vfiprintf_r+0x202>
 8005ea6:	89ab      	ldrh	r3, [r5, #12]
 8005ea8:	059a      	lsls	r2, r3, #22
 8005eaa:	d402      	bmi.n	8005eb2 <_vfiprintf_r+0x202>
 8005eac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005eae:	f7fd fa99 	bl	80033e4 <__retarget_lock_release_recursive>
 8005eb2:	89ab      	ldrh	r3, [r5, #12]
 8005eb4:	065b      	lsls	r3, r3, #25
 8005eb6:	f53f af1d 	bmi.w	8005cf4 <_vfiprintf_r+0x44>
 8005eba:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005ebc:	e71c      	b.n	8005cf8 <_vfiprintf_r+0x48>
 8005ebe:	ab03      	add	r3, sp, #12
 8005ec0:	9300      	str	r3, [sp, #0]
 8005ec2:	462a      	mov	r2, r5
 8005ec4:	4b05      	ldr	r3, [pc, #20]	; (8005edc <_vfiprintf_r+0x22c>)
 8005ec6:	a904      	add	r1, sp, #16
 8005ec8:	4630      	mov	r0, r6
 8005eca:	f7fc fda3 	bl	8002a14 <_printf_i>
 8005ece:	e7e4      	b.n	8005e9a <_vfiprintf_r+0x1ea>
 8005ed0:	08007131 	.word	0x08007131
 8005ed4:	0800713b 	.word	0x0800713b
 8005ed8:	080024cd 	.word	0x080024cd
 8005edc:	08005c8b 	.word	0x08005c8b
 8005ee0:	08007137 	.word	0x08007137

08005ee4 <__sflush_r>:
 8005ee4:	898a      	ldrh	r2, [r1, #12]
 8005ee6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005eea:	4605      	mov	r5, r0
 8005eec:	0710      	lsls	r0, r2, #28
 8005eee:	460c      	mov	r4, r1
 8005ef0:	d458      	bmi.n	8005fa4 <__sflush_r+0xc0>
 8005ef2:	684b      	ldr	r3, [r1, #4]
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	dc05      	bgt.n	8005f04 <__sflush_r+0x20>
 8005ef8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	dc02      	bgt.n	8005f04 <__sflush_r+0x20>
 8005efe:	2000      	movs	r0, #0
 8005f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f04:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005f06:	2e00      	cmp	r6, #0
 8005f08:	d0f9      	beq.n	8005efe <__sflush_r+0x1a>
 8005f0a:	2300      	movs	r3, #0
 8005f0c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005f10:	682f      	ldr	r7, [r5, #0]
 8005f12:	6a21      	ldr	r1, [r4, #32]
 8005f14:	602b      	str	r3, [r5, #0]
 8005f16:	d032      	beq.n	8005f7e <__sflush_r+0x9a>
 8005f18:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005f1a:	89a3      	ldrh	r3, [r4, #12]
 8005f1c:	075a      	lsls	r2, r3, #29
 8005f1e:	d505      	bpl.n	8005f2c <__sflush_r+0x48>
 8005f20:	6863      	ldr	r3, [r4, #4]
 8005f22:	1ac0      	subs	r0, r0, r3
 8005f24:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005f26:	b10b      	cbz	r3, 8005f2c <__sflush_r+0x48>
 8005f28:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f2a:	1ac0      	subs	r0, r0, r3
 8005f2c:	2300      	movs	r3, #0
 8005f2e:	4602      	mov	r2, r0
 8005f30:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005f32:	6a21      	ldr	r1, [r4, #32]
 8005f34:	4628      	mov	r0, r5
 8005f36:	47b0      	blx	r6
 8005f38:	1c43      	adds	r3, r0, #1
 8005f3a:	89a3      	ldrh	r3, [r4, #12]
 8005f3c:	d106      	bne.n	8005f4c <__sflush_r+0x68>
 8005f3e:	6829      	ldr	r1, [r5, #0]
 8005f40:	291d      	cmp	r1, #29
 8005f42:	d82b      	bhi.n	8005f9c <__sflush_r+0xb8>
 8005f44:	4a29      	ldr	r2, [pc, #164]	; (8005fec <__sflush_r+0x108>)
 8005f46:	410a      	asrs	r2, r1
 8005f48:	07d6      	lsls	r6, r2, #31
 8005f4a:	d427      	bmi.n	8005f9c <__sflush_r+0xb8>
 8005f4c:	2200      	movs	r2, #0
 8005f4e:	6062      	str	r2, [r4, #4]
 8005f50:	04d9      	lsls	r1, r3, #19
 8005f52:	6922      	ldr	r2, [r4, #16]
 8005f54:	6022      	str	r2, [r4, #0]
 8005f56:	d504      	bpl.n	8005f62 <__sflush_r+0x7e>
 8005f58:	1c42      	adds	r2, r0, #1
 8005f5a:	d101      	bne.n	8005f60 <__sflush_r+0x7c>
 8005f5c:	682b      	ldr	r3, [r5, #0]
 8005f5e:	b903      	cbnz	r3, 8005f62 <__sflush_r+0x7e>
 8005f60:	6560      	str	r0, [r4, #84]	; 0x54
 8005f62:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005f64:	602f      	str	r7, [r5, #0]
 8005f66:	2900      	cmp	r1, #0
 8005f68:	d0c9      	beq.n	8005efe <__sflush_r+0x1a>
 8005f6a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005f6e:	4299      	cmp	r1, r3
 8005f70:	d002      	beq.n	8005f78 <__sflush_r+0x94>
 8005f72:	4628      	mov	r0, r5
 8005f74:	f7fe f8d6 	bl	8004124 <_free_r>
 8005f78:	2000      	movs	r0, #0
 8005f7a:	6360      	str	r0, [r4, #52]	; 0x34
 8005f7c:	e7c0      	b.n	8005f00 <__sflush_r+0x1c>
 8005f7e:	2301      	movs	r3, #1
 8005f80:	4628      	mov	r0, r5
 8005f82:	47b0      	blx	r6
 8005f84:	1c41      	adds	r1, r0, #1
 8005f86:	d1c8      	bne.n	8005f1a <__sflush_r+0x36>
 8005f88:	682b      	ldr	r3, [r5, #0]
 8005f8a:	2b00      	cmp	r3, #0
 8005f8c:	d0c5      	beq.n	8005f1a <__sflush_r+0x36>
 8005f8e:	2b1d      	cmp	r3, #29
 8005f90:	d001      	beq.n	8005f96 <__sflush_r+0xb2>
 8005f92:	2b16      	cmp	r3, #22
 8005f94:	d101      	bne.n	8005f9a <__sflush_r+0xb6>
 8005f96:	602f      	str	r7, [r5, #0]
 8005f98:	e7b1      	b.n	8005efe <__sflush_r+0x1a>
 8005f9a:	89a3      	ldrh	r3, [r4, #12]
 8005f9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005fa0:	81a3      	strh	r3, [r4, #12]
 8005fa2:	e7ad      	b.n	8005f00 <__sflush_r+0x1c>
 8005fa4:	690f      	ldr	r7, [r1, #16]
 8005fa6:	2f00      	cmp	r7, #0
 8005fa8:	d0a9      	beq.n	8005efe <__sflush_r+0x1a>
 8005faa:	0793      	lsls	r3, r2, #30
 8005fac:	680e      	ldr	r6, [r1, #0]
 8005fae:	bf08      	it	eq
 8005fb0:	694b      	ldreq	r3, [r1, #20]
 8005fb2:	600f      	str	r7, [r1, #0]
 8005fb4:	bf18      	it	ne
 8005fb6:	2300      	movne	r3, #0
 8005fb8:	eba6 0807 	sub.w	r8, r6, r7
 8005fbc:	608b      	str	r3, [r1, #8]
 8005fbe:	f1b8 0f00 	cmp.w	r8, #0
 8005fc2:	dd9c      	ble.n	8005efe <__sflush_r+0x1a>
 8005fc4:	6a21      	ldr	r1, [r4, #32]
 8005fc6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005fc8:	4643      	mov	r3, r8
 8005fca:	463a      	mov	r2, r7
 8005fcc:	4628      	mov	r0, r5
 8005fce:	47b0      	blx	r6
 8005fd0:	2800      	cmp	r0, #0
 8005fd2:	dc06      	bgt.n	8005fe2 <__sflush_r+0xfe>
 8005fd4:	89a3      	ldrh	r3, [r4, #12]
 8005fd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005fda:	81a3      	strh	r3, [r4, #12]
 8005fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8005fe0:	e78e      	b.n	8005f00 <__sflush_r+0x1c>
 8005fe2:	4407      	add	r7, r0
 8005fe4:	eba8 0800 	sub.w	r8, r8, r0
 8005fe8:	e7e9      	b.n	8005fbe <__sflush_r+0xda>
 8005fea:	bf00      	nop
 8005fec:	dfbffffe 	.word	0xdfbffffe

08005ff0 <_fflush_r>:
 8005ff0:	b538      	push	{r3, r4, r5, lr}
 8005ff2:	690b      	ldr	r3, [r1, #16]
 8005ff4:	4605      	mov	r5, r0
 8005ff6:	460c      	mov	r4, r1
 8005ff8:	b913      	cbnz	r3, 8006000 <_fflush_r+0x10>
 8005ffa:	2500      	movs	r5, #0
 8005ffc:	4628      	mov	r0, r5
 8005ffe:	bd38      	pop	{r3, r4, r5, pc}
 8006000:	b118      	cbz	r0, 800600a <_fflush_r+0x1a>
 8006002:	6a03      	ldr	r3, [r0, #32]
 8006004:	b90b      	cbnz	r3, 800600a <_fflush_r+0x1a>
 8006006:	f7fd f8c3 	bl	8003190 <__sinit>
 800600a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800600e:	2b00      	cmp	r3, #0
 8006010:	d0f3      	beq.n	8005ffa <_fflush_r+0xa>
 8006012:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006014:	07d0      	lsls	r0, r2, #31
 8006016:	d404      	bmi.n	8006022 <_fflush_r+0x32>
 8006018:	0599      	lsls	r1, r3, #22
 800601a:	d402      	bmi.n	8006022 <_fflush_r+0x32>
 800601c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800601e:	f7fd f9e0 	bl	80033e2 <__retarget_lock_acquire_recursive>
 8006022:	4628      	mov	r0, r5
 8006024:	4621      	mov	r1, r4
 8006026:	f7ff ff5d 	bl	8005ee4 <__sflush_r>
 800602a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800602c:	07da      	lsls	r2, r3, #31
 800602e:	4605      	mov	r5, r0
 8006030:	d4e4      	bmi.n	8005ffc <_fflush_r+0xc>
 8006032:	89a3      	ldrh	r3, [r4, #12]
 8006034:	059b      	lsls	r3, r3, #22
 8006036:	d4e1      	bmi.n	8005ffc <_fflush_r+0xc>
 8006038:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800603a:	f7fd f9d3 	bl	80033e4 <__retarget_lock_release_recursive>
 800603e:	e7dd      	b.n	8005ffc <_fflush_r+0xc>

08006040 <fiprintf>:
 8006040:	b40e      	push	{r1, r2, r3}
 8006042:	b503      	push	{r0, r1, lr}
 8006044:	4601      	mov	r1, r0
 8006046:	ab03      	add	r3, sp, #12
 8006048:	4805      	ldr	r0, [pc, #20]	; (8006060 <fiprintf+0x20>)
 800604a:	f853 2b04 	ldr.w	r2, [r3], #4
 800604e:	6800      	ldr	r0, [r0, #0]
 8006050:	9301      	str	r3, [sp, #4]
 8006052:	f7ff fe2d 	bl	8005cb0 <_vfiprintf_r>
 8006056:	b002      	add	sp, #8
 8006058:	f85d eb04 	ldr.w	lr, [sp], #4
 800605c:	b003      	add	sp, #12
 800605e:	4770      	bx	lr
 8006060:	20000084 	.word	0x20000084

08006064 <__swbuf_r>:
 8006064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006066:	460e      	mov	r6, r1
 8006068:	4614      	mov	r4, r2
 800606a:	4605      	mov	r5, r0
 800606c:	b118      	cbz	r0, 8006076 <__swbuf_r+0x12>
 800606e:	6a03      	ldr	r3, [r0, #32]
 8006070:	b90b      	cbnz	r3, 8006076 <__swbuf_r+0x12>
 8006072:	f7fd f88d 	bl	8003190 <__sinit>
 8006076:	69a3      	ldr	r3, [r4, #24]
 8006078:	60a3      	str	r3, [r4, #8]
 800607a:	89a3      	ldrh	r3, [r4, #12]
 800607c:	071a      	lsls	r2, r3, #28
 800607e:	d525      	bpl.n	80060cc <__swbuf_r+0x68>
 8006080:	6923      	ldr	r3, [r4, #16]
 8006082:	b31b      	cbz	r3, 80060cc <__swbuf_r+0x68>
 8006084:	6823      	ldr	r3, [r4, #0]
 8006086:	6922      	ldr	r2, [r4, #16]
 8006088:	1a98      	subs	r0, r3, r2
 800608a:	6963      	ldr	r3, [r4, #20]
 800608c:	b2f6      	uxtb	r6, r6
 800608e:	4283      	cmp	r3, r0
 8006090:	4637      	mov	r7, r6
 8006092:	dc04      	bgt.n	800609e <__swbuf_r+0x3a>
 8006094:	4621      	mov	r1, r4
 8006096:	4628      	mov	r0, r5
 8006098:	f7ff ffaa 	bl	8005ff0 <_fflush_r>
 800609c:	b9e0      	cbnz	r0, 80060d8 <__swbuf_r+0x74>
 800609e:	68a3      	ldr	r3, [r4, #8]
 80060a0:	3b01      	subs	r3, #1
 80060a2:	60a3      	str	r3, [r4, #8]
 80060a4:	6823      	ldr	r3, [r4, #0]
 80060a6:	1c5a      	adds	r2, r3, #1
 80060a8:	6022      	str	r2, [r4, #0]
 80060aa:	701e      	strb	r6, [r3, #0]
 80060ac:	6962      	ldr	r2, [r4, #20]
 80060ae:	1c43      	adds	r3, r0, #1
 80060b0:	429a      	cmp	r2, r3
 80060b2:	d004      	beq.n	80060be <__swbuf_r+0x5a>
 80060b4:	89a3      	ldrh	r3, [r4, #12]
 80060b6:	07db      	lsls	r3, r3, #31
 80060b8:	d506      	bpl.n	80060c8 <__swbuf_r+0x64>
 80060ba:	2e0a      	cmp	r6, #10
 80060bc:	d104      	bne.n	80060c8 <__swbuf_r+0x64>
 80060be:	4621      	mov	r1, r4
 80060c0:	4628      	mov	r0, r5
 80060c2:	f7ff ff95 	bl	8005ff0 <_fflush_r>
 80060c6:	b938      	cbnz	r0, 80060d8 <__swbuf_r+0x74>
 80060c8:	4638      	mov	r0, r7
 80060ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80060cc:	4621      	mov	r1, r4
 80060ce:	4628      	mov	r0, r5
 80060d0:	f000 f806 	bl	80060e0 <__swsetup_r>
 80060d4:	2800      	cmp	r0, #0
 80060d6:	d0d5      	beq.n	8006084 <__swbuf_r+0x20>
 80060d8:	f04f 37ff 	mov.w	r7, #4294967295
 80060dc:	e7f4      	b.n	80060c8 <__swbuf_r+0x64>
	...

080060e0 <__swsetup_r>:
 80060e0:	b538      	push	{r3, r4, r5, lr}
 80060e2:	4b2a      	ldr	r3, [pc, #168]	; (800618c <__swsetup_r+0xac>)
 80060e4:	4605      	mov	r5, r0
 80060e6:	6818      	ldr	r0, [r3, #0]
 80060e8:	460c      	mov	r4, r1
 80060ea:	b118      	cbz	r0, 80060f4 <__swsetup_r+0x14>
 80060ec:	6a03      	ldr	r3, [r0, #32]
 80060ee:	b90b      	cbnz	r3, 80060f4 <__swsetup_r+0x14>
 80060f0:	f7fd f84e 	bl	8003190 <__sinit>
 80060f4:	89a3      	ldrh	r3, [r4, #12]
 80060f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80060fa:	0718      	lsls	r0, r3, #28
 80060fc:	d422      	bmi.n	8006144 <__swsetup_r+0x64>
 80060fe:	06d9      	lsls	r1, r3, #27
 8006100:	d407      	bmi.n	8006112 <__swsetup_r+0x32>
 8006102:	2309      	movs	r3, #9
 8006104:	602b      	str	r3, [r5, #0]
 8006106:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800610a:	81a3      	strh	r3, [r4, #12]
 800610c:	f04f 30ff 	mov.w	r0, #4294967295
 8006110:	e034      	b.n	800617c <__swsetup_r+0x9c>
 8006112:	0758      	lsls	r0, r3, #29
 8006114:	d512      	bpl.n	800613c <__swsetup_r+0x5c>
 8006116:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006118:	b141      	cbz	r1, 800612c <__swsetup_r+0x4c>
 800611a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800611e:	4299      	cmp	r1, r3
 8006120:	d002      	beq.n	8006128 <__swsetup_r+0x48>
 8006122:	4628      	mov	r0, r5
 8006124:	f7fd fffe 	bl	8004124 <_free_r>
 8006128:	2300      	movs	r3, #0
 800612a:	6363      	str	r3, [r4, #52]	; 0x34
 800612c:	89a3      	ldrh	r3, [r4, #12]
 800612e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8006132:	81a3      	strh	r3, [r4, #12]
 8006134:	2300      	movs	r3, #0
 8006136:	6063      	str	r3, [r4, #4]
 8006138:	6923      	ldr	r3, [r4, #16]
 800613a:	6023      	str	r3, [r4, #0]
 800613c:	89a3      	ldrh	r3, [r4, #12]
 800613e:	f043 0308 	orr.w	r3, r3, #8
 8006142:	81a3      	strh	r3, [r4, #12]
 8006144:	6923      	ldr	r3, [r4, #16]
 8006146:	b94b      	cbnz	r3, 800615c <__swsetup_r+0x7c>
 8006148:	89a3      	ldrh	r3, [r4, #12]
 800614a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800614e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006152:	d003      	beq.n	800615c <__swsetup_r+0x7c>
 8006154:	4621      	mov	r1, r4
 8006156:	4628      	mov	r0, r5
 8006158:	f000 fc55 	bl	8006a06 <__smakebuf_r>
 800615c:	89a0      	ldrh	r0, [r4, #12]
 800615e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006162:	f010 0301 	ands.w	r3, r0, #1
 8006166:	d00a      	beq.n	800617e <__swsetup_r+0x9e>
 8006168:	2300      	movs	r3, #0
 800616a:	60a3      	str	r3, [r4, #8]
 800616c:	6963      	ldr	r3, [r4, #20]
 800616e:	425b      	negs	r3, r3
 8006170:	61a3      	str	r3, [r4, #24]
 8006172:	6923      	ldr	r3, [r4, #16]
 8006174:	b943      	cbnz	r3, 8006188 <__swsetup_r+0xa8>
 8006176:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800617a:	d1c4      	bne.n	8006106 <__swsetup_r+0x26>
 800617c:	bd38      	pop	{r3, r4, r5, pc}
 800617e:	0781      	lsls	r1, r0, #30
 8006180:	bf58      	it	pl
 8006182:	6963      	ldrpl	r3, [r4, #20]
 8006184:	60a3      	str	r3, [r4, #8]
 8006186:	e7f4      	b.n	8006172 <__swsetup_r+0x92>
 8006188:	2000      	movs	r0, #0
 800618a:	e7f7      	b.n	800617c <__swsetup_r+0x9c>
 800618c:	20000084 	.word	0x20000084

08006190 <memmove>:
 8006190:	4288      	cmp	r0, r1
 8006192:	b510      	push	{r4, lr}
 8006194:	eb01 0402 	add.w	r4, r1, r2
 8006198:	d902      	bls.n	80061a0 <memmove+0x10>
 800619a:	4284      	cmp	r4, r0
 800619c:	4623      	mov	r3, r4
 800619e:	d807      	bhi.n	80061b0 <memmove+0x20>
 80061a0:	1e43      	subs	r3, r0, #1
 80061a2:	42a1      	cmp	r1, r4
 80061a4:	d008      	beq.n	80061b8 <memmove+0x28>
 80061a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80061aa:	f803 2f01 	strb.w	r2, [r3, #1]!
 80061ae:	e7f8      	b.n	80061a2 <memmove+0x12>
 80061b0:	4402      	add	r2, r0
 80061b2:	4601      	mov	r1, r0
 80061b4:	428a      	cmp	r2, r1
 80061b6:	d100      	bne.n	80061ba <memmove+0x2a>
 80061b8:	bd10      	pop	{r4, pc}
 80061ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80061be:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80061c2:	e7f7      	b.n	80061b4 <memmove+0x24>

080061c4 <strncmp>:
 80061c4:	b510      	push	{r4, lr}
 80061c6:	b16a      	cbz	r2, 80061e4 <strncmp+0x20>
 80061c8:	3901      	subs	r1, #1
 80061ca:	1884      	adds	r4, r0, r2
 80061cc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80061d0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80061d4:	429a      	cmp	r2, r3
 80061d6:	d103      	bne.n	80061e0 <strncmp+0x1c>
 80061d8:	42a0      	cmp	r0, r4
 80061da:	d001      	beq.n	80061e0 <strncmp+0x1c>
 80061dc:	2a00      	cmp	r2, #0
 80061de:	d1f5      	bne.n	80061cc <strncmp+0x8>
 80061e0:	1ad0      	subs	r0, r2, r3
 80061e2:	bd10      	pop	{r4, pc}
 80061e4:	4610      	mov	r0, r2
 80061e6:	e7fc      	b.n	80061e2 <strncmp+0x1e>

080061e8 <_sbrk_r>:
 80061e8:	b538      	push	{r3, r4, r5, lr}
 80061ea:	4d06      	ldr	r5, [pc, #24]	; (8006204 <_sbrk_r+0x1c>)
 80061ec:	2300      	movs	r3, #0
 80061ee:	4604      	mov	r4, r0
 80061f0:	4608      	mov	r0, r1
 80061f2:	602b      	str	r3, [r5, #0]
 80061f4:	f7fb fd6e 	bl	8001cd4 <_sbrk>
 80061f8:	1c43      	adds	r3, r0, #1
 80061fa:	d102      	bne.n	8006202 <_sbrk_r+0x1a>
 80061fc:	682b      	ldr	r3, [r5, #0]
 80061fe:	b103      	cbz	r3, 8006202 <_sbrk_r+0x1a>
 8006200:	6023      	str	r3, [r4, #0]
 8006202:	bd38      	pop	{r3, r4, r5, pc}
 8006204:	20001b40 	.word	0x20001b40

08006208 <memcpy>:
 8006208:	440a      	add	r2, r1
 800620a:	4291      	cmp	r1, r2
 800620c:	f100 33ff 	add.w	r3, r0, #4294967295
 8006210:	d100      	bne.n	8006214 <memcpy+0xc>
 8006212:	4770      	bx	lr
 8006214:	b510      	push	{r4, lr}
 8006216:	f811 4b01 	ldrb.w	r4, [r1], #1
 800621a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800621e:	4291      	cmp	r1, r2
 8006220:	d1f9      	bne.n	8006216 <memcpy+0xe>
 8006222:	bd10      	pop	{r4, pc}
 8006224:	0000      	movs	r0, r0
	...

08006228 <nan>:
 8006228:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8006230 <nan+0x8>
 800622c:	4770      	bx	lr
 800622e:	bf00      	nop
 8006230:	00000000 	.word	0x00000000
 8006234:	7ff80000 	.word	0x7ff80000

08006238 <abort>:
 8006238:	b508      	push	{r3, lr}
 800623a:	2006      	movs	r0, #6
 800623c:	f000 fc48 	bl	8006ad0 <raise>
 8006240:	2001      	movs	r0, #1
 8006242:	f7fb fccf 	bl	8001be4 <_exit>

08006246 <_calloc_r>:
 8006246:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006248:	fba1 2402 	umull	r2, r4, r1, r2
 800624c:	b94c      	cbnz	r4, 8006262 <_calloc_r+0x1c>
 800624e:	4611      	mov	r1, r2
 8006250:	9201      	str	r2, [sp, #4]
 8006252:	f7fd ffdb 	bl	800420c <_malloc_r>
 8006256:	9a01      	ldr	r2, [sp, #4]
 8006258:	4605      	mov	r5, r0
 800625a:	b930      	cbnz	r0, 800626a <_calloc_r+0x24>
 800625c:	4628      	mov	r0, r5
 800625e:	b003      	add	sp, #12
 8006260:	bd30      	pop	{r4, r5, pc}
 8006262:	220c      	movs	r2, #12
 8006264:	6002      	str	r2, [r0, #0]
 8006266:	2500      	movs	r5, #0
 8006268:	e7f8      	b.n	800625c <_calloc_r+0x16>
 800626a:	4621      	mov	r1, r4
 800626c:	f7fd f83b 	bl	80032e6 <memset>
 8006270:	e7f4      	b.n	800625c <_calloc_r+0x16>

08006272 <rshift>:
 8006272:	6903      	ldr	r3, [r0, #16]
 8006274:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8006278:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800627c:	ea4f 1261 	mov.w	r2, r1, asr #5
 8006280:	f100 0414 	add.w	r4, r0, #20
 8006284:	dd45      	ble.n	8006312 <rshift+0xa0>
 8006286:	f011 011f 	ands.w	r1, r1, #31
 800628a:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800628e:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8006292:	d10c      	bne.n	80062ae <rshift+0x3c>
 8006294:	f100 0710 	add.w	r7, r0, #16
 8006298:	4629      	mov	r1, r5
 800629a:	42b1      	cmp	r1, r6
 800629c:	d334      	bcc.n	8006308 <rshift+0x96>
 800629e:	1a9b      	subs	r3, r3, r2
 80062a0:	009b      	lsls	r3, r3, #2
 80062a2:	1eea      	subs	r2, r5, #3
 80062a4:	4296      	cmp	r6, r2
 80062a6:	bf38      	it	cc
 80062a8:	2300      	movcc	r3, #0
 80062aa:	4423      	add	r3, r4
 80062ac:	e015      	b.n	80062da <rshift+0x68>
 80062ae:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80062b2:	f1c1 0820 	rsb	r8, r1, #32
 80062b6:	40cf      	lsrs	r7, r1
 80062b8:	f105 0e04 	add.w	lr, r5, #4
 80062bc:	46a1      	mov	r9, r4
 80062be:	4576      	cmp	r6, lr
 80062c0:	46f4      	mov	ip, lr
 80062c2:	d815      	bhi.n	80062f0 <rshift+0x7e>
 80062c4:	1a9a      	subs	r2, r3, r2
 80062c6:	0092      	lsls	r2, r2, #2
 80062c8:	3a04      	subs	r2, #4
 80062ca:	3501      	adds	r5, #1
 80062cc:	42ae      	cmp	r6, r5
 80062ce:	bf38      	it	cc
 80062d0:	2200      	movcc	r2, #0
 80062d2:	18a3      	adds	r3, r4, r2
 80062d4:	50a7      	str	r7, [r4, r2]
 80062d6:	b107      	cbz	r7, 80062da <rshift+0x68>
 80062d8:	3304      	adds	r3, #4
 80062da:	1b1a      	subs	r2, r3, r4
 80062dc:	42a3      	cmp	r3, r4
 80062de:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80062e2:	bf08      	it	eq
 80062e4:	2300      	moveq	r3, #0
 80062e6:	6102      	str	r2, [r0, #16]
 80062e8:	bf08      	it	eq
 80062ea:	6143      	streq	r3, [r0, #20]
 80062ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80062f0:	f8dc c000 	ldr.w	ip, [ip]
 80062f4:	fa0c fc08 	lsl.w	ip, ip, r8
 80062f8:	ea4c 0707 	orr.w	r7, ip, r7
 80062fc:	f849 7b04 	str.w	r7, [r9], #4
 8006300:	f85e 7b04 	ldr.w	r7, [lr], #4
 8006304:	40cf      	lsrs	r7, r1
 8006306:	e7da      	b.n	80062be <rshift+0x4c>
 8006308:	f851 cb04 	ldr.w	ip, [r1], #4
 800630c:	f847 cf04 	str.w	ip, [r7, #4]!
 8006310:	e7c3      	b.n	800629a <rshift+0x28>
 8006312:	4623      	mov	r3, r4
 8006314:	e7e1      	b.n	80062da <rshift+0x68>

08006316 <__hexdig_fun>:
 8006316:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800631a:	2b09      	cmp	r3, #9
 800631c:	d802      	bhi.n	8006324 <__hexdig_fun+0xe>
 800631e:	3820      	subs	r0, #32
 8006320:	b2c0      	uxtb	r0, r0
 8006322:	4770      	bx	lr
 8006324:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8006328:	2b05      	cmp	r3, #5
 800632a:	d801      	bhi.n	8006330 <__hexdig_fun+0x1a>
 800632c:	3847      	subs	r0, #71	; 0x47
 800632e:	e7f7      	b.n	8006320 <__hexdig_fun+0xa>
 8006330:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8006334:	2b05      	cmp	r3, #5
 8006336:	d801      	bhi.n	800633c <__hexdig_fun+0x26>
 8006338:	3827      	subs	r0, #39	; 0x27
 800633a:	e7f1      	b.n	8006320 <__hexdig_fun+0xa>
 800633c:	2000      	movs	r0, #0
 800633e:	4770      	bx	lr

08006340 <__gethex>:
 8006340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006344:	4617      	mov	r7, r2
 8006346:	680a      	ldr	r2, [r1, #0]
 8006348:	b085      	sub	sp, #20
 800634a:	f102 0b02 	add.w	fp, r2, #2
 800634e:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8006352:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8006356:	4681      	mov	r9, r0
 8006358:	468a      	mov	sl, r1
 800635a:	9302      	str	r3, [sp, #8]
 800635c:	32fe      	adds	r2, #254	; 0xfe
 800635e:	eb02 030b 	add.w	r3, r2, fp
 8006362:	46d8      	mov	r8, fp
 8006364:	f81b 0b01 	ldrb.w	r0, [fp], #1
 8006368:	9301      	str	r3, [sp, #4]
 800636a:	2830      	cmp	r0, #48	; 0x30
 800636c:	d0f7      	beq.n	800635e <__gethex+0x1e>
 800636e:	f7ff ffd2 	bl	8006316 <__hexdig_fun>
 8006372:	4604      	mov	r4, r0
 8006374:	2800      	cmp	r0, #0
 8006376:	d138      	bne.n	80063ea <__gethex+0xaa>
 8006378:	49a7      	ldr	r1, [pc, #668]	; (8006618 <__gethex+0x2d8>)
 800637a:	2201      	movs	r2, #1
 800637c:	4640      	mov	r0, r8
 800637e:	f7ff ff21 	bl	80061c4 <strncmp>
 8006382:	4606      	mov	r6, r0
 8006384:	2800      	cmp	r0, #0
 8006386:	d169      	bne.n	800645c <__gethex+0x11c>
 8006388:	f898 0001 	ldrb.w	r0, [r8, #1]
 800638c:	465d      	mov	r5, fp
 800638e:	f7ff ffc2 	bl	8006316 <__hexdig_fun>
 8006392:	2800      	cmp	r0, #0
 8006394:	d064      	beq.n	8006460 <__gethex+0x120>
 8006396:	465a      	mov	r2, fp
 8006398:	7810      	ldrb	r0, [r2, #0]
 800639a:	2830      	cmp	r0, #48	; 0x30
 800639c:	4690      	mov	r8, r2
 800639e:	f102 0201 	add.w	r2, r2, #1
 80063a2:	d0f9      	beq.n	8006398 <__gethex+0x58>
 80063a4:	f7ff ffb7 	bl	8006316 <__hexdig_fun>
 80063a8:	2301      	movs	r3, #1
 80063aa:	fab0 f480 	clz	r4, r0
 80063ae:	0964      	lsrs	r4, r4, #5
 80063b0:	465e      	mov	r6, fp
 80063b2:	9301      	str	r3, [sp, #4]
 80063b4:	4642      	mov	r2, r8
 80063b6:	4615      	mov	r5, r2
 80063b8:	3201      	adds	r2, #1
 80063ba:	7828      	ldrb	r0, [r5, #0]
 80063bc:	f7ff ffab 	bl	8006316 <__hexdig_fun>
 80063c0:	2800      	cmp	r0, #0
 80063c2:	d1f8      	bne.n	80063b6 <__gethex+0x76>
 80063c4:	4994      	ldr	r1, [pc, #592]	; (8006618 <__gethex+0x2d8>)
 80063c6:	2201      	movs	r2, #1
 80063c8:	4628      	mov	r0, r5
 80063ca:	f7ff fefb 	bl	80061c4 <strncmp>
 80063ce:	b978      	cbnz	r0, 80063f0 <__gethex+0xb0>
 80063d0:	b946      	cbnz	r6, 80063e4 <__gethex+0xa4>
 80063d2:	1c6e      	adds	r6, r5, #1
 80063d4:	4632      	mov	r2, r6
 80063d6:	4615      	mov	r5, r2
 80063d8:	3201      	adds	r2, #1
 80063da:	7828      	ldrb	r0, [r5, #0]
 80063dc:	f7ff ff9b 	bl	8006316 <__hexdig_fun>
 80063e0:	2800      	cmp	r0, #0
 80063e2:	d1f8      	bne.n	80063d6 <__gethex+0x96>
 80063e4:	1b73      	subs	r3, r6, r5
 80063e6:	009e      	lsls	r6, r3, #2
 80063e8:	e004      	b.n	80063f4 <__gethex+0xb4>
 80063ea:	2400      	movs	r4, #0
 80063ec:	4626      	mov	r6, r4
 80063ee:	e7e1      	b.n	80063b4 <__gethex+0x74>
 80063f0:	2e00      	cmp	r6, #0
 80063f2:	d1f7      	bne.n	80063e4 <__gethex+0xa4>
 80063f4:	782b      	ldrb	r3, [r5, #0]
 80063f6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80063fa:	2b50      	cmp	r3, #80	; 0x50
 80063fc:	d13d      	bne.n	800647a <__gethex+0x13a>
 80063fe:	786b      	ldrb	r3, [r5, #1]
 8006400:	2b2b      	cmp	r3, #43	; 0x2b
 8006402:	d02f      	beq.n	8006464 <__gethex+0x124>
 8006404:	2b2d      	cmp	r3, #45	; 0x2d
 8006406:	d031      	beq.n	800646c <__gethex+0x12c>
 8006408:	1c69      	adds	r1, r5, #1
 800640a:	f04f 0b00 	mov.w	fp, #0
 800640e:	7808      	ldrb	r0, [r1, #0]
 8006410:	f7ff ff81 	bl	8006316 <__hexdig_fun>
 8006414:	1e42      	subs	r2, r0, #1
 8006416:	b2d2      	uxtb	r2, r2
 8006418:	2a18      	cmp	r2, #24
 800641a:	d82e      	bhi.n	800647a <__gethex+0x13a>
 800641c:	f1a0 0210 	sub.w	r2, r0, #16
 8006420:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8006424:	f7ff ff77 	bl	8006316 <__hexdig_fun>
 8006428:	f100 3cff 	add.w	ip, r0, #4294967295
 800642c:	fa5f fc8c 	uxtb.w	ip, ip
 8006430:	f1bc 0f18 	cmp.w	ip, #24
 8006434:	d91d      	bls.n	8006472 <__gethex+0x132>
 8006436:	f1bb 0f00 	cmp.w	fp, #0
 800643a:	d000      	beq.n	800643e <__gethex+0xfe>
 800643c:	4252      	negs	r2, r2
 800643e:	4416      	add	r6, r2
 8006440:	f8ca 1000 	str.w	r1, [sl]
 8006444:	b1dc      	cbz	r4, 800647e <__gethex+0x13e>
 8006446:	9b01      	ldr	r3, [sp, #4]
 8006448:	2b00      	cmp	r3, #0
 800644a:	bf14      	ite	ne
 800644c:	f04f 0800 	movne.w	r8, #0
 8006450:	f04f 0806 	moveq.w	r8, #6
 8006454:	4640      	mov	r0, r8
 8006456:	b005      	add	sp, #20
 8006458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800645c:	4645      	mov	r5, r8
 800645e:	4626      	mov	r6, r4
 8006460:	2401      	movs	r4, #1
 8006462:	e7c7      	b.n	80063f4 <__gethex+0xb4>
 8006464:	f04f 0b00 	mov.w	fp, #0
 8006468:	1ca9      	adds	r1, r5, #2
 800646a:	e7d0      	b.n	800640e <__gethex+0xce>
 800646c:	f04f 0b01 	mov.w	fp, #1
 8006470:	e7fa      	b.n	8006468 <__gethex+0x128>
 8006472:	230a      	movs	r3, #10
 8006474:	fb03 0002 	mla	r0, r3, r2, r0
 8006478:	e7d0      	b.n	800641c <__gethex+0xdc>
 800647a:	4629      	mov	r1, r5
 800647c:	e7e0      	b.n	8006440 <__gethex+0x100>
 800647e:	eba5 0308 	sub.w	r3, r5, r8
 8006482:	3b01      	subs	r3, #1
 8006484:	4621      	mov	r1, r4
 8006486:	2b07      	cmp	r3, #7
 8006488:	dc0a      	bgt.n	80064a0 <__gethex+0x160>
 800648a:	4648      	mov	r0, r9
 800648c:	f7fd ff4a 	bl	8004324 <_Balloc>
 8006490:	4604      	mov	r4, r0
 8006492:	b940      	cbnz	r0, 80064a6 <__gethex+0x166>
 8006494:	4b61      	ldr	r3, [pc, #388]	; (800661c <__gethex+0x2dc>)
 8006496:	4602      	mov	r2, r0
 8006498:	21e4      	movs	r1, #228	; 0xe4
 800649a:	4861      	ldr	r0, [pc, #388]	; (8006620 <__gethex+0x2e0>)
 800649c:	f7fc ffaa 	bl	80033f4 <__assert_func>
 80064a0:	3101      	adds	r1, #1
 80064a2:	105b      	asrs	r3, r3, #1
 80064a4:	e7ef      	b.n	8006486 <__gethex+0x146>
 80064a6:	f100 0a14 	add.w	sl, r0, #20
 80064aa:	2300      	movs	r3, #0
 80064ac:	495a      	ldr	r1, [pc, #360]	; (8006618 <__gethex+0x2d8>)
 80064ae:	f8cd a004 	str.w	sl, [sp, #4]
 80064b2:	469b      	mov	fp, r3
 80064b4:	45a8      	cmp	r8, r5
 80064b6:	d342      	bcc.n	800653e <__gethex+0x1fe>
 80064b8:	9801      	ldr	r0, [sp, #4]
 80064ba:	f840 bb04 	str.w	fp, [r0], #4
 80064be:	eba0 000a 	sub.w	r0, r0, sl
 80064c2:	1080      	asrs	r0, r0, #2
 80064c4:	6120      	str	r0, [r4, #16]
 80064c6:	ea4f 1840 	mov.w	r8, r0, lsl #5
 80064ca:	4658      	mov	r0, fp
 80064cc:	f7fe f81c 	bl	8004508 <__hi0bits>
 80064d0:	683d      	ldr	r5, [r7, #0]
 80064d2:	eba8 0000 	sub.w	r0, r8, r0
 80064d6:	42a8      	cmp	r0, r5
 80064d8:	dd59      	ble.n	800658e <__gethex+0x24e>
 80064da:	eba0 0805 	sub.w	r8, r0, r5
 80064de:	4641      	mov	r1, r8
 80064e0:	4620      	mov	r0, r4
 80064e2:	f7fe fbab 	bl	8004c3c <__any_on>
 80064e6:	4683      	mov	fp, r0
 80064e8:	b1b8      	cbz	r0, 800651a <__gethex+0x1da>
 80064ea:	f108 33ff 	add.w	r3, r8, #4294967295
 80064ee:	1159      	asrs	r1, r3, #5
 80064f0:	f003 021f 	and.w	r2, r3, #31
 80064f4:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80064f8:	f04f 0b01 	mov.w	fp, #1
 80064fc:	fa0b f202 	lsl.w	r2, fp, r2
 8006500:	420a      	tst	r2, r1
 8006502:	d00a      	beq.n	800651a <__gethex+0x1da>
 8006504:	455b      	cmp	r3, fp
 8006506:	dd06      	ble.n	8006516 <__gethex+0x1d6>
 8006508:	f1a8 0102 	sub.w	r1, r8, #2
 800650c:	4620      	mov	r0, r4
 800650e:	f7fe fb95 	bl	8004c3c <__any_on>
 8006512:	2800      	cmp	r0, #0
 8006514:	d138      	bne.n	8006588 <__gethex+0x248>
 8006516:	f04f 0b02 	mov.w	fp, #2
 800651a:	4641      	mov	r1, r8
 800651c:	4620      	mov	r0, r4
 800651e:	f7ff fea8 	bl	8006272 <rshift>
 8006522:	4446      	add	r6, r8
 8006524:	68bb      	ldr	r3, [r7, #8]
 8006526:	42b3      	cmp	r3, r6
 8006528:	da41      	bge.n	80065ae <__gethex+0x26e>
 800652a:	4621      	mov	r1, r4
 800652c:	4648      	mov	r0, r9
 800652e:	f7fd ff39 	bl	80043a4 <_Bfree>
 8006532:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006534:	2300      	movs	r3, #0
 8006536:	6013      	str	r3, [r2, #0]
 8006538:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 800653c:	e78a      	b.n	8006454 <__gethex+0x114>
 800653e:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 8006542:	2a2e      	cmp	r2, #46	; 0x2e
 8006544:	d014      	beq.n	8006570 <__gethex+0x230>
 8006546:	2b20      	cmp	r3, #32
 8006548:	d106      	bne.n	8006558 <__gethex+0x218>
 800654a:	9b01      	ldr	r3, [sp, #4]
 800654c:	f843 bb04 	str.w	fp, [r3], #4
 8006550:	f04f 0b00 	mov.w	fp, #0
 8006554:	9301      	str	r3, [sp, #4]
 8006556:	465b      	mov	r3, fp
 8006558:	7828      	ldrb	r0, [r5, #0]
 800655a:	9303      	str	r3, [sp, #12]
 800655c:	f7ff fedb 	bl	8006316 <__hexdig_fun>
 8006560:	9b03      	ldr	r3, [sp, #12]
 8006562:	f000 000f 	and.w	r0, r0, #15
 8006566:	4098      	lsls	r0, r3
 8006568:	ea4b 0b00 	orr.w	fp, fp, r0
 800656c:	3304      	adds	r3, #4
 800656e:	e7a1      	b.n	80064b4 <__gethex+0x174>
 8006570:	45a8      	cmp	r8, r5
 8006572:	d8e8      	bhi.n	8006546 <__gethex+0x206>
 8006574:	2201      	movs	r2, #1
 8006576:	4628      	mov	r0, r5
 8006578:	9303      	str	r3, [sp, #12]
 800657a:	f7ff fe23 	bl	80061c4 <strncmp>
 800657e:	4926      	ldr	r1, [pc, #152]	; (8006618 <__gethex+0x2d8>)
 8006580:	9b03      	ldr	r3, [sp, #12]
 8006582:	2800      	cmp	r0, #0
 8006584:	d1df      	bne.n	8006546 <__gethex+0x206>
 8006586:	e795      	b.n	80064b4 <__gethex+0x174>
 8006588:	f04f 0b03 	mov.w	fp, #3
 800658c:	e7c5      	b.n	800651a <__gethex+0x1da>
 800658e:	da0b      	bge.n	80065a8 <__gethex+0x268>
 8006590:	eba5 0800 	sub.w	r8, r5, r0
 8006594:	4621      	mov	r1, r4
 8006596:	4642      	mov	r2, r8
 8006598:	4648      	mov	r0, r9
 800659a:	f7fe f91d 	bl	80047d8 <__lshift>
 800659e:	eba6 0608 	sub.w	r6, r6, r8
 80065a2:	4604      	mov	r4, r0
 80065a4:	f100 0a14 	add.w	sl, r0, #20
 80065a8:	f04f 0b00 	mov.w	fp, #0
 80065ac:	e7ba      	b.n	8006524 <__gethex+0x1e4>
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	42b3      	cmp	r3, r6
 80065b2:	dd73      	ble.n	800669c <__gethex+0x35c>
 80065b4:	1b9e      	subs	r6, r3, r6
 80065b6:	42b5      	cmp	r5, r6
 80065b8:	dc34      	bgt.n	8006624 <__gethex+0x2e4>
 80065ba:	68fb      	ldr	r3, [r7, #12]
 80065bc:	2b02      	cmp	r3, #2
 80065be:	d023      	beq.n	8006608 <__gethex+0x2c8>
 80065c0:	2b03      	cmp	r3, #3
 80065c2:	d025      	beq.n	8006610 <__gethex+0x2d0>
 80065c4:	2b01      	cmp	r3, #1
 80065c6:	d115      	bne.n	80065f4 <__gethex+0x2b4>
 80065c8:	42b5      	cmp	r5, r6
 80065ca:	d113      	bne.n	80065f4 <__gethex+0x2b4>
 80065cc:	2d01      	cmp	r5, #1
 80065ce:	d10b      	bne.n	80065e8 <__gethex+0x2a8>
 80065d0:	9a02      	ldr	r2, [sp, #8]
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	6013      	str	r3, [r2, #0]
 80065d6:	2301      	movs	r3, #1
 80065d8:	6123      	str	r3, [r4, #16]
 80065da:	f8ca 3000 	str.w	r3, [sl]
 80065de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80065e0:	f04f 0862 	mov.w	r8, #98	; 0x62
 80065e4:	601c      	str	r4, [r3, #0]
 80065e6:	e735      	b.n	8006454 <__gethex+0x114>
 80065e8:	1e69      	subs	r1, r5, #1
 80065ea:	4620      	mov	r0, r4
 80065ec:	f7fe fb26 	bl	8004c3c <__any_on>
 80065f0:	2800      	cmp	r0, #0
 80065f2:	d1ed      	bne.n	80065d0 <__gethex+0x290>
 80065f4:	4621      	mov	r1, r4
 80065f6:	4648      	mov	r0, r9
 80065f8:	f7fd fed4 	bl	80043a4 <_Bfree>
 80065fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80065fe:	2300      	movs	r3, #0
 8006600:	6013      	str	r3, [r2, #0]
 8006602:	f04f 0850 	mov.w	r8, #80	; 0x50
 8006606:	e725      	b.n	8006454 <__gethex+0x114>
 8006608:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800660a:	2b00      	cmp	r3, #0
 800660c:	d1f2      	bne.n	80065f4 <__gethex+0x2b4>
 800660e:	e7df      	b.n	80065d0 <__gethex+0x290>
 8006610:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006612:	2b00      	cmp	r3, #0
 8006614:	d1dc      	bne.n	80065d0 <__gethex+0x290>
 8006616:	e7ed      	b.n	80065f4 <__gethex+0x2b4>
 8006618:	08006fdc 	.word	0x08006fdc
 800661c:	08006e71 	.word	0x08006e71
 8006620:	0800714a 	.word	0x0800714a
 8006624:	f106 38ff 	add.w	r8, r6, #4294967295
 8006628:	f1bb 0f00 	cmp.w	fp, #0
 800662c:	d133      	bne.n	8006696 <__gethex+0x356>
 800662e:	f1b8 0f00 	cmp.w	r8, #0
 8006632:	d004      	beq.n	800663e <__gethex+0x2fe>
 8006634:	4641      	mov	r1, r8
 8006636:	4620      	mov	r0, r4
 8006638:	f7fe fb00 	bl	8004c3c <__any_on>
 800663c:	4683      	mov	fp, r0
 800663e:	ea4f 1268 	mov.w	r2, r8, asr #5
 8006642:	2301      	movs	r3, #1
 8006644:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8006648:	f008 081f 	and.w	r8, r8, #31
 800664c:	fa03 f308 	lsl.w	r3, r3, r8
 8006650:	4213      	tst	r3, r2
 8006652:	4631      	mov	r1, r6
 8006654:	4620      	mov	r0, r4
 8006656:	bf18      	it	ne
 8006658:	f04b 0b02 	orrne.w	fp, fp, #2
 800665c:	1bad      	subs	r5, r5, r6
 800665e:	f7ff fe08 	bl	8006272 <rshift>
 8006662:	687e      	ldr	r6, [r7, #4]
 8006664:	f04f 0802 	mov.w	r8, #2
 8006668:	f1bb 0f00 	cmp.w	fp, #0
 800666c:	d04a      	beq.n	8006704 <__gethex+0x3c4>
 800666e:	68fb      	ldr	r3, [r7, #12]
 8006670:	2b02      	cmp	r3, #2
 8006672:	d016      	beq.n	80066a2 <__gethex+0x362>
 8006674:	2b03      	cmp	r3, #3
 8006676:	d018      	beq.n	80066aa <__gethex+0x36a>
 8006678:	2b01      	cmp	r3, #1
 800667a:	d109      	bne.n	8006690 <__gethex+0x350>
 800667c:	f01b 0f02 	tst.w	fp, #2
 8006680:	d006      	beq.n	8006690 <__gethex+0x350>
 8006682:	f8da 3000 	ldr.w	r3, [sl]
 8006686:	ea4b 0b03 	orr.w	fp, fp, r3
 800668a:	f01b 0f01 	tst.w	fp, #1
 800668e:	d10f      	bne.n	80066b0 <__gethex+0x370>
 8006690:	f048 0810 	orr.w	r8, r8, #16
 8006694:	e036      	b.n	8006704 <__gethex+0x3c4>
 8006696:	f04f 0b01 	mov.w	fp, #1
 800669a:	e7d0      	b.n	800663e <__gethex+0x2fe>
 800669c:	f04f 0801 	mov.w	r8, #1
 80066a0:	e7e2      	b.n	8006668 <__gethex+0x328>
 80066a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80066a4:	f1c3 0301 	rsb	r3, r3, #1
 80066a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80066aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80066ac:	2b00      	cmp	r3, #0
 80066ae:	d0ef      	beq.n	8006690 <__gethex+0x350>
 80066b0:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80066b4:	f104 0214 	add.w	r2, r4, #20
 80066b8:	ea4f 038b 	mov.w	r3, fp, lsl #2
 80066bc:	9301      	str	r3, [sp, #4]
 80066be:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 80066c2:	2300      	movs	r3, #0
 80066c4:	4694      	mov	ip, r2
 80066c6:	f852 1b04 	ldr.w	r1, [r2], #4
 80066ca:	f1b1 3fff 	cmp.w	r1, #4294967295
 80066ce:	d01e      	beq.n	800670e <__gethex+0x3ce>
 80066d0:	3101      	adds	r1, #1
 80066d2:	f8cc 1000 	str.w	r1, [ip]
 80066d6:	f1b8 0f02 	cmp.w	r8, #2
 80066da:	f104 0214 	add.w	r2, r4, #20
 80066de:	d13d      	bne.n	800675c <__gethex+0x41c>
 80066e0:	683b      	ldr	r3, [r7, #0]
 80066e2:	3b01      	subs	r3, #1
 80066e4:	42ab      	cmp	r3, r5
 80066e6:	d10b      	bne.n	8006700 <__gethex+0x3c0>
 80066e8:	1169      	asrs	r1, r5, #5
 80066ea:	2301      	movs	r3, #1
 80066ec:	f005 051f 	and.w	r5, r5, #31
 80066f0:	fa03 f505 	lsl.w	r5, r3, r5
 80066f4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80066f8:	421d      	tst	r5, r3
 80066fa:	bf18      	it	ne
 80066fc:	f04f 0801 	movne.w	r8, #1
 8006700:	f048 0820 	orr.w	r8, r8, #32
 8006704:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006706:	601c      	str	r4, [r3, #0]
 8006708:	9b02      	ldr	r3, [sp, #8]
 800670a:	601e      	str	r6, [r3, #0]
 800670c:	e6a2      	b.n	8006454 <__gethex+0x114>
 800670e:	4290      	cmp	r0, r2
 8006710:	f842 3c04 	str.w	r3, [r2, #-4]
 8006714:	d8d6      	bhi.n	80066c4 <__gethex+0x384>
 8006716:	68a2      	ldr	r2, [r4, #8]
 8006718:	4593      	cmp	fp, r2
 800671a:	db17      	blt.n	800674c <__gethex+0x40c>
 800671c:	6861      	ldr	r1, [r4, #4]
 800671e:	4648      	mov	r0, r9
 8006720:	3101      	adds	r1, #1
 8006722:	f7fd fdff 	bl	8004324 <_Balloc>
 8006726:	4682      	mov	sl, r0
 8006728:	b918      	cbnz	r0, 8006732 <__gethex+0x3f2>
 800672a:	4b1b      	ldr	r3, [pc, #108]	; (8006798 <__gethex+0x458>)
 800672c:	4602      	mov	r2, r0
 800672e:	2184      	movs	r1, #132	; 0x84
 8006730:	e6b3      	b.n	800649a <__gethex+0x15a>
 8006732:	6922      	ldr	r2, [r4, #16]
 8006734:	3202      	adds	r2, #2
 8006736:	f104 010c 	add.w	r1, r4, #12
 800673a:	0092      	lsls	r2, r2, #2
 800673c:	300c      	adds	r0, #12
 800673e:	f7ff fd63 	bl	8006208 <memcpy>
 8006742:	4621      	mov	r1, r4
 8006744:	4648      	mov	r0, r9
 8006746:	f7fd fe2d 	bl	80043a4 <_Bfree>
 800674a:	4654      	mov	r4, sl
 800674c:	6922      	ldr	r2, [r4, #16]
 800674e:	1c51      	adds	r1, r2, #1
 8006750:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8006754:	6121      	str	r1, [r4, #16]
 8006756:	2101      	movs	r1, #1
 8006758:	6151      	str	r1, [r2, #20]
 800675a:	e7bc      	b.n	80066d6 <__gethex+0x396>
 800675c:	6921      	ldr	r1, [r4, #16]
 800675e:	4559      	cmp	r1, fp
 8006760:	dd0b      	ble.n	800677a <__gethex+0x43a>
 8006762:	2101      	movs	r1, #1
 8006764:	4620      	mov	r0, r4
 8006766:	f7ff fd84 	bl	8006272 <rshift>
 800676a:	68bb      	ldr	r3, [r7, #8]
 800676c:	3601      	adds	r6, #1
 800676e:	42b3      	cmp	r3, r6
 8006770:	f6ff aedb 	blt.w	800652a <__gethex+0x1ea>
 8006774:	f04f 0801 	mov.w	r8, #1
 8006778:	e7c2      	b.n	8006700 <__gethex+0x3c0>
 800677a:	f015 051f 	ands.w	r5, r5, #31
 800677e:	d0f9      	beq.n	8006774 <__gethex+0x434>
 8006780:	9b01      	ldr	r3, [sp, #4]
 8006782:	441a      	add	r2, r3
 8006784:	f1c5 0520 	rsb	r5, r5, #32
 8006788:	f852 0c04 	ldr.w	r0, [r2, #-4]
 800678c:	f7fd febc 	bl	8004508 <__hi0bits>
 8006790:	42a8      	cmp	r0, r5
 8006792:	dbe6      	blt.n	8006762 <__gethex+0x422>
 8006794:	e7ee      	b.n	8006774 <__gethex+0x434>
 8006796:	bf00      	nop
 8006798:	08006e71 	.word	0x08006e71

0800679c <L_shift>:
 800679c:	f1c2 0208 	rsb	r2, r2, #8
 80067a0:	0092      	lsls	r2, r2, #2
 80067a2:	b570      	push	{r4, r5, r6, lr}
 80067a4:	f1c2 0620 	rsb	r6, r2, #32
 80067a8:	6843      	ldr	r3, [r0, #4]
 80067aa:	6804      	ldr	r4, [r0, #0]
 80067ac:	fa03 f506 	lsl.w	r5, r3, r6
 80067b0:	432c      	orrs	r4, r5
 80067b2:	40d3      	lsrs	r3, r2
 80067b4:	6004      	str	r4, [r0, #0]
 80067b6:	f840 3f04 	str.w	r3, [r0, #4]!
 80067ba:	4288      	cmp	r0, r1
 80067bc:	d3f4      	bcc.n	80067a8 <L_shift+0xc>
 80067be:	bd70      	pop	{r4, r5, r6, pc}

080067c0 <__match>:
 80067c0:	b530      	push	{r4, r5, lr}
 80067c2:	6803      	ldr	r3, [r0, #0]
 80067c4:	3301      	adds	r3, #1
 80067c6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80067ca:	b914      	cbnz	r4, 80067d2 <__match+0x12>
 80067cc:	6003      	str	r3, [r0, #0]
 80067ce:	2001      	movs	r0, #1
 80067d0:	bd30      	pop	{r4, r5, pc}
 80067d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80067d6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80067da:	2d19      	cmp	r5, #25
 80067dc:	bf98      	it	ls
 80067de:	3220      	addls	r2, #32
 80067e0:	42a2      	cmp	r2, r4
 80067e2:	d0f0      	beq.n	80067c6 <__match+0x6>
 80067e4:	2000      	movs	r0, #0
 80067e6:	e7f3      	b.n	80067d0 <__match+0x10>

080067e8 <__hexnan>:
 80067e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067ec:	680b      	ldr	r3, [r1, #0]
 80067ee:	6801      	ldr	r1, [r0, #0]
 80067f0:	115e      	asrs	r6, r3, #5
 80067f2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80067f6:	f013 031f 	ands.w	r3, r3, #31
 80067fa:	b087      	sub	sp, #28
 80067fc:	bf18      	it	ne
 80067fe:	3604      	addne	r6, #4
 8006800:	2500      	movs	r5, #0
 8006802:	1f37      	subs	r7, r6, #4
 8006804:	4682      	mov	sl, r0
 8006806:	4690      	mov	r8, r2
 8006808:	9301      	str	r3, [sp, #4]
 800680a:	f846 5c04 	str.w	r5, [r6, #-4]
 800680e:	46b9      	mov	r9, r7
 8006810:	463c      	mov	r4, r7
 8006812:	9502      	str	r5, [sp, #8]
 8006814:	46ab      	mov	fp, r5
 8006816:	784a      	ldrb	r2, [r1, #1]
 8006818:	1c4b      	adds	r3, r1, #1
 800681a:	9303      	str	r3, [sp, #12]
 800681c:	b342      	cbz	r2, 8006870 <__hexnan+0x88>
 800681e:	4610      	mov	r0, r2
 8006820:	9105      	str	r1, [sp, #20]
 8006822:	9204      	str	r2, [sp, #16]
 8006824:	f7ff fd77 	bl	8006316 <__hexdig_fun>
 8006828:	2800      	cmp	r0, #0
 800682a:	d14f      	bne.n	80068cc <__hexnan+0xe4>
 800682c:	9a04      	ldr	r2, [sp, #16]
 800682e:	9905      	ldr	r1, [sp, #20]
 8006830:	2a20      	cmp	r2, #32
 8006832:	d818      	bhi.n	8006866 <__hexnan+0x7e>
 8006834:	9b02      	ldr	r3, [sp, #8]
 8006836:	459b      	cmp	fp, r3
 8006838:	dd13      	ble.n	8006862 <__hexnan+0x7a>
 800683a:	454c      	cmp	r4, r9
 800683c:	d206      	bcs.n	800684c <__hexnan+0x64>
 800683e:	2d07      	cmp	r5, #7
 8006840:	dc04      	bgt.n	800684c <__hexnan+0x64>
 8006842:	462a      	mov	r2, r5
 8006844:	4649      	mov	r1, r9
 8006846:	4620      	mov	r0, r4
 8006848:	f7ff ffa8 	bl	800679c <L_shift>
 800684c:	4544      	cmp	r4, r8
 800684e:	d950      	bls.n	80068f2 <__hexnan+0x10a>
 8006850:	2300      	movs	r3, #0
 8006852:	f1a4 0904 	sub.w	r9, r4, #4
 8006856:	f844 3c04 	str.w	r3, [r4, #-4]
 800685a:	f8cd b008 	str.w	fp, [sp, #8]
 800685e:	464c      	mov	r4, r9
 8006860:	461d      	mov	r5, r3
 8006862:	9903      	ldr	r1, [sp, #12]
 8006864:	e7d7      	b.n	8006816 <__hexnan+0x2e>
 8006866:	2a29      	cmp	r2, #41	; 0x29
 8006868:	d155      	bne.n	8006916 <__hexnan+0x12e>
 800686a:	3102      	adds	r1, #2
 800686c:	f8ca 1000 	str.w	r1, [sl]
 8006870:	f1bb 0f00 	cmp.w	fp, #0
 8006874:	d04f      	beq.n	8006916 <__hexnan+0x12e>
 8006876:	454c      	cmp	r4, r9
 8006878:	d206      	bcs.n	8006888 <__hexnan+0xa0>
 800687a:	2d07      	cmp	r5, #7
 800687c:	dc04      	bgt.n	8006888 <__hexnan+0xa0>
 800687e:	462a      	mov	r2, r5
 8006880:	4649      	mov	r1, r9
 8006882:	4620      	mov	r0, r4
 8006884:	f7ff ff8a 	bl	800679c <L_shift>
 8006888:	4544      	cmp	r4, r8
 800688a:	d934      	bls.n	80068f6 <__hexnan+0x10e>
 800688c:	f1a8 0204 	sub.w	r2, r8, #4
 8006890:	4623      	mov	r3, r4
 8006892:	f853 1b04 	ldr.w	r1, [r3], #4
 8006896:	f842 1f04 	str.w	r1, [r2, #4]!
 800689a:	429f      	cmp	r7, r3
 800689c:	d2f9      	bcs.n	8006892 <__hexnan+0xaa>
 800689e:	1b3b      	subs	r3, r7, r4
 80068a0:	f023 0303 	bic.w	r3, r3, #3
 80068a4:	3304      	adds	r3, #4
 80068a6:	3e03      	subs	r6, #3
 80068a8:	3401      	adds	r4, #1
 80068aa:	42a6      	cmp	r6, r4
 80068ac:	bf38      	it	cc
 80068ae:	2304      	movcc	r3, #4
 80068b0:	4443      	add	r3, r8
 80068b2:	2200      	movs	r2, #0
 80068b4:	f843 2b04 	str.w	r2, [r3], #4
 80068b8:	429f      	cmp	r7, r3
 80068ba:	d2fb      	bcs.n	80068b4 <__hexnan+0xcc>
 80068bc:	683b      	ldr	r3, [r7, #0]
 80068be:	b91b      	cbnz	r3, 80068c8 <__hexnan+0xe0>
 80068c0:	4547      	cmp	r7, r8
 80068c2:	d126      	bne.n	8006912 <__hexnan+0x12a>
 80068c4:	2301      	movs	r3, #1
 80068c6:	603b      	str	r3, [r7, #0]
 80068c8:	2005      	movs	r0, #5
 80068ca:	e025      	b.n	8006918 <__hexnan+0x130>
 80068cc:	3501      	adds	r5, #1
 80068ce:	2d08      	cmp	r5, #8
 80068d0:	f10b 0b01 	add.w	fp, fp, #1
 80068d4:	dd06      	ble.n	80068e4 <__hexnan+0xfc>
 80068d6:	4544      	cmp	r4, r8
 80068d8:	d9c3      	bls.n	8006862 <__hexnan+0x7a>
 80068da:	2300      	movs	r3, #0
 80068dc:	f844 3c04 	str.w	r3, [r4, #-4]
 80068e0:	2501      	movs	r5, #1
 80068e2:	3c04      	subs	r4, #4
 80068e4:	6822      	ldr	r2, [r4, #0]
 80068e6:	f000 000f 	and.w	r0, r0, #15
 80068ea:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80068ee:	6020      	str	r0, [r4, #0]
 80068f0:	e7b7      	b.n	8006862 <__hexnan+0x7a>
 80068f2:	2508      	movs	r5, #8
 80068f4:	e7b5      	b.n	8006862 <__hexnan+0x7a>
 80068f6:	9b01      	ldr	r3, [sp, #4]
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	d0df      	beq.n	80068bc <__hexnan+0xd4>
 80068fc:	f1c3 0320 	rsb	r3, r3, #32
 8006900:	f04f 32ff 	mov.w	r2, #4294967295
 8006904:	40da      	lsrs	r2, r3
 8006906:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800690a:	4013      	ands	r3, r2
 800690c:	f846 3c04 	str.w	r3, [r6, #-4]
 8006910:	e7d4      	b.n	80068bc <__hexnan+0xd4>
 8006912:	3f04      	subs	r7, #4
 8006914:	e7d2      	b.n	80068bc <__hexnan+0xd4>
 8006916:	2004      	movs	r0, #4
 8006918:	b007      	add	sp, #28
 800691a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800691e <__ascii_mbtowc>:
 800691e:	b082      	sub	sp, #8
 8006920:	b901      	cbnz	r1, 8006924 <__ascii_mbtowc+0x6>
 8006922:	a901      	add	r1, sp, #4
 8006924:	b142      	cbz	r2, 8006938 <__ascii_mbtowc+0x1a>
 8006926:	b14b      	cbz	r3, 800693c <__ascii_mbtowc+0x1e>
 8006928:	7813      	ldrb	r3, [r2, #0]
 800692a:	600b      	str	r3, [r1, #0]
 800692c:	7812      	ldrb	r2, [r2, #0]
 800692e:	1e10      	subs	r0, r2, #0
 8006930:	bf18      	it	ne
 8006932:	2001      	movne	r0, #1
 8006934:	b002      	add	sp, #8
 8006936:	4770      	bx	lr
 8006938:	4610      	mov	r0, r2
 800693a:	e7fb      	b.n	8006934 <__ascii_mbtowc+0x16>
 800693c:	f06f 0001 	mvn.w	r0, #1
 8006940:	e7f8      	b.n	8006934 <__ascii_mbtowc+0x16>

08006942 <_realloc_r>:
 8006942:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006946:	4680      	mov	r8, r0
 8006948:	4614      	mov	r4, r2
 800694a:	460e      	mov	r6, r1
 800694c:	b921      	cbnz	r1, 8006958 <_realloc_r+0x16>
 800694e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006952:	4611      	mov	r1, r2
 8006954:	f7fd bc5a 	b.w	800420c <_malloc_r>
 8006958:	b92a      	cbnz	r2, 8006966 <_realloc_r+0x24>
 800695a:	f7fd fbe3 	bl	8004124 <_free_r>
 800695e:	4625      	mov	r5, r4
 8006960:	4628      	mov	r0, r5
 8006962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006966:	f000 f8f1 	bl	8006b4c <_malloc_usable_size_r>
 800696a:	4284      	cmp	r4, r0
 800696c:	4607      	mov	r7, r0
 800696e:	d802      	bhi.n	8006976 <_realloc_r+0x34>
 8006970:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8006974:	d812      	bhi.n	800699c <_realloc_r+0x5a>
 8006976:	4621      	mov	r1, r4
 8006978:	4640      	mov	r0, r8
 800697a:	f7fd fc47 	bl	800420c <_malloc_r>
 800697e:	4605      	mov	r5, r0
 8006980:	2800      	cmp	r0, #0
 8006982:	d0ed      	beq.n	8006960 <_realloc_r+0x1e>
 8006984:	42bc      	cmp	r4, r7
 8006986:	4622      	mov	r2, r4
 8006988:	4631      	mov	r1, r6
 800698a:	bf28      	it	cs
 800698c:	463a      	movcs	r2, r7
 800698e:	f7ff fc3b 	bl	8006208 <memcpy>
 8006992:	4631      	mov	r1, r6
 8006994:	4640      	mov	r0, r8
 8006996:	f7fd fbc5 	bl	8004124 <_free_r>
 800699a:	e7e1      	b.n	8006960 <_realloc_r+0x1e>
 800699c:	4635      	mov	r5, r6
 800699e:	e7df      	b.n	8006960 <_realloc_r+0x1e>

080069a0 <__ascii_wctomb>:
 80069a0:	b149      	cbz	r1, 80069b6 <__ascii_wctomb+0x16>
 80069a2:	2aff      	cmp	r2, #255	; 0xff
 80069a4:	bf85      	ittet	hi
 80069a6:	238a      	movhi	r3, #138	; 0x8a
 80069a8:	6003      	strhi	r3, [r0, #0]
 80069aa:	700a      	strbls	r2, [r1, #0]
 80069ac:	f04f 30ff 	movhi.w	r0, #4294967295
 80069b0:	bf98      	it	ls
 80069b2:	2001      	movls	r0, #1
 80069b4:	4770      	bx	lr
 80069b6:	4608      	mov	r0, r1
 80069b8:	4770      	bx	lr

080069ba <__swhatbuf_r>:
 80069ba:	b570      	push	{r4, r5, r6, lr}
 80069bc:	460c      	mov	r4, r1
 80069be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069c2:	2900      	cmp	r1, #0
 80069c4:	b096      	sub	sp, #88	; 0x58
 80069c6:	4615      	mov	r5, r2
 80069c8:	461e      	mov	r6, r3
 80069ca:	da0d      	bge.n	80069e8 <__swhatbuf_r+0x2e>
 80069cc:	89a3      	ldrh	r3, [r4, #12]
 80069ce:	f013 0f80 	tst.w	r3, #128	; 0x80
 80069d2:	f04f 0100 	mov.w	r1, #0
 80069d6:	bf0c      	ite	eq
 80069d8:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80069dc:	2340      	movne	r3, #64	; 0x40
 80069de:	2000      	movs	r0, #0
 80069e0:	6031      	str	r1, [r6, #0]
 80069e2:	602b      	str	r3, [r5, #0]
 80069e4:	b016      	add	sp, #88	; 0x58
 80069e6:	bd70      	pop	{r4, r5, r6, pc}
 80069e8:	466a      	mov	r2, sp
 80069ea:	f000 f879 	bl	8006ae0 <_fstat_r>
 80069ee:	2800      	cmp	r0, #0
 80069f0:	dbec      	blt.n	80069cc <__swhatbuf_r+0x12>
 80069f2:	9901      	ldr	r1, [sp, #4]
 80069f4:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80069f8:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80069fc:	4259      	negs	r1, r3
 80069fe:	4159      	adcs	r1, r3
 8006a00:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006a04:	e7eb      	b.n	80069de <__swhatbuf_r+0x24>

08006a06 <__smakebuf_r>:
 8006a06:	898b      	ldrh	r3, [r1, #12]
 8006a08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a0a:	079d      	lsls	r5, r3, #30
 8006a0c:	4606      	mov	r6, r0
 8006a0e:	460c      	mov	r4, r1
 8006a10:	d507      	bpl.n	8006a22 <__smakebuf_r+0x1c>
 8006a12:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006a16:	6023      	str	r3, [r4, #0]
 8006a18:	6123      	str	r3, [r4, #16]
 8006a1a:	2301      	movs	r3, #1
 8006a1c:	6163      	str	r3, [r4, #20]
 8006a1e:	b002      	add	sp, #8
 8006a20:	bd70      	pop	{r4, r5, r6, pc}
 8006a22:	ab01      	add	r3, sp, #4
 8006a24:	466a      	mov	r2, sp
 8006a26:	f7ff ffc8 	bl	80069ba <__swhatbuf_r>
 8006a2a:	9900      	ldr	r1, [sp, #0]
 8006a2c:	4605      	mov	r5, r0
 8006a2e:	4630      	mov	r0, r6
 8006a30:	f7fd fbec 	bl	800420c <_malloc_r>
 8006a34:	b948      	cbnz	r0, 8006a4a <__smakebuf_r+0x44>
 8006a36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a3a:	059a      	lsls	r2, r3, #22
 8006a3c:	d4ef      	bmi.n	8006a1e <__smakebuf_r+0x18>
 8006a3e:	f023 0303 	bic.w	r3, r3, #3
 8006a42:	f043 0302 	orr.w	r3, r3, #2
 8006a46:	81a3      	strh	r3, [r4, #12]
 8006a48:	e7e3      	b.n	8006a12 <__smakebuf_r+0xc>
 8006a4a:	89a3      	ldrh	r3, [r4, #12]
 8006a4c:	6020      	str	r0, [r4, #0]
 8006a4e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006a52:	81a3      	strh	r3, [r4, #12]
 8006a54:	9b00      	ldr	r3, [sp, #0]
 8006a56:	6163      	str	r3, [r4, #20]
 8006a58:	9b01      	ldr	r3, [sp, #4]
 8006a5a:	6120      	str	r0, [r4, #16]
 8006a5c:	b15b      	cbz	r3, 8006a76 <__smakebuf_r+0x70>
 8006a5e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006a62:	4630      	mov	r0, r6
 8006a64:	f000 f84e 	bl	8006b04 <_isatty_r>
 8006a68:	b128      	cbz	r0, 8006a76 <__smakebuf_r+0x70>
 8006a6a:	89a3      	ldrh	r3, [r4, #12]
 8006a6c:	f023 0303 	bic.w	r3, r3, #3
 8006a70:	f043 0301 	orr.w	r3, r3, #1
 8006a74:	81a3      	strh	r3, [r4, #12]
 8006a76:	89a3      	ldrh	r3, [r4, #12]
 8006a78:	431d      	orrs	r5, r3
 8006a7a:	81a5      	strh	r5, [r4, #12]
 8006a7c:	e7cf      	b.n	8006a1e <__smakebuf_r+0x18>

08006a7e <_raise_r>:
 8006a7e:	291f      	cmp	r1, #31
 8006a80:	b538      	push	{r3, r4, r5, lr}
 8006a82:	4604      	mov	r4, r0
 8006a84:	460d      	mov	r5, r1
 8006a86:	d904      	bls.n	8006a92 <_raise_r+0x14>
 8006a88:	2316      	movs	r3, #22
 8006a8a:	6003      	str	r3, [r0, #0]
 8006a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8006a90:	bd38      	pop	{r3, r4, r5, pc}
 8006a92:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006a94:	b112      	cbz	r2, 8006a9c <_raise_r+0x1e>
 8006a96:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006a9a:	b94b      	cbnz	r3, 8006ab0 <_raise_r+0x32>
 8006a9c:	4620      	mov	r0, r4
 8006a9e:	f000 f853 	bl	8006b48 <_getpid_r>
 8006aa2:	462a      	mov	r2, r5
 8006aa4:	4601      	mov	r1, r0
 8006aa6:	4620      	mov	r0, r4
 8006aa8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006aac:	f000 b83a 	b.w	8006b24 <_kill_r>
 8006ab0:	2b01      	cmp	r3, #1
 8006ab2:	d00a      	beq.n	8006aca <_raise_r+0x4c>
 8006ab4:	1c59      	adds	r1, r3, #1
 8006ab6:	d103      	bne.n	8006ac0 <_raise_r+0x42>
 8006ab8:	2316      	movs	r3, #22
 8006aba:	6003      	str	r3, [r0, #0]
 8006abc:	2001      	movs	r0, #1
 8006abe:	e7e7      	b.n	8006a90 <_raise_r+0x12>
 8006ac0:	2400      	movs	r4, #0
 8006ac2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006ac6:	4628      	mov	r0, r5
 8006ac8:	4798      	blx	r3
 8006aca:	2000      	movs	r0, #0
 8006acc:	e7e0      	b.n	8006a90 <_raise_r+0x12>
	...

08006ad0 <raise>:
 8006ad0:	4b02      	ldr	r3, [pc, #8]	; (8006adc <raise+0xc>)
 8006ad2:	4601      	mov	r1, r0
 8006ad4:	6818      	ldr	r0, [r3, #0]
 8006ad6:	f7ff bfd2 	b.w	8006a7e <_raise_r>
 8006ada:	bf00      	nop
 8006adc:	20000084 	.word	0x20000084

08006ae0 <_fstat_r>:
 8006ae0:	b538      	push	{r3, r4, r5, lr}
 8006ae2:	4d07      	ldr	r5, [pc, #28]	; (8006b00 <_fstat_r+0x20>)
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	4604      	mov	r4, r0
 8006ae8:	4608      	mov	r0, r1
 8006aea:	4611      	mov	r1, r2
 8006aec:	602b      	str	r3, [r5, #0]
 8006aee:	f7fb f8c8 	bl	8001c82 <_fstat>
 8006af2:	1c43      	adds	r3, r0, #1
 8006af4:	d102      	bne.n	8006afc <_fstat_r+0x1c>
 8006af6:	682b      	ldr	r3, [r5, #0]
 8006af8:	b103      	cbz	r3, 8006afc <_fstat_r+0x1c>
 8006afa:	6023      	str	r3, [r4, #0]
 8006afc:	bd38      	pop	{r3, r4, r5, pc}
 8006afe:	bf00      	nop
 8006b00:	20001b40 	.word	0x20001b40

08006b04 <_isatty_r>:
 8006b04:	b538      	push	{r3, r4, r5, lr}
 8006b06:	4d06      	ldr	r5, [pc, #24]	; (8006b20 <_isatty_r+0x1c>)
 8006b08:	2300      	movs	r3, #0
 8006b0a:	4604      	mov	r4, r0
 8006b0c:	4608      	mov	r0, r1
 8006b0e:	602b      	str	r3, [r5, #0]
 8006b10:	f7fb f8c7 	bl	8001ca2 <_isatty>
 8006b14:	1c43      	adds	r3, r0, #1
 8006b16:	d102      	bne.n	8006b1e <_isatty_r+0x1a>
 8006b18:	682b      	ldr	r3, [r5, #0]
 8006b1a:	b103      	cbz	r3, 8006b1e <_isatty_r+0x1a>
 8006b1c:	6023      	str	r3, [r4, #0]
 8006b1e:	bd38      	pop	{r3, r4, r5, pc}
 8006b20:	20001b40 	.word	0x20001b40

08006b24 <_kill_r>:
 8006b24:	b538      	push	{r3, r4, r5, lr}
 8006b26:	4d07      	ldr	r5, [pc, #28]	; (8006b44 <_kill_r+0x20>)
 8006b28:	2300      	movs	r3, #0
 8006b2a:	4604      	mov	r4, r0
 8006b2c:	4608      	mov	r0, r1
 8006b2e:	4611      	mov	r1, r2
 8006b30:	602b      	str	r3, [r5, #0]
 8006b32:	f7fb f847 	bl	8001bc4 <_kill>
 8006b36:	1c43      	adds	r3, r0, #1
 8006b38:	d102      	bne.n	8006b40 <_kill_r+0x1c>
 8006b3a:	682b      	ldr	r3, [r5, #0]
 8006b3c:	b103      	cbz	r3, 8006b40 <_kill_r+0x1c>
 8006b3e:	6023      	str	r3, [r4, #0]
 8006b40:	bd38      	pop	{r3, r4, r5, pc}
 8006b42:	bf00      	nop
 8006b44:	20001b40 	.word	0x20001b40

08006b48 <_getpid_r>:
 8006b48:	f7fb b834 	b.w	8001bb4 <_getpid>

08006b4c <_malloc_usable_size_r>:
 8006b4c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006b50:	1f18      	subs	r0, r3, #4
 8006b52:	2b00      	cmp	r3, #0
 8006b54:	bfbc      	itt	lt
 8006b56:	580b      	ldrlt	r3, [r1, r0]
 8006b58:	18c0      	addlt	r0, r0, r3
 8006b5a:	4770      	bx	lr

08006b5c <_init>:
 8006b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b5e:	bf00      	nop
 8006b60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006b62:	bc08      	pop	{r3}
 8006b64:	469e      	mov	lr, r3
 8006b66:	4770      	bx	lr

08006b68 <_fini>:
 8006b68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b6a:	bf00      	nop
 8006b6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006b6e:	bc08      	pop	{r3}
 8006b70:	469e      	mov	lr, r3
 8006b72:	4770      	bx	lr
